<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用好的 CDN 让你的网站获得更快的加载速度</title>
    <url>/2020/posts/62a00332/index.html</url>
    <content><![CDATA[<p><a href="https://www.upyun.com/tech/article/551/%E6%9C%89%E5%A5%96%E5%BE%81%E6%96%87%EF%BD%9C%E5%8F%88%E6%8B%8D%E4%BA%91%E5%8E%9F%E5%88%9B%E6%8A%80%E6%9C%AF%E5%BE%81%E6%96%87%E5%A4%A7%E8%B5%9B%EF%BC%8CFILCO%E9%94%AE%E7%9B%98%E3%80%81%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF%E3%80%81%E4%BB%A3%E9%87%91%E5%88%B8%E7%AD%89%E4%BD%A0%E6%9D%A5%E6%8B%BF.html">本文参加又拍云技术征文活动!</a></p>
<p>Cover 来自<a href="https://www.impdx.vip/">impdx</a></p>
<p>大家好，本文章我来教大家如何使用好的 CDN 让你的网站获得更快的速度</p>
<h1 id="了解什么是-CDN"><a href="#了解什么是-CDN" class="headerlink" title="了解什么是 CDN"></a>了解什么是 CDN</h1><p>CDN 的全称是 Content Delivery Network，即<a href="https://baike.baidu.com/item/%E5%86%85%E5%AE%B9%E5%88%86%E5%8F%91%E7%BD%91%E7%BB%9C/4034265">内容分发网络</a>。CDN 是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。</p>
<p>简单来说就是将你原站的服务分发给 CDN 的各个机器，然后当你访问套上 CDN 的网站时将你 301 到最近的服务</p>
<h1 id="CDN-的作用"><a href="#CDN-的作用" class="headerlink" title="CDN 的作用"></a>CDN 的作用</h1><p>CDN 主要用来:</p>
<p>1.下载</p>
<p>2.音视频点播</p>
<p>3.加速网站</p>
<p>4.存储文件</p>
<h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h1><p>本期教程使用又拍云</p>
<p>废话不多说，进入正题</p>
<h1 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h1><p>第一步当然是注册账号啦</p>
<p>进入<a href="https://www.upyun.com/">又拍云官网</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/12T.png#alt=#align=left&display=inline&height=760&margin=%5Bobject%20Object%5D&originHeight=760&originWidth=1600&status=done&style=none&width=1600"></p>
<h6 id="点击右上角的注册有礼"><a href="#点击右上角的注册有礼" class="headerlink" title="点击右上角的注册有礼"></a>点击右上角的注册有礼</h6><p>在接下来的页面里面会出现两个选项</p>
<p>1.申请个人账号</p>
<p>2.申请企业账号</p>
<p>对于我们当然是选个人帐号啦</p>
<p>然后注册你们应该都懂，这边就不多说啦</p>
<h1 id="配置-CDN"><a href="#配置-CDN" class="headerlink" title="配置 CDN"></a>配置 CDN</h1><p>注册好了当然要配置 CDN 拉</p>
<p>在这之前，我们需要实名~</p>
<p>我们需要进入<a href="https://console.upyun.com/account/profile/">实名页面</a></p>
<p>接下来点击实名认证</p>
<p>然后上传自己的手持身份证照</p>
<p>或者使用支付宝实名</p>
<p>等待又小拍审核通过后就能开始配置拉</p>
<p>点击云产品-CDN</p>
<p>看到右上角大大的创建服务了吗</p>
<p>点他，点他，点他~</p>
<p>接下来你会被传送到创建 CDN 服务页面</p>
<p>根据他的介绍来填写</p>
<p>注意:加速域名需备案哦</p>
<p>创建完成后看到你的加速域名后面有个拒绝了嘛，看到了就是你没备案哦</p>
<p>这时候 CDN 已经搞 ♂ 好了</p>
<p>接下来就访问看看吧</p>
<p>如果出现 handshake failed 错误就是因为你的原站使用了强制 HTTPS 而 CDN 没配置 HTTPS</p>
<p>这个亚子去又拍云申请一个免费的 SSL 就行了</p>
]]></content>
  </entry>
  <entry>
    <title>使用Cloud Studio在云端写作✍</title>
    <url>/2021/posts/2ir0l12g/index.html</url>
    <content><![CDATA[<p>本文章首发于<a href="https://www.yuque.com/ladjeek/ygg4q6/af1bhg">语雀</a>!<br>通过各种高科技功能同步到<a href="https://blog.slqwq.cn/">Hajeekn 的博客</a></p>
<p>Hey，这篇文章我们会为你介绍一个写作的新方法——Cloud Studio 云写作</p>
<h1 id="初始化-Cloud-Studio"><a href="#初始化-Cloud-Studio" class="headerlink" title="初始化 Cloud Studio"></a>初始化 Cloud Studio</h1><p>想要在 Cloud Studio 云写作，首先你要上传源码到仓库。<br>你可以上传到 GitLab、GitHub、Coding 等代码托管商<br>首先我们打开 Cloud Studio<br>地址为你的项目名.cloudstudio.net/dashboard/workspace<br>进入后选择新建工作空间<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2021/png/12488964/1611222120773-c5d20529-7f4b-477b-b735-8f7f7392f462.png#align=left&display=inline&height=102&margin=%5Bobject%20Object%5D&name=image.png&originHeight=203&originWidth=539&size=7574&status=done&style=none&width=269.5" alt="image.png"><br>工作空间名可以随便填<br>运行环选择 Node.js<br>代码来源可以选择空</p>
<h1 id="同步仓库"><a href="#同步仓库" class="headerlink" title="同步仓库"></a>同步仓库</h1><p>现在进入工作空间后我们选择上栏的终端<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2021/png/12488964/1611367024807-7eb3eb25-f171-4f47-8e6e-4c62afc4ee53.png#align=left&display=inline&height=25&margin=%5Bobject%20Object%5D&name=image.png&originHeight=49&originWidth=1237&size=11027&status=done&style=none&width=618.5" alt="image.png"><br>新建终端<br>然后在下面就会出现类似这样的东西<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2021/png/12488964/1611367057784-c877204a-5f37-4e8a-9cee-fc4aec40e5fb.png#align=left&display=inline&height=144&margin=%5Bobject%20Object%5D&name=image.png&originHeight=288&originWidth=1604&size=17780&status=done&style=none&width=802" alt="image.png"><br>这就是我们的终端了，现在你要把你博客上传到 GitHub 之类的代码托管网站上，方便我们同步。<br>在你的终端内输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone 你的仓库地址 .</span><br><span class="line">&#96;&#96;&#96;bash</span><br><span class="line">git clone 你的仓库地址 .</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2021/png/12488964/1611367729992-72d4fbfb-e208-414e-bc71-bc6753f34fe7.png#align=left&display=inline&height=357&margin=%5Bobject%20Object%5D&name=image.png&originHeight=714&originWidth=375&size=44304&status=done&style=none&width=187.5" alt="image.png"><br>克隆完后在右边就会出现你的文件，这时候你就可以像本地一样正常写文章了哦<br>（其实笔者还是认为 GitHub Actions 自动部署好一点)</p>
<h1 id="Thanks-For-You"><a href="#Thanks-For-You" class="headerlink" title="Thanks For You"></a>Thanks For You</h1><h2 id="©2020-Now-year-本篇文章由-SL-发布到语雀，通过百度云函数及-Webhook-同步到-SL-的博客-未经允许，可以转载"><a href="#©2020-Now-year-本篇文章由-SL-发布到语雀，通过百度云函数及-Webhook-同步到-SL-的博客-未经允许，可以转载" class="headerlink" title="©2020-Now year 本篇文章由 SL 发布到语雀，通过百度云函数及 Webhook 同步到 SL 的博客~未经允许，可以转载"></a>©2020-Now year 本篇文章由 SL 发布到语雀，通过百度云函数及 Webhook 同步到 SL 的博客~未经允许，可以转载</h2>]]></content>
      <categories>
        <category>Hexo</category>
        <category>云端写作</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>云端</tag>
        <tag>高效写作</tag>
      </tags>
  </entry>
  <entry>
    <title>如何创建自己的Office E5</title>
    <url>/2020/posts/143f7edb/index.html</url>
    <content><![CDATA[<p>注：本文转载自 MBRjun 的学习记录</p>
<p><a href="https://blog.mbrjun.cn/archives/10/">https://blog.mbrjun.cn/archives/10/</a></p>
<p>教程首先点击这里，然后点击 Join Now</p>
<p>然后登录，似乎个人和工作教育账户都可以，也可以 Github 登录<img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/1.png##align=left&display=inline&height=460&margin=%5Bobject%20Object%5D&originHeight=460&originWidth=550&status=done&style=none&width=550"></p>
<p>小编（营销号内味）用 Windows Hello 登录给大家演示</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/2.png##align=left&display=inline&height=463&margin=%5Bobject%20Object%5D&originHeight=463&originWidth=550&status=done&style=none&width=550"></p>
<p>登录你的账户</p>
<p>填写信息，国家地区填你所在的（本项需如实填写，有验证，并且决定后续的绑定），公司可以随便填，下面两个必须都勾选才能成功白嫖，然后下一步</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/4.png##align=left&display=inline&height=674&margin=%5Bobject%20Object%5D&originHeight=674&originWidth=601&status=done&style=none&width=601"></p>
<p>下面的信息如图填写，自己填写没白嫖到 Micorosft365 别找我第一组勾选个人</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/5.png##align=left&display=inline&height=208&margin=%5Bobject%20Object%5D&originHeight=208&originWidth=619&status=done&style=none&width=619"></p>
<p>下面一组全部勾选，然后下一步</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/6.png##align=left&display=inline&height=289&margin=%5Bobject%20Object%5D&originHeight=289&originWidth=529&status=done&style=none&width=529"></p>
<p>点击关闭即可</p>
<p>点击设置订阅</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/7.png##align=left&display=inline&height=90&margin=%5Bobject%20Object%5D&originHeight=90&originWidth=545&status=done&style=none&width=545"></p>
<p>设置你的账户和密码 不用多说了吧 国家和地区决定了电话验证码地区</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/8.png##align=left&display=inline&height=372&margin=%5Bobject%20Object%5D&originHeight=372&originWidth=769&status=done&style=none&width=769"></p>
<p>手机上接收下验证码</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/9.png##align=left&display=inline&height=578&margin=%5Bobject%20Object%5D&originHeight=578&originWidth=562&status=done&style=none&width=562"></p>
<p>等待分配资源</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/10.png##align=left&display=inline&height=583&margin=%5Bobject%20Object%5D&originHeight=583&originWidth=560&status=done&style=none&width=560"></p>
<p>分配完成</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/2020514/11.png##align=left&display=inline&height=434&margin=%5Bobject%20Object%5D&originHeight=434&originWidth=387&status=done&style=none&width=387"></p>
<p>到这里你已经成功的白嫖到了 Microsoft 365，点击查看资源开始使用</p>
<p>续期方法：</p>
<p>使用 Oneindex 上传文件</p>
<p>前提：OneDrive 必须分配完成</p>
]]></content>
  </entry>
  <entry>
    <title>博客效果展示</title>
    <url>/2020/posts/e8563c5f/index.html</url>
    <content><![CDATA[<p>下面上效果展示</p>
<p>错误标签</p>
<p>警告标签</p>
<p>成功标签</p>
<p>默认标签</p>
<p>测</p>
<p>a</p>
<p>Hexo</p>
<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">开始背书
  </button><span class="hide-content">海内存知己‚天涯若比邻</span></span>

<div class="note primary flat"><p>初级标签</p>
</div>

<div class="note success flat"><p>Codeblock in note</p>
<p>成功标签</p>
</div>

<div class="note info flat"><p>Info Header</p>
<p>信息标签</p>
</div>

<div class="note warning flat"><p>Warning Header</p>
<p>警告标签</p>
</div>

<div class="note danger flat"><p>Danger Header</p>
<p>危险标签</p>
</div>

<div class="note info no-icon flat"><p>No icon note</p>
<p><code>note info no-icon</code></p>
<p>无图标标签</p>
</div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">代码框标签，效果和&#96;&#96;一样</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>黄色色块</p>
<p>左边框红色块级</p>
<div class='checkbox'><input type="checkbox" />
            <p>纯文本测试</p>
            </div>

<div class='checkbox checked'><input type="checkbox" checked="checked"/>
            <p>支持简单的 markdown 语法</p>
            </div>

<div class='checkbox red'><input type="checkbox" />
            <p>支持自定义颜色</p>
            </div>

<div class='checkbox green checked'><input type="checkbox" checked="checked"/>
            <p>绿色 + 默认选中</p>
            </div>

<div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>
            <p>黄色 + 默认选中</p>
            </div>

<div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>
            <p>青色 + 默认选中</p>
            </div>

<div class='checkbox blue checked'><input type="checkbox" checked="checked"/>
            <p>蓝色 + 默认选中</p>
            </div>

<div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>
            <p>增加</p>
            </div>

<div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>
            <p>减少</p>
            </div>

<div class='checkbox times red checked'><input type="checkbox" checked="checked"/>
            <p>叉</p>
            </div>

<div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>测试</span></div>
    <div class="hide-content"><p>测试一下</p>
</div></div>

<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">看看答案
  </button><span class="hide-content">我是答案</span></span>

<p>这是黑体字</p>
<p>这是微软雅黑</p>
<p>这是华文彩云</p>
<p>三号蓝色黑体</p>
<p>四号青色字</p>
<p>五号灰色字</p>
<p><a href="https://pan.baidu.com/">点击下载</a></p>
<p><a href="https://pan.baidu.com/">点击下载</a></p>
<p><a href="https://pan.baidu.com/">点击下载</a></p>
<p><a href="https://pan.baidu.com/">点击下载</a></p>
<p><a href="https://pan.baidu.com/">点击下载</a></p>
<p><a href="https://pan.baidu.com/">点击下载</a></p>
<p><a href="https://pan.baidu.com/">点击下载</a></p>
<p><a href="https://pan.baidu.com/">点击下载</a></p>
<div class="btns ">
            
<a href='/update' title='看看更新吧'><i class='far fa-hand-point-right'></i>看看更新吧</a>

          </div>

<div><a class='link-card' title='[http://localhost:4000/contributors/](http://localhost:4000/contributors/)' href='[http://localhost:4000/contributors/](http://localhost:4000/contributors/)'><div class='left'><img src= "/img/loading.gif" data-lazy-src=[https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/blog/Logo-NavBar@3x.png](https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/blog/Logo-NavBar@3x.png)></div><div class='right'><p class='text'>如何参与项目</p><p class='url'>[http://localhost:4000/contributors/](http://localhost:4000/contributors/)</p></div></a></div>

<div class="timeline"><p class='p h2'>碎碎念</p>
<div class="timenode"><div class="meta"><p><p>2020-08-06 <a href="https://xiaokang.me/">连接测试</a></p>
</p></div><div class="body"><p>今天是 2020-08-06</p></div></div>

<div class="timenode"><div class="meta"><p><p>2020-08-05 <a href="https://xiaokang.me/">连接测试</a></p>
</p></div><div class="body"><p>今天是 2020-08-05</p></div></div>
</div>

<details ><summary> <p>查看图片测试</p> </summary>
              <div class='content'>
              <p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg#alt=#align=left&display=inline&height=1536&margin=%5Bobject%20Object%5D&originHeight=1536&originWidth=2731&status=done&style=none&width=2731"></p>
              </div>
            </details>

<details cyan open><summary> <p>查看默认打开的折叠框</p> </summary>
              <div class='content'>
              <p>这是一个默认打开的折叠框。</p>
              </div>
            </details>

<details green><summary> <p>查看代码测试</p> </summary>
              <div class='content'>
              
              </div>
            </details>

<details yellow><summary> <p>查看列表测试</p> </summary>
              <div class='content'>
              <ul><li>haha</li><li>hehe</li></ul>
              </div>
            </details>

<details red><summary> <p>查看嵌套测试</p> </summary>
              <div class='content'>
              <details blue><summary> <p>查看嵌套测试2</p> </summary>              <div class='content'>              <details ><summary> <p>查看嵌套测试3</p> </summary>              <div class='content'>              <p>hahaha <img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png##align=left&display=inline&height=60&margin=%5Bobject%20Object%5D&originHeight=60&originWidth=60&status=done&style=none&width=60"></p>              </div>            </details>              </div>            </details>
              </div>
            </details>
]]></content>
  </entry>
  <entry>
    <title>使用 Travis CI 持续集成工具自动化部署 Hexo</title>
    <url>/2020/posts/9ed5997f/index.html</url>
    <content><![CDATA[<p>众所周知，Hexo 是一款免费开源的静态博客生成工具，使用它可以快速生成一个博客。但随着文章之类的东西增加，生成的速度也会逐渐变慢，如果你配置不够，那搞不好就要几小时才能生成，并且还有一个好处:</p>
<p>即走即编辑，就算你是手机也可以在线编辑文件，免去配置环境。</p>
<p>所以今天我教大家如何使用持续集成工具—-Travis CI 来部署 Hexo</p>
<h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><p>我们首先打开<a href="https://github.com/">GitHub</a></p>
<p>选择<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200819161129222.png#alt=image-20200819161129222#align=left&display=inline&height=51&margin=%5Bobject%20Object%5D&originHeight=51&originWidth=128&status=done&style=none&width=128"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200819161148025.png#alt=image-20200819161148025#align=left&display=inline&height=879&margin=%5Bobject%20Object%5D&originHeight=879&originWidth=1600&status=done&style=none&width=1600"></p>
<p>仓库名称可以随意</p>
<p>但是一定要选择 Private，不然你的博客源码就会被别人看到，到时候使用 Token 提交的各位小伙伴的仓库就不保喽</p>
<p>创建完成后复制你的仓库克隆地址</p>
<p>在 Hexo 根目录下打开终端</p>
<p>输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add travis 复制的仓库克隆地址</span><br></pre></td></tr></table></figure>

<h1 id="创建-Travis-CI-配置"><a href="#创建-Travis-CI-配置" class="headerlink" title="创建 Travis CI 配置"></a>创建 Travis CI 配置</h1><p>接着去创建一个文件:”.travis.yml”</p>
<p>里面输入</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span> <span class="string">stable</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sudo:</span> <span class="string">required</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Travis-CI Caching</span></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">directories:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">node_modules</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># S: Build Lifecycle</span></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cd</span> <span class="string">./public</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">git</span> <span class="string">init</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">user.name</span> <span class="string">&quot;NAME&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">git</span> <span class="string">config</span> <span class="string">user.email</span> <span class="string">&quot;EMAIL&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">git</span> <span class="string">add</span> <span class="string">.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">git</span> <span class="string">commit</span> <span class="string">-m</span> <span class="string">&quot;Update&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">git</span> <span class="string">push</span> <span class="string">--force</span> <span class="string">--quiet</span> <span class="string">&quot;XXX&quot;</span> <span class="string">master:master</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">git</span> <span class="string">push</span> <span class="string">--force</span> <span class="string">--quiet</span> <span class="string">&quot;XXX&quot;</span> <span class="string">master:master</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># after_script:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>其中 NAME 改为 git 用户名 EMAIL 改为邮箱 XXX 改为 GitHub/Coding 的部署地址(Token)(下文会讲到)</p>
<h1 id="配置-GitHub-Token"><a href="#配置-GitHub-Token" class="headerlink" title="配置 GitHub Token"></a>配置 GitHub Token</h1><p>写完之后去<a href="https://github.com/settings/tokens">GitHub</a>创建一个 Token</p>
<p>权限直接全选</p>
<p>然后把你 Hexo 配置 GitHub 的 SSH/HTTPS 部署地址改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;你的token@github.com&#x2F;用户名&#x2F;仓库.git</span><br></pre></td></tr></table></figure>

<h1 id="配置-Coding-Token-有就使用，没有就不使用"><a href="#配置-Coding-Token-有就使用，没有就不使用" class="headerlink" title="配置 Coding Token(有就使用，没有就不使用)"></a>配置 Coding Token(有就使用，没有就不使用)</h1><p>进入 Coding 企业</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/20200819172348.png#alt=image-20200819172330736#align=left&display=inline&height=432&margin=%5Bobject%20Object%5D&originHeight=432&originWidth=296&status=done&style=none&width=296"></p>
<p>右上角找到个人账户设置</p>
<p>进入访问令牌设置</p>
<p>新建令牌</p>
<p>权限依然全选</p>
<p>选择完后将你 Hexo 的 codingSSH/HTTPS 部署地址改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;username:password@e.coding.net&#x2F;用户名&#x2F;仓库名.git</span><br></pre></td></tr></table></figure>

<h1 id="注册-Travis"><a href="#注册-Travis" class="headerlink" title="注册 Travis"></a>注册 Travis</h1><p>首先我们要打开<a href="https://travis-ci.com/">Travis 官网</a></p>
<p>然后注册一个账户</p>
<p>注册完成后会跳转到仪表盘</p>
<p>我们点击那个小加号</p>
<p>找到从跳转的页面找到我们刚才创建的仓库</p>
<p>可以看到没有构建接下来我们</p>
<p>在终端内输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add --all</span><br><span class="line">git commit -m <span class="string">&quot;这里随便&quot;</span></span><br><span class="line">git push -u travis master -f</span><br></pre></td></tr></table></figure>

<p>提交完成后就刷新看看你的 Travis 吧</p>
]]></content>
  </entry>
  <entry>
    <title>白嫖超好用的CDN(GitHub+Jsdelivr)</title>
    <url>/2020/posts/d6df3a18/index.html</url>
    <content><![CDATA[<p>hi，各位好。</p>
<p>今天我来教大家白嫖 CDN</p>
<h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><p>登陆 GitHub</p>
<p>新建一个仓库，名字随意</p>
<div class="note info flat"><p>一定要是公开!</p>
</div>

<h1 id="生成-Tokens"><a href="#生成-Tokens" class="headerlink" title="生成 Tokens"></a>生成 Tokens</h1><p>打开</p>
<p><a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a></p>
<p>在页面内选择 Generate new token</p>
<p>输入密码后进行下一步</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Open-super/ImgHosting//SuperImg/XbPost2.png##align=left&display=inline&height=633&margin=%5Bobject%20Object%5D&originHeight=633&originWidth=743&status=done&style=none&width=743"></p>
<p>Note 为你的名字</p>
<div class="note warning flat"><p>权限请选择 repo</p>
</div>

<p>选择好后点击 Generate token</p>
<p>在跳转的页面里面会有一串代码</p>
<p>比如 7513764b740b88c40afc9aa6980989e42axxxxx</p>
<p>这串代码保存下来</p>
<p>接下来会用</p>
<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>进入</p>
<p><a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p>
<p>选择一个版本(这里以 2.2.2 演示)</p>
<p>下载完成后双击打开进行安装</p>
<h1 id="PicGo-主页面"><a href="#PicGo-主页面" class="headerlink" title="PicGo 主页面"></a>PicGo 主页面</h1><p>安装好后进去 PicGo</p>
<p>会出现这个界面</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Open-super/ImgHosting//SuperImg/XbPosts3.png##align=left&display=inline&height=450&margin=%5Bobject%20Object%5D&originHeight=450&originWidth=800&status=done&style=none&width=800"></p>
<h1 id="设置图床"><a href="#设置图床" class="headerlink" title="设置图床"></a>设置图床</h1><p>选择图床设置</p>
<p>找到 GitHub 图床</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Open-super/ImgHosting//SuperImg/XbPosts4.png##align=left&display=inline&height=450&margin=%5Bobject%20Object%5D&originHeight=450&originWidth=800&status=done&style=none&width=800"></p>
<p>这些都设置完后进入上传区</p>
<p>将最上面的</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Open-super/ImgHosting//SuperImg/XbPosts5.png##align=left&display=inline&height=51&margin=%5Bobject%20Object%5D&originHeight=51&originWidth=267&status=done&style=none&width=267"></p>
<p>改为 GitHub 图床</p>
<p>接下来就可以上传一个文件测试了</p>
<p>我来放一个测试图</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/Open-super/ImgHosting//SuperImg/Test/%E7%95%8C%E9%9D%A2%E5%9B%BE.png##align=left&display=inline&height=646&margin=%5Bobject%20Object%5D&originHeight=646&originWidth=924&status=done&style=none&width=924"></p>
<p>可以看到加载的速度非常快</p>
<p>如果有问题请在下方留言!</p>
]]></content>
  </entry>
  <entry>
    <title>如何使用在线工具 - Photopea</title>
    <url>/2020/posts/c9f23913/index.html</url>
    <content><![CDATA[<p>众所周知，Adobe 全家桶的”PS”是处理图片不可缺少的一款工具</p>
<p>可稍不注意就会</p>
<p><strong>无响应警告</strong></p>
<p>不过国外有一位大神开发出了在线版本的”PS”，并且将”PS”的大部分功能都给还原了</p>
<p>这是由 Ivan Kuckir 大神开发的<a href="https://www.photopea.com/">Photopea</a></p>
<p>我们首先打开这个网站</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20201002173033869.png#alt=image-20201002173033869#align=left&display=inline&height=757&margin=%5Bobject%20Object%5D&originHeight=757&originWidth=1598&status=done&style=none&width=1598"></p>
<p>点击新建项目，当然也可以从电脑打开</p>
<p>接下来它会让我们选择项目大小和模板之类的</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20201002173225825.png#alt=image-20201002173225825#align=left&display=inline&height=593&margin=%5Bobject%20Object%5D&originHeight=593&originWidth=1398&status=done&style=none&width=1398"></p>
<p>这里可以直接不选择模板直接选择大小，然后填写一下名字就创建</p>
<p>进入项目后可以看到这样的界面</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20201002173336634.png#alt=image-20201002173336634#align=left&display=inline&height=757&margin=%5Bobject%20Object%5D&originHeight=757&originWidth=1598&status=done&style=none&width=1598"></p>
<p>接下来我演示怎么做一个简单的 Logo</p>
<p>首先点击左边工具栏的”T”(文字工具)<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20201002173419179.png#alt=image-20201002173419179#align=left&display=inline&height=36&margin=%5Bobject%20Object%5D&originHeight=36&originWidth=41&status=done&style=none&width=41"></p>
<p>接着在上方会出现<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20201002173450316.png#alt=image-20201002173450316#align=left&display=inline&height=39&margin=%5Bobject%20Object%5D&originHeight=39&originWidth=690&status=done&style=none&width=690"></p>
<p>这里我们可以自己调节字体、文字大小、文字颜色等</p>
<p>这里我选的是 Hanalei Fill 字体</p>
<p>大小我调节的是 499px</p>
<p>然后写入自己想要的文字</p>
<p>写入完成后是这个样子的</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20201002174430487.png#alt=image-20201002174430487#align=left&display=inline&height=60&margin=%5Bobject%20Object%5D&originHeight=60&originWidth=239&status=done&style=none&width=239"></p>
<p>接下来我们贴个图</p>
<p>去<a href="https://iconfont.cn/">iconfont</a>找个好康的图标，下载下来 png</p>
<p>下载下来 PNG 后<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20201002174611722.png#alt=#align=left&display=inline&height=78&margin=%5Bobject%20Object%5D&originHeight=78&originWidth=67&status=done&style=none&width=67">将这个图片拖进 Photopea</p>
<p>然后调好大小就完成了</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20201002174652493.png#alt=image-20201002174652493#align=left&display=inline&height=503&margin=%5Bobject%20Object%5D&originHeight=503&originWidth=778&status=done&style=none&width=778"></p>
<p>接着点击文件-另存为 PSD 保存这个工程文件，方便下次修改</p>
<p>然后点击<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20201002174746827.png#alt=image-20201002174746827#align=left&display=inline&height=37&margin=%5Bobject%20Object%5D&originHeight=37&originWidth=65&status=done&style=none&width=65"></p>
<p>然后就可以下载下来 Logo 了</p>
<p>顺便这个网站还提供 SVG 下载哦</p>
<p>总结:齐全的功能，多语言支持，佩服作者 👍</p>
]]></content>
      <categories>
        <category>实用工具</category>
        <category>在线工具</category>
      </categories>
      <tags>
        <tag>实用工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Butterfly实现Aplayer+Meting不断歌</title>
    <url>/2020/posts/d18e7002/index.html</url>
    <content><![CDATA[<p>最近有人问我，我博客上的那个播放器是怎么弄的</p>
<p>放图:</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200718152748692.png#alt=image-20200718152748692#align=left&display=inline&height=67&margin=%5Bobject%20Object%5D&originHeight=67&originWidth=370&status=done&style=none&width=370"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200718152758273.png#alt=image-20200718152758273#align=left&display=inline&height=162&margin=%5Bobject%20Object%5D&originHeight=162&originWidth=371&status=done&style=none&width=371"></p>
<p>其实要实现我博客的这个 Meting+Aplayer 很简单</p>
<p>首先你需要更新到 Butterfly 的 Pjax 分支</p>
<p>然后去 themes/Butterfly/source 里新建个 JS，名字随意</p>
<p>接着编辑这个文件</p>
<p>里面填写</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.writeln(</span><br><span class="line">  <span class="string">&quot;&lt;script src=&#x27;https://cdn.jsdelivr.net/npm/pjax/pjax.min.js&#x27;&gt;&lt;/script&gt;&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&lt;script&gt;var pjax = new Pjax(&#123;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  selectors: [&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    &#x27;title&#x27;,&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    &#x27;meta[name=description]&#x27;,&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    &#x27;#config_change&#x27;,&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    &#x27;#body-wrap&#x27;,&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    &#x27;#rightside&#x27;,&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    &#x27;.js-pjax&#x27;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  ],&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  cacheBust: false,&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&#125;)&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;document.addEventListener(&#x27;pjax:complete&#x27;, function () &#123;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  refreshFn()&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  $(&#x27;script[data-pjax]&#x27;).each(function () &#123;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    $(this).parent().append($(this).remove())&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  &#125;)&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  GLOBAL_CONFIG.islazyload &amp;&amp; lazyLoadInstance.update()&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  typeof chatBtnFn === &#x27;function&#x27; &amp;&amp; chatBtnFn()&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  typeof panguInit === &#x27;function&#x27; &amp;&amp; panguInit()&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  if (typeof gtag === &#x27;function&#x27;) &#123;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(</span><br><span class="line">  <span class="string">&quot;    gtag(&#x27;config&#x27;, &#x27;ca-pub-1197128104711052&#x27;, &#123;&#x27;page_path&#x27;: window.location.pathname&#125;);&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  &#125;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  if (document.getElementsByClassName(&#x27;aplayer&#x27;).length)&#123;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    loadMeting()&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  &#125;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&#125;)&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;document.addEventListener(&#x27;pjax:send&#x27;, function () &#123;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  if (window.aplayers) &#123;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    for (let i = 0; i &lt; window.aplayers.length; i++) &#123;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;      if (!window.aplayers[i].options.fixed) &#123;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;        window.aplayers[i].destroy()&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;      &#125;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;    &#125;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  &#125;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  $(window).off(&#x27;scroll&#x27;)&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  //reset readmode&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(</span><br><span class="line">  <span class="string">&quot;  $(&#x27;body&#x27;).hasClass(&#x27;read-mode&#x27;) &amp;&amp; $(&#x27;body&#x27;).removeClass(&#x27;read-mode&#x27;)&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;  //reset font-size&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(</span><br><span class="line">  <span class="string">&quot;  $(&#x27;body&#x27;).css(&#x27;font-size&#x27;) !== originFontSize &amp;&amp; $(&#x27;body&#x27;).css(&#x27;font-size&#x27;, parseFloat(originFontSize))&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">&quot;&#125;)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.writeln(</span><br><span class="line">  <span class="string">&quot;&lt;link rel=&#x27;stylesheet&#x27; href=&#x27;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#x27;&gt;&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">document</span>.writeln(</span><br><span class="line">  <span class="string">&quot;&lt;script src=&#x27;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#x27;&gt;&lt;/script&gt;&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">document</span>.writeln(</span><br><span class="line">  <span class="string">&quot;&lt;script src=&#x27;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#x27;&gt;&lt;/script&gt;&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="built_in">document</span>.writeln(</span><br><span class="line">  <span class="string">&quot;&lt;meting-js server=&#x27;netease&#x27; type=&#x27;playlist&#x27; id=&#x27;2187995420&#x27; fixed=&#x27;true&#x27;&gt;&lt;/meting-js&gt;&quot;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>别忘记把 id 那里的数字改成你自己的歌单</p>
<p>解析:</p>
<p>server=’\netease’   -&gt;平台名称。netease：网易；tencent：腾讯；xiami：虾米；kugou：酷狗；baidu：百度</p>
<p>type=’\playlist\‘       -&gt;类型。playlist：歌单；song：单曲；专辑：album；关键词：search；歌手：artist</p>
<p>id=’\XXXX’                 -&gt;音乐页面链接上的 id 号</p>
<p>更多参数请参考</p>
<p><a href="https://github.com/metowolf/MetingJS">MetingGitHub</a></p>
<p>添加好 js 后还需要引用</p>
<p>打开 Hexo 根目录/source/_data 的 butterfly.yml</p>
<p>往下滑,找到 Inject 的 bottom</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200718154055037.png#alt=image-20200718154055037#align=left&display=inline&height=443&margin=%5Bobject%20Object%5D&originHeight=443&originWidth=918&status=done&style=none&width=918"></p>
<p>在 bottom 里面添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/刚才创建的JS的名字.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>接着在你的终端里输入 hexo clean &amp;&amp; hexo s</p>
<p>然后就会看到播放器了</p>
<h1 id="JS-解剖"><a href="#JS-解剖" class="headerlink" title="JS 解剖"></a>JS 解剖</h1><p>1-51 为 Pjax 的 Lancher Command</p>
<p>52-55 为 Aplayer+MetingJS 的 Core Command</p>
<h1 id="实现-Aplayer-MettingJS-Pjax-的第二种方法-来自群友小康大佬"><a href="#实现-Aplayer-MettingJS-Pjax-的第二种方法-来自群友小康大佬" class="headerlink" title="实现 Aplayer+MettingJS+Pjax 的第二种方法(来自群友小康大佬~)"></a>实现 Aplayer+MettingJS+Pjax 的第二种方法(来自群友小康大佬~)</h1><p>1.把主题配置的</p>
<p>aplayer:</p>
<ul>
<li>asset_inject 改为 false</li>
</ul>
<p>然后将主题的 aplayerInject 改为 true</p>
]]></content>
      <categories>
        <category>Pjax系列</category>
        <category>播放器</category>
        <category>Javascript</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Aplayer</tag>
        <tag>Meting</tag>
      </tags>
  </entry>
  <entry>
    <title>用Jsdelivr存储视频</title>
    <url>/2020/posts/e2973985/index.html</url>
    <content><![CDATA[<p>众所周知，Jsdelivr 是个免费、开源的 CDN，你可以在上面存储小于 20MB 的文件</p>
<p>那么视频也可以?当然，但是 Jsdelivr 对于音视频的解码不太好，在 PC 上打开直接成为一段音轨。</p>
<p>不过我们可以采用 M3U8 的方式进行视频存储</p>
<p>接下来就开始教程</p>
<h1 id="视频切片"><a href="#视频切片" class="headerlink" title="视频切片"></a>视频切片</h1><p>申明一下，这不是简单的切片，这个切片利用了 HLS 技术:</p>
<div class="note info modern"><p>HLS 的工作原理是把整个流分成一个个小的基于 HTTP 的文件来下载，每次只下载一些。当媒体流正在播放时，客户端可以选择从许多不同的备用源中以不同的速率下载同样的资源，允许流媒体会话适应不同的数据速率。在开始一个流媒体会话时，客户端会下载一个包含元数据的 extended M3U (m3u8) playlist 文件，用于寻找可用的媒体流。HLS 只请求基本的 HTTP 报文，与实时传输协议（RTP）不同，HLS 可以穿过任何允许 HTTP 数据通过的防火墙或者代理服务器。它也很容易使用内容分发网络来传输媒体流。</p>
</div>

<p>在我们的需求中，可以简单地把视频的地址理解为 playlist 的地址，而 playlist 就是我们单个视频片段的索引，把较大的视频给宅分就可以绕过存储单件大小限制，同时也符合 jsdelivr 丢资源的要求，这样就可以用 GitHub+Jsdelivr 做视频床了。</p>
<p>咋实现呢?</p>
<h1 id="获取重要工具-ffmpeg"><a href="#获取重要工具-ffmpeg" class="headerlink" title="获取重要工具-ffmpeg"></a>获取重要工具-ffmpeg</h1><p><a href="https://ffmpeg.zeranoe.com/builds/"> Get ffmpeg</a></p>
<p>下载后可以看到有三个 exe</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/image-20201101122004635.png#alt=image-20201101122004635#align=left&display=inline&height=890&margin=%5Bobject%20Object%5D&originHeight=890&originWidth=1210&status=done&style=none&width=1210"></p>
<p>仅需脱出 ffmpeg.exe 即可</p>
<p>接着打开终端</p>
<p>输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./ffmpeg.exe</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/image-20201101122241135.png#alt=image-20201101122241135#align=left&display=inline&height=1020&margin=%5Bobject%20Object%5D&originHeight=1020&originWidth=1920&status=done&style=none&width=1920"></p>
<p>就会弹出 ffmpeg 的参数</p>
<p>说明你弄正确了，但你觉得太麻烦的话可以自行百度添加环境变量</p>
<h1 id="开始切片"><a href="#开始切片" class="headerlink" title="开始切片"></a>开始切片</h1><ol>
<li>视频转为 ts 格式，一对一，转换后大小没变化</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./ffmpeg.exe -y -i 视频.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 视频.ts</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/image-20201101123540046.png#alt=image-20201101123540046#align=left&display=inline&height=383&margin=%5Bobject%20Object%5D&originHeight=383&originWidth=1200&status=done&style=none&width=1200"></p>
<ol start="2">
<li>将 ts 进行分片，每 5 秒为一片</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./ffmpeg.exe -i 视频.ts -c copy -map 0 -f segment -segment_list playlist.m3u8 -segment_time 5 视频%03d.ts</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/image-20201101123856094.png#alt=image-20201101123856094#align=left&display=inline&height=774&margin=%5Bobject%20Object%5D&originHeight=774&originWidth=1669&status=done&style=none&width=1669"></p>
<p>分片完成后可以看到多了一些 ts</p>
<p>之后我们删除你的原视频和原视频转换的 ts</p>
<ol start="3">
<li>使用 DPlayer 播放器解析</li>
</ol>
<div class="note warning modern"><p>注:这不是单纯的分片，如果你不信就可以自己打开看看，是乱码。</p>
</div>

<p>当然直接试图访问 m3u8 也是不行的，我们需要用 hls.js:</p>
<div class="note info modern"><p>hls.js 是一款基于 Media Source Extensions 开发的，用于实现 HTTP Live Streaming 开源 JavaScript 类库。它可以实现将 MPEG-2 和 AAC/MP3 码流变成自制的 MP4 的分片。并且可以直接绑定在 Video 上，实现播放。</p>
</div>

<p>我们使用 DPlayer 播放器，只用在 DPlayer 前引入 hls.js 就可以了</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;div</span><br><span class="line">  id=&quot;dplayer&quot;</span><br><span class="line">  class=&quot;dplayer-video dplayer dplayer-no-danmaku dplayer-paused&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/hls.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/MoePlayer/DPlayer@master/dist/DPlayer.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>引入后我们需要对他进行初始化</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> dp = <span class="keyword">new</span> DPlayer(&#123;</span><br><span class="line">    container: <span class="built_in">document</span>.getElementById(<span class="string">&quot;dplayer&quot;</span>),</span><br><span class="line">    autoplay: !<span class="number">0</span>,</span><br><span class="line">    theme: <span class="string">&quot;#42b983&quot;</span>,</span><br><span class="line">    loop: <span class="literal">true</span>,</span><br><span class="line">    lang: <span class="string">&quot;zh-cn&quot;</span>,</span><br><span class="line">    preload: <span class="string">&quot;auto&quot;</span>,</span><br><span class="line">    volume: <span class="built_in">Number</span>(<span class="string">&quot;0&quot;</span>),</span><br><span class="line">    video: &#123;</span><br><span class="line">      url:</span><br><span class="line">        <span class="string">&quot;https://cdn.jsdelivr.net/gh/glahajeekn/vdts@master/go/playlist.m3u8&quot;</span>, <span class="comment">//自己的m3u8地址</span></span><br><span class="line">      type: <span class="string">&quot;hls&quot;</span>,</span><br><span class="line">      defaultQuality: <span class="number">0</span>,</span><br><span class="line">      pic:</span><br><span class="line">        <span class="string">&quot;https://i2.hdslb.com/bfs/archive/37785c661455874fe424a6731a9c6b82e31cef7a.jpg&quot;</span>, <span class="comment">//视频未播放前的封面</span></span><br><span class="line">      thumbnails: <span class="string">&quot;thumbnails.jpg&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>初始化完成后就可以用了</p>
<p>效果可以查看我的<a href="/VideoPlayer">VideoPlayer</a></p>
]]></content>
      <categories>
        <category>干货</category>
      </categories>
      <tags>
        <tag>Jsdelivr</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 You-get 下载 YouTube 的视频</title>
    <url>/2020/posts/b6b199d4/index.html</url>
    <content><![CDATA[<div class="note warning simple"><p>注:本篇涉及到 Python 和 Terminal!</p>
</div>

<p>现在大部分视频网站都使用 HTML5 播放器</p>
<p>这也使原来可以轻易下载视频的方法失效</p>
<p>因为我们使用 F12 查看后发现地址变成了 blob</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20201226200056.png#alt=image-20201226100904088#align=left&display=inline&height=217&margin=%5Bobject%20Object%5D&originHeight=217&originWidth=293&status=done&style=none&width=293"></p>
<p>这是我们很难进行下载，下载后获取的文件大部分都为 m3u8，根本无法进行解析，于是本文章将教大家使用 GitHub 开源项目:<a href="https://github.com/soimort/you-get">You-get</a>下载视频</p>
<p>(本篇使用 YouTube 示例)</p>
<h1 id="INSTALL-PYTHON"><a href="#INSTALL-PYTHON" class="headerlink" title="INSTALL PYTHON"></a>INSTALL PYTHON</h1><p>首先进入<a href="https://www.python.org/downloads/">Python</a>官网下载 Python 最新版</p>
<p>(本篇写于:2020/12/26 最新版本为 Python 3.9.1)</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20201226200053.png#alt=image-20201226191211672#align=left&display=inline&height=108&margin=%5Bobject%20Object%5D&originHeight=108&originWidth=392&status=done&style=none&width=392"></p>
<p>点击此按钮进行下载</p>
<p>下载后执行下载的文件就可以开始安装了</p>
<p>安装完成后就可进入下一步</p>
<h1 id="更换-PIP-源"><a href="#更换-PIP-源" class="headerlink" title="更换 PIP 源"></a>更换 PIP 源</h1><p>官方默认 pip 源较慢，于是我们可以将他更改为国内 pip 源</p>
<p>进入 C:\Users%username%</p>
<p>在目录下创建一个名为 pip 的文件夹</p>
<p>pip 文件夹内部新建 pip.ini</p>
<p>文件内写入以下代码</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>

<p>接着以管理员身份打开终端</p>
<p>执行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install you-get</span><br></pre></td></tr></table></figure>

<p>安装 you-get 包</p>
<p>安装完后使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">you-get</span><br></pre></td></tr></table></figure>

<p>查看是否安装成功</p>
<p>安装成功后就可进入下一步</p>
<h1 id="下载视频测试"><a href="#下载视频测试" class="headerlink" title="下载视频测试"></a>下载视频测试</h1><p>这里我们去 YouTube 上找一个视频</p>
<p>这里以 4K 为例</p>
<p>我们在终端执行以下指令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">you-get https://www.youtube.com/watch?v=zBKei6Ji_WI</span><br></pre></td></tr></table></figure>

<p>不过可能会半天出不来，这是因为 you-get(python)无法直接被网页代理软件进行代理(如:SSR/V2Ray/SS/Torjan)</p>
<p>如报错图</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20201226200045.png#alt=image-20201226193157126#align=left&display=inline&height=246&margin=%5Bobject%20Object%5D&originHeight=246&originWidth=885&status=done&style=none&width=885"></p>
<p>这时候就要使用 Proxy options(高级参数)</p>
<p>我们对指令进行一下修改</p>
<p>修改后如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">you-get https://www.youtube.com/watch?v=zBKei6Ji_WI -x 127.0.0.1:10809</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20201226200022.png#alt=image-20201226193240675#align=left&display=inline&height=646&margin=%5Bobject%20Object%5D&originHeight=646&originWidth=1470&status=done&style=none&width=1470"></p>
<p>成功开始下载</p>
<h1 id="附文"><a href="#附文" class="headerlink" title="附文"></a>附文</h1><p><a href="https://slqwq.lanzous.com/i6sqSjqqyej">点这里下载 Python(蓝奏云)</a></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Terminal</tag>
      </tags>
  </entry>
  <entry>
    <title>使用&quot;Colour-Buttons&quot;CSS</title>
    <url>/2021/posts/26b85026/index.html</url>
    <content><![CDATA[<p>Color-buttons 是博主(Hajeekn)从 Butterfly 主题搬并独立出来的一个按钮样式</p>
<p>并且我还对他的颜色多样化了，今天教大家如何使用这个东西。</p>
<p>进入<a href="https://github.com/glahajeekn/Color-Buttons">Color-Buttons 仓库</a></p>
<p>您可以选择克隆仓库后手动构建/直接使用我们构建好的样式文件</p>
<p>已经构建好的文件:<a href="https://cdn.jsdelivr.net/npm/color-buttons/dist/colormin.css">https://cdn.jsdelivr.net/npm/color-buttons/dist/colormin.css</a></p>
<p>今天我们以手动构建来演示</p>
<h1 id="1-克隆仓库"><a href="#1-克隆仓库" class="headerlink" title="1.克隆仓库"></a>1.克隆仓库</h1><p>克隆指令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/glahajeekn/Color-Buttons.git &amp;&amp; <span class="built_in">cd</span> Color-Buttons</span><br></pre></td></tr></table></figure>

<p>克隆完成后有这些文件</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20210115194743.png#alt=image-20210115194743381#align=left&display=inline&height=296&margin=%5Bobject%20Object%5D&originHeight=296&originWidth=870&status=done&style=none&width=870"></p>
<p>在终端输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm i</span><br></pre></td></tr></table></figure>

<p>补全依赖(其实也就几个)</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20210115195321.png#alt=image-20210115195321481#align=left&display=inline&height=244&margin=%5Bobject%20Object%5D&originHeight=244&originWidth=1055&status=done&style=none&width=1055"></p>
<h1 id="2-构建文件"><a href="#2-构建文件" class="headerlink" title="2.构建文件"></a>2.构建文件</h1><p>在终端输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure>

<p>构建出 CSS 文件<img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20210115195443.png#alt=image-20210115195443076#align=left&display=inline&height=154&margin=%5Bobject%20Object%5D&originHeight=154&originWidth=917&status=done&style=none&width=917"></p>
<p>构建完成后进入 dist 文件夹内部</p>
<p>就可以看到生成好的文件</p>
<p>你现在就可以用它生成漂亮按钮了</p>
<p>class 名都在这</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20210115200255.png#alt=image-20210115200255445#align=left&display=inline&height=596&margin=%5Bobject%20Object%5D&originHeight=596&originWidth=636&status=done&style=none&width=636"></p>
<h1 id="Thanks-For-You"><a href="#Thanks-For-You" class="headerlink" title="Thanks For You"></a>Thanks For You</h1>]]></content>
  </entry>
  <entry>
    <title>记录一下捣鼓语雀文章同步到Hexo的过程</title>
    <url>/2020/posts/2ed5ru6/index.html</url>
    <content><![CDATA[<p>本文章首发于<a href="https://www.yuque.com/ladjeek/ygg4q6">语雀</a>!<br>通过各种高科技功能同步到<a href="https://blog.slqwq.cn/">Hajeekn 的博客</a><br>起初啦，我本来是想在语雀写文章同步到 Hexo 很方便。<br>可是呢?捣鼓的过程中踩了一系列的坑，这篇文章主要记录一下踩的那些坑</p>
<h1 id="1-文章-Cover-自动被转为链接格式"><a href="#1-文章-Cover-自动被转为链接格式" class="headerlink" title="1.文章 Cover 自动被转为链接格式"></a>1.文章 Cover 自动被转为链接格式</h1><p>这个也是最头疼的事情<br>在我同步文章上去后，文章的 cover 地址全部亮亮的，起初我没注意，不过 GitHub Actions 编译静态文件的时候我注意到了。<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2021/png/12488964/1611116028792-8d1892e2-87b3-402f-a417-8b8d94476b44.png#align=left&display=inline&height=270&margin=%5Bobject%20Object%5D&name=image.png&originHeight=540&originWidth=1059&size=61678&status=done&style=none&width=529.5" alt="image.png"><strong>请大家注意看!</strong><br>在 cover 处<br>原本的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xxxx.com/xxx.png</span><br></pre></td></tr></table></figure>

<p>变成了<code>[]()</code>格式，也就是说语雀平台把这个 cover 配置识别为了一串链接，导致 Hexo 同步下来时渲染失败了。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>在语雀内部点击这个被识别为链接的图片地址，选择删除链接(最后一个)即可</p>
<h1 id="2-写法错误"><a href="#2-写法错误" class="headerlink" title="2.写法错误"></a>2.写法错误</h1><p>同步到语雀后 front-matter 格式和 hexo 本地格式不是一样的。<br>也就是说本地和云端要放两套不同的模板(建议还是把本地的数据备份一下到 OneDrive 之类的网盘)</p>
<h2 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h2><p>这边给大家一套<a href="blog.ccknbc.cc">C 哥</a>用的模板<br>滑稽</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: #文章标题</span><br><span class="line">tags: #标签(请使用数组结构!!!!，，例如[CC,牛逼,啊])</span><br><span class="line">categories: #分类(请使用数组结构!!!!，例如[CC,牛逼,啊])</span><br><span class="line">cover: #文章Cover</span><br><span class="line">top<span class="emphasis">_img: false #是否启用顶部大图</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href: #作者网站</span></span><br><span class="line"><span class="emphasis">keywords: #关键字</span></span><br><span class="line"><span class="emphasis">description: #介绍</span></span><br><span class="line"><span class="emphasis">id: #第几篇文章</span></span><br><span class="line"><span class="emphasis">date: #编写日期</span></span><br><span class="line"><span class="emphasis">updated: #更新日期</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure>

<p>各位参照这上面的格式写就可以了</p>
<h1 id="Thanks-For-You"><a href="#Thanks-For-You" class="headerlink" title="Thanks For You"></a>Thanks For You</h1><p>其他的博主是没遇到过<br>如果有兴趣的话，博主会出一篇关于语雀文章同步到 Hexo 的文章<br>不过冰老师已经写了<br><a class="button--red" target="_blank" rel="noopener" href="https://zfe.space/post/554e.html">点这里去看看冰老师的教程</a></p>
]]></content>
      <tags>
        <tag>日志</tag>
        <tag>捣鼓</tag>
      </tags>
  </entry>
  <entry>
    <title>测试语雀文章</title>
    <url>/2021/posts/ebef76rc/index.html</url>
    <content><![CDATA[<p>本文首发于<a href="https://www.yuque.com/">语雀</a><br>由 Hajeekn 发布<br>接下来测试各种写法显示 1.图片<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2021/gif/12488964/1611065175242-8b4db050-623e-49ca-b278-0ba8385f4a06.gif#align=left&display=inline&height=239&margin=%5Bobject%20Object%5D&name=tmp.gif&originHeight=239&originWidth=795&size=4201419&status=done&style=none&width=795" alt="tmp.gif"><br>以上图片由语雀提供存储服务~ 2.语雀上的多样文字<br><strong>Text(加粗)</strong><br><em>Text(斜体)</em><br><del>Text(杠掉)</del><br>Text(下划线)<br>Te(上标)<br>xt(下标)<br><code>Text</code>(行内代码)<br><code>~~_**Te**_~~``~~_**xt**_~~</code>(组合文字) 3.外挂标签(Hexo 特性)</p>
<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">开始背书
  </button><span class="hide-content">海内存知己‚天涯若比邻</span></span>

<div class="note primary flat"><p>初级标签</p></div>

<div class="note success flat"><p>Codeblock in note</p>
<p>成功标签</p></div>

<div class="note info flat"><p>Info Header</p>
<p>信息标签</p></div>

<div class="note warning flat"><p>Warning Header</p>
<p>警告标签</p></div>

<div class="note danger flat"><p>Danger Header</p>
<p>危险标签</p></div>

<div class="note info no-icon flat"><p>No icon note</p>
<p><code>note info no-icon</code></p>
<p>无图标标签</p></div>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;p&gt;代码框标签，效果和&#96;&#96;一样&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure>

<p>黄色色块</p>
<p>左边框红色块级</p>
<div class='checkbox'><input type="checkbox" />
            <p>纯文本测试</p>
            </div>

<div class='checkbox checked'><input type="checkbox" checked="checked"/>
            <p>支持简单的 markdown 语法</p>
            </div>

<div class='checkbox red'><input type="checkbox" />
            <p>支持自定义颜色</p>
            </div>

<div class='checkbox green checked'><input type="checkbox" checked="checked"/>
            <p>绿色 + 默认选中</p>
            </div>

<div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>
            <p>黄色 + 默认选中</p>
            </div>

<div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>
            <p>青色 + 默认选中</p>
            </div>

<div class='checkbox blue checked'><input type="checkbox" checked="checked"/>
            <p>蓝色 + 默认选中</p>
            </div>

<div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>
            <p>增加</p>
            </div>

<div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>
            <p>减少</p>
            </div>

<div class='checkbox times red checked'><input type="checkbox" checked="checked"/>
            <p>叉</p>
            </div>

<div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>测试</span></div>
    <div class="hide-content"><p>测试一下</p></div></div>

<span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: bg;color: color">看看答案
  </button><span class="hide-content">我是答案</span></span>

<div class="btns ">
            
<a href='/update' title='看看更新吧'><i class='far fa-hand-point-right'></i>看看更新吧</a>

          </div>

<div><a class='link-card' title='[http://localhost:4000/contributors/](http://localhost:4000/contributors/)' href='[http://localhost:4000/contributors/](http://localhost:4000/contributors/)'><div class='left'><img src= "/img/loading.gif" data-lazy-src=[https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/blog/Logo-NavBar@3x.png](https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/blog/Logo-NavBar@3x.png)></div><div class='right'><p class='text'>如何参与项目</p><p class='url'>[http://localhost:4000/contributors/](http://localhost:4000/contributors/)</p></div></a></div>

<div class="timeline"><p class='p h2'>碎碎念</p>
<div class="timenode"><div class="meta"><p><p>2020-08-06 <a href="https://xiaokang.me/">连接测试</a></p>
</p></div><div class="body"><p>今天是 2020-08-06</p></div></div>

<div class="timenode"><div class="meta"><p><p>2020-08-05 <a href="https://xiaokang.me/">连接测试</a></p>
</p></div><div class="body"><p>今天是 2020-08-05</p></div></div>
</div>

<details ><summary> <p>查看图片测试</p> </summary>
              <div class='content'>
              <p><img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2021/jpeg/12488964/1611065302956-29f9a3b2-6a3f-45fd-bc58-79e4ccb5344e.jpeg#align=left&display=inline&height=1536&margin=%5Bobject%20Object%5D&originHeight=1536&originWidth=2731&size=0&status=done&style=none&width=2731"></p>
              </div>
            </details>

<details cyan open><summary> <p>查看默认打开的折叠框</p> </summary>
              <div class='content'>
              <p>这是一个默认打开的折叠框。</p>
              </div>
            </details>

<details green><summary> <p>查看代码测试</p> </summary>
              <div class='content'>
              
              </div>
            </details>

<details yellow><summary> <p>查看列表测试</p> </summary>
              <div class='content'>
              <ul><li>haha</li><li>hehe</li></ul>
              </div>
            </details>

<details red><summary> <p>查看嵌套测试</p> </summary>
              <div class='content'>
              <details blue><summary> <p>查看嵌套测试2</p> </summary>              <div class='content'>              <details ><summary> <p>查看嵌套测试3</p> </summary>              <div class='content'>              <p>hahaha <img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2021/png/12488964/1611065302946-46250049-cf66-4900-8018-6c207c449239.png#align=left&display=inline&height=60&margin=%5Bobject%20Object%5D&originHeight=60&originWidth=60&size=0&status=done&style=none&width=60"></p>              </div>            </details>              </div>            </details>
              </div>
            </details>

<p>4.多彩文字<br>HH<br>HH<br>HH<br>HH 5.带多彩背景的文字(语雀)<br>啊这</p>
]]></content>
  </entry>
  <entry>
    <title>如何在自己网站上添加pace.js进度条</title>
    <url>/2020/posts/2c805e6b/index.html</url>
    <content><![CDATA[<p>相信各位站长们不喜欢网站普普通通的加载方式，那么今天 SL 就带来如何给自己网站添加 pace.js 进度条的教程</p>
<p>首先进入<a href="https://github.hubspot.com/pace/">https://github.hubspot.com/pace/</a></p>
<p>看到最上面蓝色的字(Star on GitHubDownload ZIP（v 版本号)</p>
<p>点击一下后面的 DownloadZIP</p>
<p>下载下来后可能是个压缩包</p>
<p>双击打开</p>
<p>打开后有个文件夹，如果没有返回上一个目录</p>
<p>将文件夹解压到你 Hexo 目录\themes\你主题\source\js 目录下</p>
<p>然后进入主题文件夹找到 layout 文件夹进入</p>
<p>进入之后找到_partial</p>
<p>找到 head.XXX</p>
<p>双击打开</p>
<p>接下来在内部添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;&#x2F;js&#x2F;pace-1.0.2&#x2F;pace.min.js&#39;&gt;&quot;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;ink href&#x3D;&quot;&#x2F;js&#x2F;pace-1.0.2&#x2F;themes&#x2F;blue&#x2F;pace-theme-loading-bar.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>如果嫌弃样式不好看可以去<a href="https://github.hubspot.com/pace/docs/welcome/">https://github.hubspot.com/pace/docs/welcome/</a></p>
<p>找个自己喜欢的</p>
<p>记住名字，去你解压 PACE 的目录下找到 themes</p>
<p>进入后找到你喜欢的颜色</p>
<p>然后在颜色文件夹找到你喜欢的样式</p>
<p>复制名称</p>
<p>替换本博客的 pace-theme-loading-bar</p>
<p>后缀不用换</p>
]]></content>
  </entry>
  <entry>
    <title>如何白嫖免费域名</title>
    <url>/2020/posts/dcfdf76e/index.html</url>
    <content><![CDATA[<p>今天小编(划掉)教大家如何白嫖免费域名啦~</p>
<p>第一步:下载本站提供的集装箱插件，拖动到 Chrome 里。</p>
<p>低速下载(走服务器流量)：<a href="https://www.slblog.ga/%E9%9B%86%E8%A3%85%E7%AE%B1.crx">https://www.slblog.ga/集装箱.crx</a></p>
<p>觉得这个下载慢可以试试高速下载哦</p>
<p>高速下载(走 CF 高级版 CDN)：<a href="https://cdn.slblog.ga/%E9%9B%86%E8%A3%85%E7%AE%B1.crx">https://cdn.slblog.ga/集装箱.crx</a></p>
<p>如果无法安装请打开开发者模式并将 crx 解压后选择加载一解压的扩展程序</p>
<p>然后点击集装箱插件-谷歌助手-开启代理</p>
<p>第二步：打开<a href="http://www.freenom.com/">www.freenom.com</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/qwq.png##align=left&display=inline&height=467&margin=%5Bobject%20Object%5D&originHeight=467&originWidth=860&status=done&style=none&width=860"></p>
<p>在方框里输入你想要的域名(带后缀哦)</p>
<p>后缀类型：.tk，.ml，.ga，.gq，.cf</p>
<p>这边用 dodola.ml 举例子</p>
<p>点击完成，稍等一会儿他就会跳转至下一步</p>
<p>网站加载可能稍慢</p>
<p>接着点击</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/sss.png##align=left&display=inline&height=461&margin=%5Bobject%20Object%5D&originHeight=461&originWidth=861&status=done&style=none&width=861"></p>
<p>将 3 Months @ FREE 改为 12 Months @ FREE</p>
<p>PS:Use Dns 代表自定义 DNS</p>
<p>Forward this domain 代表将域名跳转至某域名</p>
<p>当这一步做好后点击 Continue</p>
<p>接下来会跳转至</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.slblog.ga/pic/post/rrrr.png##align=left&display=inline&height=368&margin=%5Bobject%20Object%5D&originHeight=368&originWidth=686&status=done&style=none&width=686"></p>
<p>在 Enter Your Email Address 填写你的域名</p>
<p>然后点击 Verify My Email Address</p>
<p>这时候 Freenom 将会给你发一封邮件</p>
<p>在邮件内部找到 Verify My Email Address</p>
<p>点击一下，就会跳转至一个页面，下面让你填写真实信息，推荐和自己 IP 一样，否则可能结算报错。</p>
<p>填写好后将下面的小方块打上勾，点击下一步(应该是的)</p>
<p>然后跳转至一个页面，看看上面有没有 Error 之类的报错，如果没有，恭喜你，注册成功!</p>
<p>下面是修改 DNS 教程</p>
<p>打开<a href="https://my.freenom.com/clientarea.php?action=domains">https://my.freenom.com/clientarea.php?action=domains</a></p>
<p>找到你刚才嫖的域名点击后面的 Manage Domain</p>
<p>然后找到 Management Tools-Nameserver</p>
<p>选择 Use custom nameservers(enter below)</p>
<p>将下面的 Nameserver 改成你想用的 DNS</p>
<p>这时候一年的域名就白嫖完成啦~</p>
<p>续费也是免费的哦！</p>
<p>PS:白嫖的域名现在无法使用 CF 啦(无法解析！)</p>
]]></content>
      <tags>
        <tag>白嫖党福利</tag>
      </tags>
  </entry>
  <entry>
    <title>推荐一些实用工具</title>
    <url>/2020/posts/c5ef192c/index.html</url>
    <content><![CDATA[<h1 id="RaiDrive"><a href="#RaiDrive" class="headerlink" title="RaiDrive"></a>RaiDrive</h1><p>官网:<a href="https://www.raidrive.com/download">https://www.raidrive.com/download</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828101623691.png#alt=image-20200828101623691#align=left&display=inline&height=537&margin=%5Bobject%20Object%5D&originHeight=537&originWidth=580&status=done&style=none&width=580"></p>
<p>这款软件可以帮你把 NAS、OneDrive、Google Drive 等网盘映射到本地，目前博主正在用，非常好评!</p>
<h1 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h1><p>官网:<a href="http://www.internetdownloadmanager.com/">http://www.internetdownloadmanager.com/</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828101808831.png#alt=image-20200828101808831#align=left&display=inline&height=467&margin=%5Bobject%20Object%5D&originHeight=467&originWidth=794&status=done&style=none&width=794"></p>
<p>这是一款多线程下载器，最高支持 32 线程</p>
<p>下载速度杠杠滴!</p>
<h1 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h1><p>官网:<a href="https://www.typora.io/">https://www.typora.io/</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828101944979.png#alt=image-20200828101944979#align=left&display=inline&height=694&margin=%5Bobject%20Object%5D&originHeight=694&originWidth=800&status=done&style=none&width=800"></p>
<p>一款 MarkDown 写作工具，支持自定义主题</p>
<p>也支持使用 CSS 自构建一款心爱的主题</p>
<h1 id="ScreenToGif"><a href="#ScreenToGif" class="headerlink" title="ScreenToGif"></a>ScreenToGif</h1><p>官网:<a href="https://www.screentogif.com/">https://www.screentogif.com/</a></p>
<p>GitHub:<a href="https://github.com/NickeManarin/ScreenToGif">https://github.com/NickeManarin/ScreenToGif</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828102043926.png#alt=image-20200828102043926#align=left&display=inline&height=211&margin=%5Bobject%20Object%5D&originHeight=211&originWidth=485&status=done&style=none&width=485"></p>
<p>可以录制高帧率的 GIF</p>
<h1 id="OBS"><a href="#OBS" class="headerlink" title="OBS"></a>OBS</h1><p>官网:<a href="https://obsproject.com/">https://obsproject.com/</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828102219661.png#alt=image-20200828102219661#align=left&display=inline&height=761&margin=%5Bobject%20Object%5D&originHeight=761&originWidth=990&status=done&style=none&width=990"></p>
<p>主播都在用的推流/录制软件，支持自定义推流服务器</p>
<p>也可以使用内置的</p>
<h1 id="落雪音乐"><a href="#落雪音乐" class="headerlink" title="落雪音乐"></a>落雪音乐</h1><p>GitHub:<a href="https://github.com/lyswhut/lx-music-desktop">https://github.com/lyswhut/lx-music-desktop</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828102439336.png#alt=image-20200828102439336#align=left&display=inline&height=634&margin=%5Bobject%20Object%5D&originHeight=634&originWidth=1000&status=done&style=none&width=1000"></p>
<p>支持酷我、酷狗、企鹅、网易等音乐平台的歌曲搜索</p>
<p>还支持显示歌词、下载歌词、收藏等操作</p>
<h1 id="火绒"><a href="#火绒" class="headerlink" title="火绒"></a>火绒</h1><p>官网:<a href="https://www.huorong.cn/">https://www.huorong.cn/</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828102602239.png#alt=image-20200828102602239#align=left&display=inline&height=540&margin=%5Bobject%20Object%5D&originHeight=540&originWidth=820&status=done&style=none&width=820"></p>
<p>一款安全软件，不流氓，清爽</p>
<p>并且还包含各种小工具</p>
<p>如:漏洞修复、系统修复、弹窗拦截、右键管理</p>
<h1 id="Blockbench"><a href="#Blockbench" class="headerlink" title="Blockbench"></a>Blockbench</h1><p>GitHub:<a href="https://github.com/JannisX11/blockbench">https://github.com/JannisX11/blockbench</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828102825058.png#alt=image-20200828102825058#align=left&display=inline&height=859&margin=%5Bobject%20Object%5D&originHeight=859&originWidth=1600&status=done&style=none&width=1600"></p>
<p>一款模型制作工具</p>
<p>支持制作著名游戏 Minecraft 的模型和制作其它引擎的模型</p>
<h1 id="SSTap-beta"><a href="#SSTap-beta" class="headerlink" title="SSTap-beta"></a>SSTap-beta</h1><p>官网:<a href="https://www.sockscap64.com/sstap-homepage-chinese-traditional/">https://www.sockscap64.com/sstap-homepage-chinese-traditional/</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828103032917.png#alt=image-20200828103032917#align=left&display=inline&height=547&margin=%5Bobject%20Object%5D&originHeight=547&originWidth=427&status=done&style=none&width=427"></p>
<p>可以创建一个全局环境，代理 CS:GO 等游戏</p>
<p>玩过游戏的基本都用过这款软件的吧</p>
<h1 id="Google-Chrome"><a href="#Google-Chrome" class="headerlink" title="Google Chrome"></a>Google Chrome</h1><p>官网:<a href="https://google.cn/chrome">https://google.cn/chrome</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828103150832.png#alt=image-20200828103150832#align=left&display=inline&height=862&margin=%5Bobject%20Object%5D&originHeight=862&originWidth=1600&status=done&style=none&width=1600"></p>
<p>由谷歌团队开发的一款浏览器</p>
<p>因为其清爽简洁的 UI 和琳琅满目的扩展支持让他成为大众的不二之选</p>
<p>缺点:</p>
<ul>
<li>CPU/内存占用超大</li>
</ul>
<h1 id="SocksCap"><a href="#SocksCap" class="headerlink" title="SocksCap"></a>SocksCap</h1><p>官网:<a href="https://www.sockscap64.com/homepage/">https://www.sockscap64.com/homepage/</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200828103321029.png#alt=image-20200828103321029#align=left&display=inline&height=495&margin=%5Bobject%20Object%5D&originHeight=495&originWidth=694&status=done&style=none&width=694"></p>
<p>这款软件允许你把不支持网页代理的应用(例如 OBS Studio)的数据流转发到网页代理，使得可以支持网页代理。</p>
<p><strong>网页代理，又称为</strong>在线代理<strong>或</strong>线上代理**。网页代理是一种在<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E9%A1%B5">网页</a>上运行的<a href="https://zh.wikipedia.org/wiki/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8">代理服务器</a>程序，其不用任何设置，有输入<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E5%9D%80">网址</a>选择好代理服务器便可以访问的优点。</p>
<p>网页代理是常见的一种代理程序。网页代理给客户端提供远程网站上的网页和文件的<a href="https://zh.wikipedia.org/wiki/%E9%AB%98%E9%80%9F%E7%BC%93%E5%AD%98">高速缓存</a>，使客户端可以更加快速安全的浏览远程网站。一些网页代理网站保持每天更新以保证速度。</p>
<p>网页代理软件:</p>
<p>ShadowsocksR</p>
<p>Shadowsocks</p>
<p>Trojan</p>
<p>V2Ray</p>
<p>以上列举的常用的软件</p>
<p>他们都有一个共同的特点</p>
<p>无法代理 OBS 推流，那是因为 OBS 不支持网页代理，需要使用一些软件来转换数据流</p>
]]></content>
      <categories>
        <category>实用工具</category>
      </categories>
      <tags>
        <tag>干货</tag>
      </tags>
  </entry>
  <entry>
    <title>想写一个Button?看这里</title>
    <url>/2020/posts/5b931a80/index.html</url>
    <content><![CDATA[<p>想写一个 Button 但是不会 CSS 和动画效果?这期<del>水货</del>干货满满不知道什么是 Button?</p>
<p>这是 Button<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200824204912814.png#alt=#align=left&display=inline&height=74&margin=%5Bobject%20Object%5D&originHeight=74&originWidth=253&status=done&style=none&width=253"></p>
<p>这也算 Button<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200824205205073.png#alt=image-20200824205205073#align=left&display=inline&height=51&margin=%5Bobject%20Object%5D&originHeight=51&originWidth=253&status=done&style=none&width=253"></p>
<p>这边就拿<a href="https://slqwq.cn/">我的个人主页</a>的 ↗ Go Blog 为例子</p>
<p>首先我们在本地创建一个 HTML 和 CSS</p>
<p>类似这样<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200824205941692.png#alt=image-20200824205941692#align=left&display=inline&height=57&margin=%5Bobject%20Object%5D&originHeight=57&originWidth=108&status=done&style=none&width=108"></p>
<p>然后我们右键 HTML</p>
<p>打开后按照你写一个页面的格式</p>
<p>写一个简单的空壳页面</p>
<p>我这边是这样写的:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Start --!&gt;</span></span><br><span class="line"><span class="comment">&lt;html&gt;</span></span><br><span class="line"><span class="comment">&lt;head&gt;</span></span><br><span class="line"><span class="comment">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;./bt.css&quot;&gt;</span></span><br><span class="line"><span class="comment">&lt;/head&gt;</span></span><br><span class="line"><span class="comment">&lt;body&gt;</span></span><br><span class="line"><span class="comment">&lt;p&gt;I&#x27;m Body&lt;/p&gt;</span></span><br><span class="line"><span class="comment">&lt;/body&gt;</span></span><br><span class="line"><span class="comment">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>

<p>写完后我们首先在 Body 部分写一个自定义样式的超链接</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;a</span><br><span class="line">  class=&quot;btn&quot;</span><br><span class="line">  href=&quot;https://blog.slqwq.cn&quot;</span><br><span class="line">  target=&quot;_blank&quot;</span><br><span class="line">  rel=&quot;external nofollow noopener noreferrer&quot;</span><br><span class="line">  one-link-mark=&quot;yes&quot;</span><br><span class="line">  &gt;<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span> ↗<span class="symbol">&amp;nbsp;</span>Go Blog <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&lt;/a</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>

<p>然后我们打开 css</p>
<p>在里面写入:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#btns</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样一个基本 CSS 框架就好了</p>
<p>然后我们就可以开始写 CSS 部分了</p>
<p>先写入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">padding</span>: 0;</span><br></pre></td></tr></table></figure>

<p>使填充为 0</p>
<p>再写入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">font-size</span>: 100%;</span><br></pre></td></tr></table></figure>

<p>使字体尺码为 100%</p>
<p>然后写入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br></pre></td></tr></table></figure>

<p>生成相对定位的元素，相对于其正常位置进行定位。</p>
<p>接着写入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">z-index</span>: 1;</span><br></pre></td></tr></table></figure>

<p>设置元素的堆叠顺序。拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面</p>
<p>之后写入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">align-items</span>: <span class="selector-tag">center</span>;</span><br></pre></td></tr></table></figure>

<p>定义 flex 子项在 flex 容器的当前行的侧轴(纵轴)方向上的对齐方式</p>
<p>最后写入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border-radius</span>: 50%;</span><br></pre></td></tr></table></figure>

<p>给 div 元素添加方形的边框</p>
<p>这时候显示出来还是这种状态</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200824211520197.png#alt=image-20200824211520197#align=left&display=inline&height=34&margin=%5Bobject%20Object%5D&originHeight=34&originWidth=181&status=done&style=none&width=181"></p>
<p>然后咱们再写入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">border</span>: 4<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">hsla</span>(0,0%,100%,.7);</span><br><span class="line">0,0,0,.08), 0 3<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,.06): ;</span><br><span class="line"><span class="selector-tag">border</span>: <span class="selector-tag">none</span>;</span><br><span class="line"><span class="selector-tag">box-shadow</span>: 0 14<span class="selector-tag">px</span> 38<span class="selector-tag">px</span> <span class="selector-id">#2196f300</span>, 0 3<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> <span class="selector-id">#2196f300</span>;</span><br><span class="line"><span class="selector-tag">background-color</span>: <span class="selector-id">#2196F3</span>;</span><br><span class="line"><span class="selector-tag">-webkit-transition</span>: <span class="selector-tag">all</span> .3<span class="selector-tag">s</span> <span class="selector-tag">ease-out</span>;</span><br><span class="line"><span class="selector-tag">transition</span>: <span class="selector-tag">all</span> .3<span class="selector-tag">s</span> <span class="selector-tag">ease-out</span>;</span><br><span class="line"><span class="selector-tag">margin</span>: 0 30<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">width</span>: 54<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">height</span>: 54<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">min-width</span>: 54<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">min-height</span>: 54<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">border-radius</span>: 0<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">line-height</span>: 4.3<span class="selector-tag">rem</span>;</span><br><span class="line"><span class="selector-tag">font-size</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">color</span>: <span class="selector-id">#eff</span>;</span><br></pre></td></tr></table></figure>

<p>定义背景颜色之类的</p>
<p>然后就成了这个亚子<img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200824212140436.png#alt=image-20200824212140436#align=left&display=inline&height=39&margin=%5Bobject%20Object%5D&originHeight=39&originWidth=267&status=done&style=none&width=267"></p>
<p>这时候已经半成了</p>
<p>我们只需要再去掉下划线，调调大小之类的就行了，所以就写入</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">text-decoration</span>: <span class="selector-tag">none</span>;</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200824212559632.png#alt=image-20200824212559632#align=left&display=inline&height=67&margin=%5Bobject%20Object%5D&originHeight=67&originWidth=171&status=done&style=none&width=171"></p>
<p>这就是去掉下划线后的样子，然后我们需要添加鼠标移动效果</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff7242</span>;</span><br><span class="line">  <span class="attribute">-webkit-transition-timing-function</span>: <span class="built_in">cubic-bezier</span>(<span class="number">0.45</span>, <span class="number">1.64</span>, <span class="number">0.47</span>, <span class="number">0.66</span>);</span><br><span class="line">  <span class="attribute">-moz-transition-timing-function</span>: <span class="built_in">cubic-bezier</span>(<span class="number">0.45</span>, <span class="number">1.64</span>, <span class="number">0.47</span>, <span class="number">0.66</span>);</span><br><span class="line">  <span class="attribute">-o-transition-timing-function</span>: <span class="built_in">cubic-bezier</span>(<span class="number">0.45</span>, <span class="number">1.64</span>, <span class="number">0.47</span>, <span class="number">0.66</span>);</span><br><span class="line">  <span class="attribute">-ms-transition-timing-function</span>: <span class="built_in">cubic-bezier</span>(<span class="number">0.45</span>, <span class="number">1.64</span>, <span class="number">0.47</span>, <span class="number">0.66</span>);</span><br><span class="line">  <span class="attribute">transition-timing-function</span>: <span class="built_in">cubic-bezier</span>(<span class="number">0.45</span>, <span class="number">1.64</span>, <span class="number">0.47</span>, <span class="number">0.66</span>);</span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">scaleX</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">scaleX</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">-o-transform</span>: <span class="built_in">scaleX</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">-ms-transform</span>: <span class="built_in">scaleX</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scaleX</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">-webkit-transition</span>: all <span class="number">1s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: all <span class="number">1s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-o-transition</span>: all <span class="number">1s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-ms-transition</span>: all <span class="number">1s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">1s</span> ease-in-out;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后就可以达到鼠标移上去变色的效果</p>
<p>接着咋们在修改亿点地方</p>
<p>最终成品</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200824212841163.png#alt=image-20200824212841163#align=left&display=inline&height=80&margin=%5Bobject%20Object%5D&originHeight=80&originWidth=171&status=done&style=none&width=171"></p>
<p>文章水完了，溜了溜了</p>
]]></content>
      <categories>
        <category>干货</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>使用全新的评论系统————————————Waline</title>
    <url>/2021/posts/4a5e237/index.html</url>
    <content><![CDATA[<p>市面上有许多评论</p>
<ul>
<li>Valine</li>
<li>来必力</li>
<li>畅言</li>
</ul>
<p>等等评论系统</p>
<p>这篇文章我将教大家使用一款全新的评论————Waline</p>
<p>Waline 是基于 Valine 所衍生出来的评论</p>
<p>你可以将 Waline 等价为 With backend Valine</p>
<p>官网:<a href="https://waline.js.org/">https://waline.js.org/</a></p>
<p>本篇文章将以 Butterfly 3.5.1 做演示</p>
<h1 id="获取-APP-ID-KEY"><a href="#获取-APP-ID-KEY" class="headerlink" title="获取 APP ID/KEY"></a>获取 APP ID/KEY</h1><p>首先我们登录账号</p>
<p><a href="https://console.leancloud.app/login?from=/apps">https://console.leancloud.app/login?from=%2Fapps</a></p>
<p>没有的可以自己注册</p>
<p>登陆完成后我们创建一个应用</p>
<p>创建完成后进入设置<img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20210117082407.png#alt=image-20210117082406980#align=left&display=inline&height=51&margin=%5Bobject%20Object%5D&originHeight=51&originWidth=267&status=done&style=none&width=267"></p>
<p>选择应用 Keys</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20210117082909.png#alt=image-20210117082909100#align=left&display=inline&height=423&margin=%5Bobject%20Object%5D&originHeight=423&originWidth=1289&status=done&style=none&width=1289"></p>
<p>记好这三个重要 ID</p>
<h1 id="部署至-Vercel"><a href="#部署至-Vercel" class="headerlink" title="部署至 Vercel"></a>部署至 Vercel</h1><p><a href="https://vercel.com/import/project?template=https://github.com/lizheming/waline/tree/master/example"><img src= "/img/loading.gif" data-lazy-src="https://vercel.com/button#alt=#align=left&display=inline&height=32&margin=%5Bobject%20Object%5D&originHeight=32&originWidth=92&status=done&style=none&width=92"> </a></p>
<p>点击上方按钮跳转到 Vercel 部署</p>
<p>。未登录的话需要登录，这里选 Github 登录即可。登录后会让你输入 Vercel 项目名称。</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20210117083221.png#alt=image-20210117083221605#align=left&display=inline&height=665&margin=%5Bobject%20Object%5D&originHeight=665&originWidth=1244&status=done&style=none&width=1244"></p>
<p>输入名称后点击 Continue 进入下一步，输入 Github 仓库名称。Vercel 会基于 waline 模板帮助你新建并初始化该仓库。</p>
<p>仓库初始化完毕后开始准备部署到 Vercel。这里需要在 Environment Variables 初配置 <code>LEAN_ID</code>, <code>LEAN_KEY</code> 和 <code>LEAN_MASTER_KEY</code> 三个环境变量。它们的值分别对应上一步在 LeanCloud 中获得的 <code>APP ID</code>, <code>APP KEY</code>, <code>Master Key</code>。如果你是 LeanCloud 国内版用户的话，还需要输入 <code>LEAN_SERVER</code> 环境变量，对应的是你在上一步上绑定的已备案域名。</p>
<p>点击 Deploy 就会开始进行部署了。稍等片刻，就会看到满屏的烟花庆祝你部署成功了。点击 Visit 会跳转到部署好的网站地址上，该地址即为之后需要填入的 <code>serverURL</code> 地址。</p>
<h1 id="配置实战"><a href="#配置实战" class="headerlink" title="配置实战"></a>配置实战</h1><p>接着我们进入 Butterfly 主题配置</p>
<p>找到 waline 配置项</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://rmt.dogedoge.com/fetch/hajeekn/storage/20210117083427.png#alt=image-20210117083427398#align=left&display=inline&height=344&margin=%5Bobject%20Object%5D&originHeight=344&originWidth=893&status=done&style=none&width=893"></p>
<p>在 serverURL 填入刚才的网站地址(记得带上 https 协议)</p>
<p>默认配置文件如下:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># waline - A simple comment system with backend support fork from Valine</span></span><br><span class="line"><span class="comment"># https://waline.js.org/</span></span><br><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="attr">serverURL:</span> <span class="comment"># Waline server address url</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://zh-tw.gravatar.com/site/implement/images/#default-image</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="string">/image/comment_bg.png</span> <span class="comment"># waline background</span></span><br><span class="line">  <span class="attr">emojiCDN:</span> <span class="comment"># emoji CDN</span></span><br><span class="line">  <span class="attr">option:</span></span><br></pre></td></tr></table></figure>

<h1 id="自定义表情"><a href="#自定义表情" class="headerlink" title="自定义表情"></a>自定义表情</h1><p>如果你需要自定义表情，请在<code>emojiCDN</code>配置你的表情 CDN</p>
<p>同时你需要在 Hexo 根目录下的<code>source/_data/</code>创建一个 json<code>waline.json</code></p>
<p><code>waline.json</code>与<code>valine.json</code>的配置文件可共用</p>
<p>格式如下</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;tv_doge&quot;</span>: <span class="string">&quot;6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_親親&quot;</span>: <span class="string">&quot;a8111ad55953ef5e3be3327ef94eb4a39d535d06.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_偷笑&quot;</span>: <span class="string">&quot;bb690d4107620f1c15cff29509db529a73aee261.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_再見&quot;</span>: <span class="string">&quot;180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_冷漠&quot;</span>: <span class="string">&quot;b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_發怒&quot;</span>: <span class="string">&quot;34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_發財&quot;</span>: <span class="string">&quot;34db290afd2963723c6eb3c4560667db7253a21a.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_可愛&quot;</span>: <span class="string">&quot;9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_吐血&quot;</span>: <span class="string">&quot;09dd16a7aa59b77baa1155d47484409624470c77.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_呆&quot;</span>: <span class="string">&quot;fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_嘔吐&quot;</span>: <span class="string">&quot;9f996894a39e282ccf5e66856af49483f81870f3.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_困&quot;</span>: <span class="string">&quot;241ee304e44c0af029adceb294399391e4737ef2.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_壞笑&quot;</span>: <span class="string">&quot;1f0b87f731a671079842116e0991c91c2c88645a.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_大佬&quot;</span>: <span class="string">&quot;093c1e2c490161aca397afc45573c877cdead616.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_大哭&quot;</span>: <span class="string">&quot;23269aeb35f99daee28dda129676f6e9ea87934f.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_委屈&quot;</span>: <span class="string">&quot;d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_害羞&quot;</span>: <span class="string">&quot;a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_尷尬&quot;</span>: <span class="string">&quot;7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_微笑&quot;</span>: <span class="string">&quot;70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_思考&quot;</span>: <span class="string">&quot;90cf159733e558137ed20aa04d09964436f618a1.png&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;tv_驚嚇&quot;</span>: <span class="string">&quot;0d15c7e2ee58e935adc6a7193ee042388adc22af.png&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><h2 id="Thanks-For-You"><a href="#Thanks-For-You" class="headerlink" title="Thanks For You"></a>Thanks For You</h2><div class="mermaid">
pie

title 文章内容采集

&quot;Waline 文档&quot; : 30.77

&quot;Butterfly 文档&quot; : 40.56

&quot;自写&quot; : 28.67
</div>
]]></content>
      <categories>
        <category>评论系统</category>
      </categories>
      <tags>
        <tag>简约</tag>
        <tag>大气</tag>
      </tags>
  </entry>
  <entry>
    <title>关于3.0.0RC2版本Valine魔改出博主、访客、小伙伴的教程</title>
    <url>/2020/posts/8f68d635/index.html</url>
    <content><![CDATA[<p>关于 Butterfly 最新的 3.0.0RC2 版本如何魔改出博主、访客、小伙伴的教程</p>
<p>首先我们进行对比</p>
<p>发现 3.0.0RC 的 Valine.pug 与其他版本的结构不相同</p>
<p>其它版:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- let emojiMaps &#x3D; &#39;&quot;&quot;&#39;</span><br><span class="line">if site.data.valine</span><br><span class="line">  - emojiMaps &#x3D; JSON.stringify(site.data.valine)</span><br><span class="line"></span><br><span class="line">script.</span><br><span class="line">  function loadvaline () &#123;</span><br><span class="line">    function requestSetting (from, set) &#123;</span><br><span class="line">      var from &#x3D; from</span><br><span class="line">      var setting &#x3D; set.split(&#39;,&#39;).filter(function(item)&#123;</span><br><span class="line">      return from.indexOf(item) &gt; -1</span><br><span class="line">      &#125;);</span><br><span class="line">      setting &#x3D; setting.length &#x3D;&#x3D; 0 ? from :setting;</span><br><span class="line">      return setting</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var guestInfo &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.guest_info &#125;&#39;)</span><br><span class="line">    var requiredFields &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;],&#39;#&#123; theme.valine.requiredFields &#125;&#39;)</span><br><span class="line"></span><br><span class="line">    function initValine () &#123;</span><br><span class="line">      window.valine &#x3D; new Valine(&#123;</span><br><span class="line">        el:&#39;#vcomment&#39;,</span><br><span class="line">        appId: &#39;#&#123;theme.valine.appId&#125;&#39;,</span><br><span class="line">        appKey: &#39;#&#123;theme.valine.appKey&#125;&#39;,</span><br><span class="line">        path: window.location.pathname,</span><br><span class="line">        placeholder: &#39;#&#123;theme.valine.placeholder&#125;&#39;,</span><br><span class="line">        avatar: &#39;#&#123;theme.valine.avatar&#125;&#39;,</span><br><span class="line">        meta: guestInfo,</span><br><span class="line">        pageSize: &#39;#&#123;theme.valine.pageSize&#125;&#39;,</span><br><span class="line">        lang: &#39;#&#123;theme.valine.lang&#125;&#39;,</span><br><span class="line">        recordIP: #&#123;theme.valine.recordIP&#125;,</span><br><span class="line">        serverURLs: &#39;#&#123;theme.valine.serverURLs&#125;&#39;,</span><br><span class="line">        emojiCDN: &#39;#&#123;theme.valine.emojiCDN&#125;&#39;,</span><br><span class="line">        emojiMaps: !&#123;emojiMaps&#125;,</span><br><span class="line">        enableQQ: #&#123;theme.valine.enableQQ&#125;,</span><br><span class="line">        requiredFields: requiredFields,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (typeof window.valine &#x3D;&#x3D;&#x3D;&#39;object&#39;) initValine()</span><br><span class="line">    else $.getScript(&#39;!&#123;url_for(theme.CDN.valine)&#125;&#39;, initValine)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if (&#39;!&#123;defaultComment&#125;&#39; &#x3D;&#x3D;&#x3D; &#39;Valine&#39; || !&#123;theme.comments.load_begin&#125;) &#123;</span><br><span class="line">    loadvaline()</span><br><span class="line">  &#125;</span><br><span class="line">  else &#123;</span><br><span class="line">    function loadOtherComment () &#123;</span><br><span class="line">      loadvaline()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>RC2 版:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- let emojiMaps &#x3D; &#39;&quot;&quot;&#39;</span><br><span class="line">if site.data.valine</span><br><span class="line">  - emojiMaps &#x3D; JSON.stringify(site.data.valine)</span><br><span class="line"></span><br><span class="line">script.</span><br><span class="line">  function loadValine () &#123;</span><br><span class="line">    function initValine () &#123;</span><br><span class="line">      window.valine &#x3D; new Valine(&#123;</span><br><span class="line">        el: &#39;#vcomment&#39;,</span><br><span class="line">        appId: &#39;#&#123;theme.valine.appId&#125;&#39;,</span><br><span class="line">        appKey: &#39;#&#123;theme.valine.appKey&#125;&#39;,</span><br><span class="line">        placeholder: &#39;#&#123;theme.valine.placeholder&#125;&#39;,</span><br><span class="line">        avatar: &#39;#&#123;theme.valine.avatar&#125;&#39;,</span><br><span class="line">        meta: &#39;#&#123;theme.valine.guest_info &#125;&#39;.split(&#39;,&#39;),</span><br><span class="line">        pageSize: &#39;#&#123;theme.valine.pageSize&#125;&#39;,</span><br><span class="line">        lang: &#39;#&#123;theme.valine.lang&#125;&#39;,</span><br><span class="line">        recordIP: #&#123;theme.valine.recordIP&#125;,</span><br><span class="line">        serverURLs: &#39;#&#123;theme.valine.serverURLs&#125;&#39;,</span><br><span class="line">        emojiCDN: &#39;#&#123;theme.valine.emojiCDN&#125;&#39;,</span><br><span class="line">        emojiMaps: !&#123;emojiMaps&#125;,</span><br><span class="line">        enableQQ: #&#123;theme.valine.enableQQ&#125;,</span><br><span class="line">        path: window.location.pathname,</span><br><span class="line">      &#125;);</span><br><span class="line">      if (&#39;#&#123;theme.valine.requiredFields&#125;&#39;) &#123; valine.config.requiredFields&#x3D; &#39;#&#123;theme.valine.requiredFields&#125;&#39;.split(&#39;,&#39;) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (typeof Valine &#x3D;&#x3D;&#x3D; &#39;function&#39;) initValine()</span><br><span class="line">    else $.getScript(&#39;!&#123;url_for(theme.CDN.valine)&#125;&#39;, initValine)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  if (&#39;!&#123;theme.comments.use[0]&#125;&#39; &#x3D;&#x3D;&#x3D; &#39;Valine&#39; || !!&#123;theme.comments.lazyload&#125;) &#123;</span><br><span class="line">    if (!&#123;theme.comments.lazyload&#125;) loadComment(document.querySelector(&#39;#vcomment&#39;),loadValine)</span><br><span class="line">    else setTimeout(() &#x3D;&gt; loadValine(), 0)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    function loadOtherComment () &#123;</span><br><span class="line">      loadValine()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>可以看到 script.下面的内容不一样</p>
<p>这就是不同之处了</p>
<p>这样也就导致部分根据 HCLonely 博客魔改 Valine 的用户无法找到魔改的地方</p>
<p>解决其实很简单</p>
<p>在 function loadValine 的前面加上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function requestSetting (from, set) &#123;</span><br><span class="line">  var from &#x3D; from</span><br><span class="line">  var setting &#x3D; set.split(&#39;,&#39;).filter(function(item)&#123;</span><br><span class="line">  return from.indexOf(item) &gt; -1</span><br><span class="line">  &#125;);</span><br><span class="line">  setting &#x3D; setting.length &#x3D;&#x3D; 0 ? from :setting;</span><br><span class="line">  return setting</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var guestInfo &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.guest_info &#125;&#39;)</span><br><span class="line">var requiredFields &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.requiredFields &#125;&#39;)</span><br></pre></td></tr></table></figure>

<p>即可，然后就可以继续按照 HCLonely 的魔改教程魔改了。</p>
<p>完结，撒花</p>
]]></content>
      <categories>
        <category>魔改</category>
        <category>评论</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>魔改</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建 Hexo</title>
    <url>/2020/posts/731e29be/index.html</url>
    <content><![CDATA[<p>本期教大家如何搭建 Hexo</p>
<p>首先需要准备的东西如下:</p>
<p>1.电脑</p>
<p>2.手</p>
<p>3.脑袋</p>
<p>好了没了</p>
<h1 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h1><p>由于 Hexo 这款博客程序是基于 Node.js 所构建的，所以我们需要下载 Node.js</p>
<p>打开<a href="https://nodejs.org/">Node.js 官网</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818194143958.png#alt=image-20200818194143958#align=left&display=inline&height=268&margin=%5Bobject%20Object%5D&originHeight=268&originWidth=994&status=done&style=none&width=994"></p>
<p>选择下载稳定版（LTS):12.18.3</p>
<p>下载并安装完成后验证是否安装好了的方法</p>
<p>打开终端</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818194315128.png#alt=image-20200818194315128#align=left&display=inline&height=633&margin=%5Bobject%20Object%5D&originHeight=633&originWidth=1118&status=done&style=none&width=1118"></p>
<p>输入 node -v 和 npm -v</p>
<p>如果出现版本号 v….就说明安装成功</p>
<h1 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h1><p>使用 Hexo 呢 Git 也是必不可少的</p>
<p>打开<a href="https://git-scm.com/">Git 官网</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818194509564.png#alt=image-20200818194509564#align=left&display=inline&height=269&margin=%5Bobject%20Object%5D&originHeight=269&originWidth=339&status=done&style=none&width=339"></p>
<p>点击 Donload 2.28.0 for Windows 即可进行下载</p>
<p>但由于是使用 GitHub 的 release 进行下载所以速度较慢</p>
<p>国内用户可以使用:<a href="https://npm.taobao.org/mirrors/git-for-windows/">淘宝镜像源</a>进行下载，最新版本需要翻到最底下进行下载</p>
<p>安装好后在桌面单击右键，如果右键菜单出现</p>
<p>Git Bash Here 的字眼则代表安装成功</p>
<h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><p>新建一个文件夹，在里面右键</p>
<p>选择 Git Bash Here 打开 Git 终端</p>
<p>输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<p>安装 Hexo-cli</p>
<p>安装好后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>来初始化 Hexo，此步骤会从 GitHub 下载 Hexo 的主题、依赖文件所以时间会比较久，请耐心等待哦 o(<em>￣ ▽ ￣</em>)ブ如果你有条件就科学上网吧~</p>
<p>当提示 INFO  Start blogging with Hexo!时就安装完成了</p>
<p>查看安装的文件夹</p>
<p>发现有这些文件／文件夹：</p>
<ul>
<li>node_modules</li>
<li>scaffolds</li>
<li>source</li>
<li>themes</li>
<li>.gitignore</li>
<li>_config.yml</li>
<li>package.json</li>
<li>package-lock.json</li>
</ul>
<p>其中 node_modules 是你安装的插件存放位置，删掉了必须重新 npm i</p>
<p>scaffolds 是你博客的模板存储位置，page.md 就是创建 page 时使用什么模板以此类推就行</p>
<p>source 是用来存放博客资源的，一般都是随手扔文件进去就行</p>
<p>.gitignore 目前用不到(除了使用 GitHub actions 等持续集成部署博客的)</p>
<p>_config.yml 用来存放 Hexo 配置</p>
<p>package.json 顾名思义，就是你安装的插件名称和版本都会被存储在里面</p>
<p>其中我们要用到的是 themes、_config.yml</p>
<h1 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h1><p>首先我们去<a href="https://hexo.io/themes/">Hexo 官方主题网站</a>找一个好看的主题</p>
<p>这边用 Butterfly 为例</p>
<p>点击它的图片进去看看效果</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818200703690.png#alt=image-20200818200703690#align=left&display=inline&height=4001&margin=%5Bobject%20Object%5D&originHeight=4001&originWidth=1598&status=done&style=none&width=1598"></p>
<p>个人觉得还行,目前我正在用,体验也非常好</p>
<p>这款主题的 GitHub 仓库为<a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a></p>
<p>进入后在 README.md 中有 2 种安装方法</p>
<p>1.使用普通安装方法(git clone)</p>
<p>2.使用 NPM 安装(npm install hexo-theme-butterfly)</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818200903194.png#alt=image-20200818200903194#align=left&display=inline&height=331&margin=%5Bobject%20Object%5D&originHeight=331&originWidth=731&status=done&style=none&width=731"></p>
<p>这边用 GIT 做演示</p>
<p>复制指令</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818201049614.png#alt=image-20200818201049614#align=left&display=inline&height=42&margin=%5Bobject%20Object%5D&originHeight=42&originWidth=1093&status=done&style=none&width=1093"></p>
<p>在终端内部粘贴并回车</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818201210030.png#alt=image-20200818201210030#align=left&display=inline&height=144&margin=%5Bobject%20Object%5D&originHeight=144&originWidth=1106&status=done&style=none&width=1106"></p>
<p>安装完成后根据 GitHub 仓库的 README.md 提示还需要安装 pug&amp;stylus 渲染器</p>
<p>指令如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus</span><br></pre></td></tr></table></figure>

<p>安装依赖完成后我们打开_config.yml</p>
<p>找到 theme:</p>
<p>把它改为 Butterfly</p>
<p>保存文件,然后在终端执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>打开 Hexo 的本地预览工具看看效果</p>
<p>默认的打开地址是:<a href="http://localhost4000/">http://localhost4000</a></p>
<p>用户可通过 hexo s -p 来指定访问端口</p>
<p>比如 2000</p>
<p>1080</p>
<p>8081 等</p>
<h1 id="更改名称"><a href="#更改名称" class="headerlink" title="更改名称"></a>更改名称</h1><p>Hexo 安装完成后默认的名称为 Hexo，那么如何更改呢</p>
<p>首先打开_config.yml</p>
<p>找到”# Site”</p>
<p>更改 title subtitle description keywords author</p>
<p>title 更改为您的博客名字</p>
<p>subtitle 更改为你的介绍</p>
<p>keywords 更改为你想要的关键字</p>
<p>author 更改为你自己的名字</p>
<h1 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h1><p>一切准备完成后就可以部署了</p>
<p>这边演示 Coding 部署</p>
<p>双部署也一样</p>
<p>首先打开<a href="https://coding.net/">Coding 官网</a></p>
<p>如果没有账号就点击免费注册</p>
<p>注册完成进入你的企业</p>
<p>选择创建项目</p>
<p>项目模板使用 DevOps</p>
<p>名称可以随意</p>
<p>例如:👴 的博客等</p>
<p>这边用 👴 的博客示范</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818203235594.png#alt=image-20200818203235594#align=left&display=inline&height=751&margin=%5Bobject%20Object%5D&originHeight=751&originWidth=1586&status=done&style=none&width=1586"></p>
<p>启用 README.md 初始化可以随意</p>
<p>公开源代码可以自选</p>
<p>配置完后点击完成创建</p>
<p>接下来进入持续部署-静态网站</p>
<p>进行实名认证</p>
<p>认证完成后点击立即发布静态网站</p>
<p>网站名称依旧随便填写</p>
<p>其他配置不要动</p>
<p>点击完成创建</p>
<p>这时候出现这个页面</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818203511281.png#alt=image-20200818203511281#align=left&display=inline&height=757&margin=%5Bobject%20Object%5D&originHeight=757&originWidth=1598&status=done&style=none&width=1598"></p>
<p>选择设置</p>
<p>下滑找到自定义域名</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818203536672.png#alt=image-20200818203536672#align=left&display=inline&height=381&margin=%5Bobject%20Object%5D&originHeight=381&originWidth=1293&status=done&style=none&width=1293"></p>
<p>复制用以代替 xxxx.coding-pages.com 作为网站的访问地址的 xxxx.coding-pages.com</p>
<p>然后打开 DNS 解析商</p>
<p>这边使用 dns.la</p>
<p>新建一个解析</p>
<p>解析设置:</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818203708597.png#alt=image-20200818203708597#align=left&display=inline&height=41&margin=%5Bobject%20Object%5D&originHeight=41&originWidth=1066&status=done&style=none&width=1066"></p>
<p>其中主机记录可以自行设置</p>
<p>比如 www</p>
<p>test</p>
<p>cna 等</p>
<p>如果要直接用域名访问主机记录留空</p>
<p>做好解析之后回到 Coding 页面</p>
<p>添加刚才的域名</p>
<p>这边使用 test.slqwq.cn 做示范</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies/Blog/Pic/image-20200818203831234.png#alt=#align=left&display=inline&height=87&margin=%5Bobject%20Object%5D&originHeight=87&originWidth=1247&status=done&style=none&width=1247"></p>
<p>这时候会出现这样的样子</p>
<p>这是在生成证书</p>
<p>证书状态变为正常后推荐打开强制 HTTPS</p>
<p>这些做完后打开_config.yml 找到 deploy 配置</p>
<p>里面这样填写</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://e.coding.net/企业名/项目名/仓库名.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>填写完后在终端内输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>安装 Hexo-Deployer-Git</p>
<p>安装完后就可以使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo d -g</span><br></pre></td></tr></table></figure>

<p>部署了</p>
<h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>结束了~</p>
<p>感谢您的观看</p>
<p>更多进阶功能可前往<a href="https://hexo.io/zh-cn/docs/">Hexo 文档</a>和<a href="https://demo.jerryc.me/">Butterfly 主题文档</a>查看</p>
]]></content>
  </entry>
  <entry>
    <title>More-Beautiful-Div-Framework</title>
    <url>/2020/posts/7d8b55fe/index.html</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;more-beautiful-div-framework&#x2F;more-beautiful-div-framework.min.css&quot;&gt;</span><br><span class="line">- &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;@fortawesome&#x2F;fontawesome-free&#x2F;css&#x2F;all.min.css&quot;&gt;</span><br><span class="line">- &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;More-Beautiful-Div-Framework&#x2F;More-Beautiful-Div-Framework-CDN&#x2F;yl-if.css&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>网页引用方法:</p>
<p>网页 head 处添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;more-beautiful-div-framework&#x2F;more-beautiful-div-framework.min.css&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;@fortawesome&#x2F;fontawesome-free&#x2F;css&#x2F;all.min.css&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;More-Beautiful-Div-Framework&#x2F;More-Beautiful-Div-Framework-CDN&#x2F;yl-if.css&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>文章内引用方法:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;tip lite&quot;&gt;&lt;p&gt;文字&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;tip ban&quot;&gt;&lt;p&gt;文字&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;tip home&quot;&gt;&lt;p&gt;文字&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;tip impo&quot;&gt;&lt;p&gt;魔改标签4&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;tip ref&quot;&gt;&lt;p&gt;魔改标签5&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;tip set&quot;&gt;&lt;p&gt;魔改标签6&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;tip key&quot;&gt;&lt;p&gt;魔改标签7&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;tip bell&quot;&gt;&lt;p&gt;魔改标签8&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;tip qq&quot;&gt;&lt;p&gt;魔改标签9&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p>例子:</p>
<p>魔改标签 1</p>
<p>魔改标签 2</p>
<p>魔改标签 3</p>
<p>魔改标签 4</p>
<p>魔改标签 5</p>
<p>魔改标签 6</p>
<p>魔改标签 7</p>
<p>魔改标签 8</p>
<p>魔改标签 9</p>
<p>目前此拓展会持续更新</p>
<h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><p>依赖如下:</p>
<p>FontAwesome 5 / 4(除 QQ 样式以外的其他样式依赖项)</p>
<p>iconfont(QQ 样式的依赖项)</p>
<h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志:"></a>更新日志:</h1><p>2020/8/36</p>
<p>18:30 版本号 V1.9</p>
<p>更换部分标签引用名称</p>
<p>2020/6/22</p>
<p>14:05 版本号 V1.8</p>
<p>将 QQ 样式的图标替换为 iconfont 图标</p>
<p>2020/6/17</p>
<p>20:29 版本号 V1.7(跳过 1.6)</p>
<p>添加压缩过的 css(more-beautiful-div-framework.min.css)</p>
<p>提供 jsdelivr 的 CSS 地址</p>
<p>兼容 V5</p>
<p>添加 QQ 样式</p>
<p>17:52 版本号 V1.5</p>
<p>取消 pool.css 依赖</p>
<p>将 jsdelivr 地址换为 unpkg 地址</p>
<p>2020/6/15</p>
<p>14:55 版本号 V1.4</p>
<p>添加 socd 样式</p>
<p>2020/6/14</p>
<p>18:20 版本号 V1.3</p>
<p>添加 ref、ffa、key 样式</p>
<p>14:45 版本号 V1.2</p>
<p>添加 important 样式</p>
<p>12:30 版本号 V1.1</p>
<p>添加 Home 样式</p>
<p>12:00 版本号 V1.0</p>
<p>添加 Wtgo、ban2 种样式</p>
<p>10:00</p>
<p>开启此项目</p>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>获取JOOX的音乐地址</title>
    <url>/2020/posts/ebef73e2/index.html</url>
    <content><![CDATA[<p>Joox 相信很多人都熟悉，它是腾讯音乐的国外版本，可以免费听大部分国内要 VIP 的歌(包括单独付费的歌曲)</p>
<p>今天我来教大家如何获取他的音乐地址</p>
<h1 id="进入官网"><a href="#进入官网" class="headerlink" title="进入官网"></a>进入官网</h1><p>首先我们进入官网:</p>
<p><a href="https://joox.com/">点击进入</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/image-20201127201847101.png#alt=image-20201127201847101#align=left&display=inline&height=875&margin=%5Bobject%20Object%5D&originHeight=875&originWidth=1920&status=done&style=none&width=1920"></p>
<p>看到的应该是这样的场景，如果右上角没出现 Log in 就请参照<a href="https://blog.ccknbc.cc/posts/how-to-enjoy-joox-music-service-in-mainland-china/">CCKNBC 大佬的教程</a>配置</p>
<h1 id="搜索歌曲"><a href="#搜索歌曲" class="headerlink" title="搜索歌曲"></a>搜索歌曲</h1><p>在 Search Songs 处搜索歌曲，这里以周杰伦的 Mojiti 为例</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/image-20201127202346331.png#alt=image-20201127202346331#align=left&display=inline&height=866&margin=%5Bobject%20Object%5D&originHeight=866&originWidth=1919&status=done&style=none&width=1919"></p>
<p>在此页面的时候按下 F12</p>
<h1 id="F12"><a href="#F12" class="headerlink" title="F12"></a>F12</h1><p>切换到 Network</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/image-20201128074959557.png#alt=image-20201128074959557#align=left&display=inline&height=138&margin=%5Bobject%20Object%5D&originHeight=138&originWidth=569&status=done&style=none&width=569"></p>
<p>看好这里</p>
<p>点击 Play 的时候看有没有新的请求</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/image-20201128075025464.png#alt=image-20201128075025464#align=left&display=inline&height=53&margin=%5Bobject%20Object%5D&originHeight=53&originWidth=280&status=done&style=none&width=280"></p>
<p>一般都会请求失败，因为 API 被墙了</p>
<h1 id="取得-API-地址"><a href="#取得-API-地址" class="headerlink" title="取得 API 地址"></a>取得 API 地址</h1><p>我们把鼠标移到这两个新增的请求上面</p>
<p>找到以 <a href="https://api-jooxtt.sanook.com/">https://api-jooxtt.sanook.com</a> 开头的地址，将他复制下来</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/image-20201128075148198.png#alt=image-20201128075148198#align=left&display=inline&height=861&margin=%5Bobject%20Object%5D&originHeight=861&originWidth=1920&status=done&style=none&width=1920"></p>
<p>在新窗口打开</p>
<p>接着只需要找到 play_url_list 将他打开即可</p>
<h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1><p>本文结束</p>
]]></content>
      <categories>
        <category>干货</category>
      </categories>
      <tags>
        <tag>干货</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Vercel搭建一个静态网站</title>
    <url>/2020/posts/98e384e2/index.html</url>
    <content><![CDATA[<p>提供免费搭建网站的服务有很多，像热铁盒主机、Coding Pages、GitHub Pages······Vercel 也是其中之一，今天教大家使用 Vercel 搭建一个静态网站。</p>
<h1 id="登录账号"><a href="#登录账号" class="headerlink" title="登录账号"></a>登录账号</h1><p><a href="https://www.vercel.com/">前往 Vercel 官网</a></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/20201212171545.png#alt=image-20201212171544981#align=left&display=inline&height=870&margin=%5Bobject%20Object%5D&originHeight=870&originWidth=1920&status=done&style=none&width=1920"></p>
<p>点击 Login 按钮</p>
<p>点击后会跳转至这个页面</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/20201212171715.png#alt=image-20201212171715452#align=left&display=inline&height=703&margin=%5Bobject%20Object%5D&originHeight=703&originWidth=1673&status=done&style=none&width=1673"></p>
<h1 id="授权服务"><a href="#授权服务" class="headerlink" title="授权服务"></a>授权服务</h1><p>选择一个你有的账号</p>
<p>按钮 1.连接到 GitHub</p>
<p>按钮 2.连接到 GitLab</p>
<p>按钮 3.连接到 Bitbucket</p>
<p>如果你都没有就可以点击下面的 Don’t have an account? Sign Up(没有一个账号?注册)</p>
<p>这里用 GitHub 来演示</p>
<p>登录完成后会跳转到仪表盘</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/20201212172119.png#alt=image-20201212172119038#align=left&display=inline&height=856&margin=%5Bobject%20Object%5D&originHeight=856&originWidth=1894&status=done&style=none&width=1894"></p>
<p>这时候我们先回到 GitHub，我们先创建一个仓库放入测试 html</p>
<h1 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h1><p>接着我们复制刚创建的仓库的 git 地址</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/20201212172440.png#alt=image-20201212172440181#align=left&display=inline&height=406&margin=%5Bobject%20Object%5D&originHeight=406&originWidth=935&status=done&style=none&width=935"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/20201212172456.png#alt=image-20201212172456843#align=left&display=inline&height=721&margin=%5Bobject%20Object%5D&originHeight=721&originWidth=1007&status=done&style=none&width=1007"></p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/20201212172552.png#alt=image-20201212172552337#align=left&display=inline&height=690&margin=%5Bobject%20Object%5D&originHeight=690&originWidth=929&status=done&style=none&width=929">进入这个页面的时候注意，由于我们的仓库里放了一个 html，所以这里不要做任何设置直接点击蓝色的 Deploy 按钮</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/20201212172705.png#alt=image-20201212172704922#align=left&display=inline&height=655&margin=%5Bobject%20Object%5D&originHeight=655&originWidth=1622&status=done&style=none&width=1622"></p>
<p>出现这个页面就代表你的网页成功部署了</p>
<p>我们点击 Visit 按钮去测试一下</p>
<p><img src= "/img/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/glahajeekn/imcdn@main/images/20201212172947.png#alt=image-20201212172947775#align=left&display=inline&height=1020&margin=%5Bobject%20Object%5D&originHeight=1020&originWidth=1920&status=done&style=none&width=1920"></p>
<p>成功!</p>
<p>这样就可以搭建一个简单的静态网站了。</p>
<p>对于 Hexo 你可以直接放源码上去，然后配置构建命令，不过这个内容不属于本文范围之类，所以就不讲了。</p>
<h1 id="Thanks-For-You"><a href="#Thanks-For-You" class="headerlink" title="Thanks For You"></a>Thanks For You</h1>]]></content>
      <categories>
        <category>Vercel</category>
      </categories>
      <tags>
        <tag>网站</tag>
        <tag>Free</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo小魔改</title>
    <url>/2020/posts/652ef4b5/index.html</url>
    <content><![CDATA[<p>注:本文的所有魔改都基于 JS/配置文件魔改，并不修改源码</p>
<p>为了方便，本文的魔改提供一键 JS:</p>
<p>未压缩 JS:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies@V1.7/jake.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>普通压缩 JS:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies@V1.7/jake.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>加密压缩 JS:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies@V1.7/jake.encryption.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="页面添加小红心"><a href="#页面添加小红心" class="headerlink" title="页面添加小红心"></a>页面添加小红心</h1><p>在主题 source 目录下新建文件</p>
<p>click_show_love.js</p>
<p>文件内插入以下代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!(<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    c(</span><br><span class="line">      <span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span></span><br><span class="line">    ),</span><br><span class="line">      o(),</span><br><span class="line">      r();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="number">0</span>; e &lt; d.length; e++)</span><br><span class="line">      d[e].alpha &lt;= <span class="number">0</span></span><br><span class="line">        ? (t.body.removeChild(d[e].el), d.splice(e, <span class="number">1</span>))</span><br><span class="line">        : (d[e].y--,</span><br><span class="line">          (d[e].scale += <span class="number">0.004</span>),</span><br><span class="line">          (d[e].alpha -= <span class="number">0.013</span>),</span><br><span class="line">          (d[e].el.style.cssText =</span><br><span class="line">            <span class="string">&quot;left:&quot;</span> +</span><br><span class="line">            d[e].x +</span><br><span class="line">            <span class="string">&quot;px;top:&quot;</span> +</span><br><span class="line">            d[e].y +</span><br><span class="line">            <span class="string">&quot;px;opacity:&quot;</span> +</span><br><span class="line">            d[e].alpha +</span><br><span class="line">            <span class="string">&quot;;transform:scale(&quot;</span> +</span><br><span class="line">            d[e].scale +</span><br><span class="line">            <span class="string">&quot;,&quot;</span> +</span><br><span class="line">            d[e].scale +</span><br><span class="line">            <span class="string">&quot;) rotate(45deg);background:&quot;</span> +</span><br><span class="line">            d[e].color +</span><br><span class="line">            <span class="string">&quot;;z-index:99999&quot;</span>));</span><br><span class="line">    requestAnimationFrame(r);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e.onclick &amp;&amp; e.onclick;</span><br><span class="line">    e.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      t &amp;&amp; t(), i(e);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.createElement(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    (a.className = <span class="string">&quot;heart&quot;</span>),</span><br><span class="line">      d.push(&#123;</span><br><span class="line">        el: a,</span><br><span class="line">        x: e.clientX - <span class="number">5</span>,</span><br><span class="line">        y: e.clientY - <span class="number">5</span>,</span><br><span class="line">        scale: <span class="number">1</span>,</span><br><span class="line">        alpha: <span class="number">1</span>,</span><br><span class="line">        color: s(),</span><br><span class="line">      &#125;),</span><br><span class="line">      t.body.appendChild(a);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.createElement(<span class="string">&quot;style&quot;</span>);</span><br><span class="line">    a.type = <span class="string">&quot;text/css&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      a.appendChild(t.createTextNode(e));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">      a.styleSheet.cssText = e;</span><br><span class="line">    &#125;</span><br><span class="line">    t.getElementsByTagName(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].appendChild(a);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="string">&quot;rgb(&quot;</span> +</span><br><span class="line">      ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) +</span><br><span class="line">      <span class="string">&quot;,&quot;</span> +</span><br><span class="line">      ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) +</span><br><span class="line">      <span class="string">&quot;,&quot;</span> +</span><br><span class="line">      ~~(<span class="number">255</span> * <span class="built_in">Math</span>.random()) +</span><br><span class="line">      <span class="string">&quot;)&quot;</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> d = [];</span><br><span class="line">  (e.requestAnimationFrame = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      e.requestAnimationFrame ||</span><br><span class="line">      e.webkitRequestAnimationFrame ||</span><br><span class="line">      e.mozRequestAnimationFrame ||</span><br><span class="line">      e.oRequestAnimationFrame ||</span><br><span class="line">      e.msRequestAnimationFrame ||</span><br><span class="line">      <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(e, <span class="number">1e3</span> / <span class="number">60</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;)()),</span><br><span class="line">    n();</span><br><span class="line">&#125;)(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>

<p>然后打开主题配置文件，添加引用:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/click_show_love.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="添加鼠标点击字体"><a href="#添加鼠标点击字体" class="headerlink" title="添加鼠标点击字体"></a>添加鼠标点击字体</h1><p>在主题 source 目录下新建文件 click_show_text.js 文件内部添加如下代码:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">  $(<span class="string">&quot;body&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(</span><br><span class="line">      <span class="string">&quot;富强&quot;</span>,</span><br><span class="line">      <span class="string">&quot;民主&quot;</span>,</span><br><span class="line">      <span class="string">&quot;文明&quot;</span>,</span><br><span class="line">      <span class="string">&quot;和谐&quot;</span>,</span><br><span class="line">      <span class="string">&quot;自由&quot;</span>,</span><br><span class="line">      <span class="string">&quot;平等&quot;</span>,</span><br><span class="line">      <span class="string">&quot;公正&quot;</span>,</span><br><span class="line">      <span class="string">&quot;法治&quot;</span>,</span><br><span class="line">      <span class="string">&quot;爱国&quot;</span>,</span><br><span class="line">      <span class="string">&quot;敬业&quot;</span>,</span><br><span class="line">      <span class="string">&quot;诚信&quot;</span>,</span><br><span class="line">      <span class="string">&quot;友善&quot;</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">var</span> $i = $(<span class="string">&quot;&lt;span/&gt;&quot;</span>).text(a[a_idx]);</span><br><span class="line">    a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">    <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">      y = e.pageY;</span><br><span class="line">    $i.css(&#123;</span><br><span class="line">      <span class="string">&quot;z-index&quot;</span>: <span class="number">5</span>,</span><br><span class="line">      top: y - <span class="number">20</span>,</span><br><span class="line">      left: x,</span><br><span class="line">      position: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">      <span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">      color: <span class="string">&quot;#FF0000&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).append($i);</span><br><span class="line">    $i.animate(</span><br><span class="line">      &#123;</span><br><span class="line">        top: y - <span class="number">180</span>,</span><br><span class="line">        opacity: <span class="number">0</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="number">3000</span>,</span><br><span class="line">      <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $i.remove();</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="string">&quot;delay()&quot;</span>, <span class="number">2000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delay</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">&quot;.buryit&quot;</span>).removeAttr(<span class="string">&quot;onclick&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中富强”, “民主”, “文明”, “和谐”, “自由”, “平等”, “公正”, “法治”, “爱国”, “敬业”, “诚信”, “友善”可自己更改</p>
<p>然后在主题配置文件添加引用:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/click_show_text.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="添加鼠标点击烟花爆炸效果"><a href="#添加鼠标点击烟花爆炸效果" class="headerlink" title="添加鼠标点击烟花爆炸效果"></a>添加鼠标点击烟花爆炸效果</h1><p>在主题 source 目录下新建文件 fireworks.js，内部写入如下代码:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  (pointerX =</span><br><span class="line">    (e.clientX || e.touches[<span class="number">0</span>].clientX) -</span><br><span class="line">    canvasEl.getBoundingClientRect().left),</span><br><span class="line">    (pointerY =</span><br><span class="line">      e.clientY || e.touches[<span class="number">0</span>].clientY - canvasEl.getBoundingClientRect().top);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> t = (anime.random(<span class="number">0</span>, <span class="number">360</span>) * <span class="built_in">Math</span>.PI) / <span class="number">180</span>,</span><br><span class="line">    a = anime.random(<span class="number">50</span>, <span class="number">180</span>),</span><br><span class="line">    n = [-<span class="number">1</span>, <span class="number">1</span>][anime.random(<span class="number">0</span>, <span class="number">1</span>)] * a;</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">x</span>: e.x + n * <span class="built_in">Math</span>.cos(t), <span class="attr">y</span>: e.y + n * <span class="built_in">Math</span>.sin(t) &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = colors[anime.random(<span class="number">0</span>, colors.length - <span class="number">1</span>)]),</span><br><span class="line">    (a.radius = anime.random(<span class="number">16</span>, <span class="number">32</span>)),</span><br><span class="line">    (a.endPos = setParticuleDirection(a)),</span><br><span class="line">    (a.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>),</span><br><span class="line">        (ctx.fillStyle = a.color),</span><br><span class="line">        ctx.fill();</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = <span class="string">&quot;#F00&quot;</span>),</span><br><span class="line">    (a.radius = <span class="number">0.1</span>),</span><br><span class="line">    (a.alpha = <span class="number">0.5</span>),</span><br><span class="line">    (a.lineWidth = <span class="number">6</span>),</span><br><span class="line">    (a.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      (ctx.globalAlpha = a.alpha),</span><br><span class="line">        ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>),</span><br><span class="line">        (ctx.lineWidth = a.lineWidth),</span><br><span class="line">        (ctx.strokeStyle = a.color),</span><br><span class="line">        ctx.stroke(),</span><br><span class="line">        (ctx.globalAlpha = <span class="number">1</span>);</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.animatables.length; t++) &#123;</span><br><span class="line">    e.animatables[t].target.draw();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> a = createCircle(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">    n.push(createParticule(e, t));</span><br><span class="line">  &#125;</span><br><span class="line">  anime</span><br><span class="line">    .timeline()</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: n,</span><br><span class="line">      x: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> e.endPos.x;</span><br><span class="line">      &#125;,</span><br><span class="line">      y: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> e.endPos.y;</span><br><span class="line">      &#125;,</span><br><span class="line">      radius: <span class="number">0.1</span>,</span><br><span class="line">      duration: anime.random(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">      easing: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">    &#125;)</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: a,</span><br><span class="line">      radius: anime.random(<span class="number">80</span>, <span class="number">160</span>),</span><br><span class="line">      lineWidth: <span class="number">0</span>,</span><br><span class="line">      alpha: &#123; <span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">&quot;linear&quot;</span>, <span class="attr">duration</span>: anime.random(<span class="number">600</span>, <span class="number">800</span>) &#125;,</span><br><span class="line">      duration: anime.random(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">      easing: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">      offset: <span class="number">0</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="built_in">this</span>,</span><br><span class="line">      i = <span class="built_in">arguments</span>;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(a),</span><br><span class="line">      (a = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        e.apply(n, i);</span><br><span class="line">      &#125;, t));</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.fireworks&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">  <span class="keyword">var</span> ctx = canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),</span><br><span class="line">    numberOfParticules = <span class="number">30</span>,</span><br><span class="line">    pointerX = <span class="number">0</span>,</span><br><span class="line">    pointerY = <span class="number">0</span>,</span><br><span class="line">    tap = <span class="string">&quot;mousedown&quot;</span>,</span><br><span class="line">    colors = [<span class="string">&quot;#FF1461&quot;</span>, <span class="string">&quot;#18FF92&quot;</span>, <span class="string">&quot;#5A87FF&quot;</span>, <span class="string">&quot;#FBF38C&quot;</span>],</span><br><span class="line">    setCanvasSize = debounce(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      (canvasEl.width = <span class="number">2</span> * <span class="built_in">window</span>.innerWidth),</span><br><span class="line">        (canvasEl.height = <span class="number">2</span> * <span class="built_in">window</span>.innerHeight),</span><br><span class="line">        (canvasEl.style.width = <span class="built_in">window</span>.innerWidth + <span class="string">&quot;px&quot;</span>),</span><br><span class="line">        (canvasEl.style.height = <span class="built_in">window</span>.innerHeight + <span class="string">&quot;px&quot;</span>),</span><br><span class="line">        canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    &#125;, <span class="number">500</span>),</span><br><span class="line">    render = anime(&#123;</span><br><span class="line">      duration: <span class="number">1</span> / <span class="number">0</span>,</span><br><span class="line">      update: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasEl.width, canvasEl.height);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="built_in">document</span>.addEventListener(</span><br><span class="line">    tap,</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="string">&quot;sidebar&quot;</span> !== e.target.id &amp;&amp;</span><br><span class="line">        <span class="string">&quot;toggle-sidebar&quot;</span> !== e.target.id &amp;&amp;</span><br><span class="line">        <span class="string">&quot;A&quot;</span> !== e.target.nodeName &amp;&amp;</span><br><span class="line">        <span class="string">&quot;IMG&quot;</span> !== e.target.nodeName &amp;&amp;</span><br><span class="line">        (render.play(), updateCoords(e), animateParticules(pointerX, pointerY));</span><br><span class="line">    &#125;,</span><br><span class="line">    !<span class="number">1</span></span><br><span class="line">  ),</span><br><span class="line">    setCanvasSize(),</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>, setCanvasSize, !<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">(<span class="string">&quot;use strict&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  (pointerX =</span><br><span class="line">    (e.clientX || e.touches[<span class="number">0</span>].clientX) -</span><br><span class="line">    canvasEl.getBoundingClientRect().left),</span><br><span class="line">    (pointerY =</span><br><span class="line">      e.clientY || e.touches[<span class="number">0</span>].clientY - canvasEl.getBoundingClientRect().top);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> t = (anime.random(<span class="number">0</span>, <span class="number">360</span>) * <span class="built_in">Math</span>.PI) / <span class="number">180</span>,</span><br><span class="line">    a = anime.random(<span class="number">50</span>, <span class="number">180</span>),</span><br><span class="line">    n = [-<span class="number">1</span>, <span class="number">1</span>][anime.random(<span class="number">0</span>, <span class="number">1</span>)] * a;</span><br><span class="line">  <span class="keyword">return</span> &#123; <span class="attr">x</span>: e.x + n * <span class="built_in">Math</span>.cos(t), <span class="attr">y</span>: e.y + n * <span class="built_in">Math</span>.sin(t) &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = colors[anime.random(<span class="number">0</span>, colors.length - <span class="number">1</span>)]),</span><br><span class="line">    (a.radius = anime.random(<span class="number">16</span>, <span class="number">32</span>)),</span><br><span class="line">    (a.endPos = setParticuleDirection(a)),</span><br><span class="line">    (a.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>),</span><br><span class="line">        (ctx.fillStyle = a.color),</span><br><span class="line">        ctx.fill();</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = &#123;&#125;;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = <span class="string">&quot;#F00&quot;</span>),</span><br><span class="line">    (a.radius = <span class="number">0.1</span>),</span><br><span class="line">    (a.alpha = <span class="number">0.5</span>),</span><br><span class="line">    (a.lineWidth = <span class="number">6</span>),</span><br><span class="line">    (a.draw = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      (ctx.globalAlpha = a.alpha),</span><br><span class="line">        ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, !<span class="number">0</span>),</span><br><span class="line">        (ctx.lineWidth = a.lineWidth),</span><br><span class="line">        (ctx.strokeStyle = a.color),</span><br><span class="line">        ctx.stroke(),</span><br><span class="line">        (ctx.globalAlpha = <span class="number">1</span>);</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; e.animatables.length; t++) &#123;</span><br><span class="line">    e.animatables[t].target.draw();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> a = createCircle(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">    n.push(createParticule(e, t));</span><br><span class="line">  &#125;</span><br><span class="line">  anime</span><br><span class="line">    .timeline()</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: n,</span><br><span class="line">      x: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> e.endPos.x;</span><br><span class="line">      &#125;,</span><br><span class="line">      y: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> e.endPos.y;</span><br><span class="line">      &#125;,</span><br><span class="line">      radius: <span class="number">0.1</span>,</span><br><span class="line">      duration: anime.random(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">      easing: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">    &#125;)</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: a,</span><br><span class="line">      radius: anime.random(<span class="number">80</span>, <span class="number">160</span>),</span><br><span class="line">      lineWidth: <span class="number">0</span>,</span><br><span class="line">      alpha: &#123; <span class="attr">value</span>: <span class="number">0</span>, <span class="attr">easing</span>: <span class="string">&quot;linear&quot;</span>, <span class="attr">duration</span>: anime.random(<span class="number">600</span>, <span class="number">800</span>) &#125;,</span><br><span class="line">      duration: anime.random(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">      easing: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">      offset: <span class="number">0</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="built_in">this</span>,</span><br><span class="line">      i = <span class="built_in">arguments</span>;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(a),</span><br><span class="line">      (a = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        e.apply(n, i);</span><br><span class="line">      &#125;, t));</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> canvasEl = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.fireworks&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">  <span class="keyword">var</span> ctx = canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),</span><br><span class="line">    numberOfParticules = <span class="number">30</span>,</span><br><span class="line">    pointerX = <span class="number">0</span>,</span><br><span class="line">    pointerY = <span class="number">0</span>,</span><br><span class="line">    tap = <span class="string">&quot;mousedown&quot;</span>,</span><br><span class="line">    colors = [<span class="string">&quot;#FF1461&quot;</span>, <span class="string">&quot;#18FF92&quot;</span>, <span class="string">&quot;#5A87FF&quot;</span>, <span class="string">&quot;#FBF38C&quot;</span>],</span><br><span class="line">    setCanvasSize = debounce(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      (canvasEl.width = <span class="number">2</span> * <span class="built_in">window</span>.innerWidth),</span><br><span class="line">        (canvasEl.height = <span class="number">2</span> * <span class="built_in">window</span>.innerHeight),</span><br><span class="line">        (canvasEl.style.width = <span class="built_in">window</span>.innerWidth + <span class="string">&quot;px&quot;</span>),</span><br><span class="line">        (canvasEl.style.height = <span class="built_in">window</span>.innerHeight + <span class="string">&quot;px&quot;</span>),</span><br><span class="line">        canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    &#125;, <span class="number">500</span>),</span><br><span class="line">    render = anime(&#123;</span><br><span class="line">      duration: <span class="number">1</span> / <span class="number">0</span>,</span><br><span class="line">      update: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasEl.width, canvasEl.height);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="built_in">document</span>.addEventListener(</span><br><span class="line">    tap,</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="string">&quot;sidebar&quot;</span> !== e.target.id &amp;&amp;</span><br><span class="line">        <span class="string">&quot;toggle-sidebar&quot;</span> !== e.target.id &amp;&amp;</span><br><span class="line">        <span class="string">&quot;A&quot;</span> !== e.target.nodeName &amp;&amp;</span><br><span class="line">        <span class="string">&quot;IMG&quot;</span> !== e.target.nodeName &amp;&amp;</span><br><span class="line">        (render.play(), updateCoords(e), animateParticules(pointerX, pointerY));</span><br><span class="line">    &#125;,</span><br><span class="line">    !<span class="number">1</span></span><br><span class="line">  ),</span><br><span class="line">    setCanvasSize(),</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>, setCanvasSize, !<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后打开主题配置文件添加引用:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;canvas</span><br><span class="line">  class=&quot;fireworks&quot;</span><br><span class="line">  style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">&lt;script</span><br><span class="line">  type=&quot;text/javascript&quot;</span><br><span class="line">  src=&quot;https://cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/fireworks.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="添加彩色打字效果"><a href="#添加彩色打字效果" class="headerlink" title="添加彩色打字效果"></a>添加彩色打字效果</h1><p>在你要添加的地方写入以下代码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;binft&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> binft = <span class="function"><span class="keyword">function</span> (<span class="params">r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">t</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> b[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * b.length)];</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="built_in">String</span>.fromCharCode(<span class="number">94</span> * <span class="built_in">Math</span>.random() + <span class="number">33</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params">r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="built_in">document</span>.createDocumentFragment(), i = <span class="number">0</span>; r &gt; i; i++) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> l = <span class="built_in">document</span>.createElement(<span class="string">&quot;span&quot;</span>);</span></span><br><span class="line">        (l.textContent = e()), (l.style.color = t()), n.appendChild(l);</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> n;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> t = o[c.skillI];</span></span><br><span class="line">      c.step</span><br><span class="line">        ? c.step--</span><br><span class="line">        : ((c.step = g),</span><br><span class="line">          c.prefixP &lt; l.length</span><br><span class="line">            ? (c.prefixP &gt;= 0 &amp;&amp; (c.text += l[c.prefixP]), c.prefixP++)</span><br><span class="line"><span class="javascript">            : <span class="string">&quot;forward&quot;</span> === c.direction</span></span><br><span class="line">            ? c.skillP &lt; t.length</span><br><span class="line">              ? ((c.text += t[c.skillP]), c.skillP++)</span><br><span class="line">              : c.delay</span><br><span class="line">              ? c.delay--</span><br><span class="line"><span class="javascript">              : ((c.direction = <span class="string">&quot;backward&quot;</span>), (c.delay = a))</span></span><br><span class="line">            : c.skillP &gt; 0</span><br><span class="line">            ? ((c.text = c.text.slice(0, -1)), c.skillP--)</span><br><span class="line">            : ((c.skillI = (c.skillI + 1) % o.length),</span><br><span class="line"><span class="javascript">              (c.direction = <span class="string">&quot;forward&quot;</span>))),</span></span><br><span class="line">        (r.textContent = c.text),</span><br><span class="line">        r.appendChild(</span><br><span class="line">          n(</span><br><span class="line">            c.prefixP &lt; l.length</span><br><span class="line"><span class="javascript">              ? <span class="built_in">Math</span>.min(s, s + c.prefixP)</span></span><br><span class="line"><span class="javascript">              : <span class="built_in">Math</span>.min(s, t.length - c.skillP)</span></span><br><span class="line">          )</span><br><span class="line">        ),</span><br><span class="line"><span class="javascript">        <span class="built_in">setTimeout</span>(i, d);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> l = <span class="string">&quot;&quot;</span>,</span></span><br><span class="line">      o = [</span><br><span class="line"><span class="javascript">        <span class="string">&quot;青青陵上柏，磊磊涧中石。&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;人生天地间，忽如远行客。&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;斗酒相娱乐，聊厚不为薄。&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;驱车策驽马，游戏宛与洛。&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;洛中何郁郁，冠带自相索。&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;长衢罗夹巷，王侯多第宅。&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;两宫遥相望，双阙百余尺。&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;极宴娱心意，戚戚何所迫？&quot;</span>,</span></span><br><span class="line"><span class="javascript">      ].map(<span class="function"><span class="keyword">function</span> (<span class="params">r</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> r + <span class="string">&quot;&quot;</span>;</span></span><br><span class="line">      &#125;),</span><br><span class="line">      a = 2,</span><br><span class="line">      g = 1,</span><br><span class="line">      s = 5,</span><br><span class="line">      d = 75,</span><br><span class="line">      b = [</span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(110,64,170)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(150,61,179)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(191,60,175)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(228,65,157)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(254,75,131)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(255,94,99)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(255,120,71)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(251,150,51)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(226,183,47)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(198,214,60)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(175,240,91)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(127,246,88)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(82,246,103)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(48,239,130)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(29,223,163)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(26,199,194)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(35,171,216)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(54,140,225)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(76,110,219)&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="string">&quot;rgb(96,84,200)&quot;</span>,</span></span><br><span class="line">      ],</span><br><span class="line">      c = &#123;</span><br><span class="line"><span class="javascript">        text: <span class="string">&quot;&quot;</span>,</span></span><br><span class="line">        prefixP: -s,</span><br><span class="line">        skillI: 0,</span><br><span class="line">        skillP: 0,</span><br><span class="line"><span class="javascript">        direction: <span class="string">&quot;forward&quot;</span>,</span></span><br><span class="line">        delay: a,</span><br><span class="line">        step: g,</span><br><span class="line">      &#125;;</span><br><span class="line">    i();</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="javascript">  binft(<span class="built_in">document</span>.getElementById(<span class="string">&quot;binft&quot;</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中青青陵上柏，磊磊涧中石。”, “人生天地间，忽如远行客。”,”斗酒相娱乐，聊厚不为薄。”, “驱车策驽马，游戏宛与洛。”,”洛中何郁郁，冠带自相索。”,”长衢罗夹巷，王侯多第宅。”,”两宫遥相望，双阙百余尺。”,”极宴娱心意，戚戚何所迫？和 color 可自己修改</p>
<h1 id="浏览器标题恶搞"><a href="#浏览器标题恶搞" class="headerlink" title="浏览器标题恶搞"></a>浏览器标题恶搞</h1><p>在主题 source 目录下新建 title.js，文件内写入:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">var OriginTitle = document.title; var titleTime;</span><br><span class="line">document.addEventListener(&#x27;visibilitychange&#x27;, function () &#123; if (document.hidden)</span><br><span class="line">&#123; $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/funny.ico&quot;); document.title = &#x27;╭(°A°`)╮</span><br><span class="line">页面崩溃啦 ~&#x27;; clearTimeout(titleTime); &#125; else &#123; $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;,</span><br><span class="line">&quot;/favicon.ico&quot;); document.title = &#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#x27; + OriginTitle; titleTime</span><br><span class="line">= setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125; &#125;);</span><br></pre></td></tr></table></figure>

<p>其中 funny.ico 是用户切换到其他标签后的图标，favicon 是正常图标</p>
<p>然后在主题配置文件内添加引用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/title.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h1 id="添加动态线条效果"><a href="#添加动态线条效果" class="headerlink" title="添加动态线条效果"></a>添加动态线条效果</h1><p>主题配置文件内插入:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;script</span><br><span class="line">  type=&quot;text/javascript&quot;</span><br><span class="line">  color=&quot;220,220,220&quot;</span><br><span class="line">  opacity=&quot;0.7&quot;</span><br><span class="line">  zIndex=&quot;-2&quot;</span><br><span class="line">  count=&quot;200&quot;</span><br><span class="line">  src=&quot;https://cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="网站添加雪花飘落效果"><a href="#网站添加雪花飘落效果" class="headerlink" title="网站添加雪花飘落效果"></a>网站添加雪花飘落效果</h1><p>在主题 source 目录下新建文件 snow.js 文件内写入以下代码:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">  $.fn.snow = <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $flake = $(<span class="string">&#x27;&lt;div id=&quot;snowbox&quot; /&gt;&#x27;</span>)</span><br><span class="line">        .css(&#123; <span class="attr">position</span>: <span class="string">&quot;absolute&quot;</span>, <span class="string">&quot;z-index&quot;</span>: <span class="string">&quot;9999&quot;</span>, <span class="attr">top</span>: <span class="string">&quot;-50px&quot;</span> &#125;)</span><br><span class="line">        .html(<span class="string">&quot;&amp;#10052;&quot;</span>),</span><br><span class="line">      documentHeight = $(<span class="built_in">document</span>).height(),</span><br><span class="line">      documentWidth = $(<span class="built_in">document</span>).width(),</span><br><span class="line">      defaults = &#123;</span><br><span class="line">        minSize: <span class="number">10</span>,</span><br><span class="line">        maxSize: <span class="number">20</span>,</span><br><span class="line">        newOn: <span class="number">1000</span>,</span><br><span class="line">        flakeColor:</span><br><span class="line">          <span class="string">&quot;#AFDAEF&quot;</span> <span class="comment">/* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      options = $.extend(&#123;&#125;, defaults, options);</span><br><span class="line">    <span class="keyword">var</span> interval = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> startPositionLeft = <span class="built_in">Math</span>.random() * documentWidth - <span class="number">100</span>,</span><br><span class="line">        startOpacity = <span class="number">0.5</span> + <span class="built_in">Math</span>.random(),</span><br><span class="line">        sizeFlake = options.minSize + <span class="built_in">Math</span>.random() * options.maxSize,</span><br><span class="line">        endPositionTop = documentHeight - <span class="number">200</span>,</span><br><span class="line">        endPositionLeft = startPositionLeft - <span class="number">500</span> + <span class="built_in">Math</span>.random() * <span class="number">500</span>,</span><br><span class="line">        durationFall = documentHeight * <span class="number">10</span> + <span class="built_in">Math</span>.random() * <span class="number">5000</span>;</span><br><span class="line">      $flake</span><br><span class="line">        .clone()</span><br><span class="line">        .appendTo(<span class="string">&quot;body&quot;</span>)</span><br><span class="line">        .css(&#123;</span><br><span class="line">          left: startPositionLeft,</span><br><span class="line">          opacity: startOpacity,</span><br><span class="line">          <span class="string">&quot;font-size&quot;</span>: sizeFlake,</span><br><span class="line">          color: options.flakeColor,</span><br><span class="line">        &#125;)</span><br><span class="line">        .animate(</span><br><span class="line">          &#123;</span><br><span class="line">            top: endPositionTop,</span><br><span class="line">            left: endPositionLeft,</span><br><span class="line">            opacity: <span class="number">0.2</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          durationFall,</span><br><span class="line">          <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">          <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="built_in">this</span>).remove();</span><br><span class="line">          &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;, options.newOn);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  $.fn.snow(&#123;</span><br><span class="line">    minSize: <span class="number">5</span> <span class="comment">/* 定义雪花最小尺寸 */</span>,</span><br><span class="line">    maxSize: <span class="number">50</span> <span class="comment">/* 定义雪花最大尺寸 */</span>,</span><br><span class="line">    newOn: <span class="number">300</span> <span class="comment">/* 定义密集程度，数字越小越密集 */</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>然后添加引用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/snow.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果没有效果请在 JS 前引用 Jquery</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;script</span><br><span class="line">  type=&quot;text/javascript&quot;</span><br><span class="line">  src=&quot;https://libs.baidu.com/jquery/1.8.3/jquery.js&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&lt;script</span><br><span class="line">  type=&quot;text/javascript&quot;</span><br><span class="line">  src=&quot;https://libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="网站添加飘动的彩带"><a href="#网站添加飘动的彩带" class="headerlink" title="网站添加飘动的彩带"></a>网站添加飘动的彩带</h1><p>主题配置文件里添加引用:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;script</span><br><span class="line">  src=&quot;https://g.joyinshare.com/hc/piao.js&quot;</span><br><span class="line">  type=&quot;text/javascript&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="添加代码雨特效"><a href="#添加代码雨特效" class="headerlink" title="添加代码雨特效"></a>添加代码雨特效</h1><p>新建 DigitalRain.js 文件 写入以下代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//获取画布对象</span></span><br><span class="line">  <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">  <span class="comment">//获取画布的上下文</span></span><br><span class="line">  <span class="keyword">var</span> context = canvas.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> s = <span class="built_in">window</span>.screen;</span><br><span class="line">  <span class="keyword">var</span> W = (canvas.width = s.width);</span><br><span class="line">  <span class="keyword">var</span> H = canvas.height;</span><br><span class="line">  <span class="comment">//获取浏览器屏幕的宽度和高度</span></span><br><span class="line">  <span class="comment">//var W = window.innerWidth;</span></span><br><span class="line">  <span class="comment">//var H = window.innerHeight;</span></span><br><span class="line">  <span class="comment">//设置canvas的宽度和高度</span></span><br><span class="line">  canvas.width = W;</span><br><span class="line">  canvas.height = H;</span><br><span class="line">  <span class="comment">//每个文字的字体大小</span></span><br><span class="line">  <span class="keyword">var</span> fontSize = <span class="number">12</span>;</span><br><span class="line">  <span class="comment">//计算列</span></span><br><span class="line">  <span class="keyword">var</span> colunms = <span class="built_in">Math</span>.floor(W / fontSize);</span><br><span class="line">  <span class="comment">//记录每列文字的y轴坐标</span></span><br><span class="line">  <span class="keyword">var</span> drops = [];</span><br><span class="line">  <span class="comment">//给每一个文字初始化一个起始点的位置</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; colunms; i++) &#123;</span><br><span class="line">    drops.push(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//运动的文字</span></span><br><span class="line">  <span class="keyword">var</span> str = <span class="string">&quot;WELCOME TO WWW.ITRHX.COM&quot;</span>;</span><br><span class="line">  <span class="comment">//4:fillText(str,x,y);原理就是去更改y的坐标位置</span></span><br><span class="line">  <span class="comment">//绘画的函数</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    context.fillStyle = <span class="string">&quot;rgba(238,238,238,.08)&quot;</span>; <span class="comment">//遮盖层</span></span><br><span class="line">    context.fillRect(<span class="number">0</span>, <span class="number">0</span>, W, H);</span><br><span class="line">    <span class="comment">//给字体设置样式</span></span><br><span class="line">    context.font = <span class="string">&quot;600 &quot;</span> + fontSize + <span class="string">&quot;px  Georgia&quot;</span>;</span><br><span class="line">    <span class="comment">//给字体添加颜色</span></span><br><span class="line">    context.fillStyle = [</span><br><span class="line">      <span class="string">&quot;#33B5E5&quot;</span>,</span><br><span class="line">      <span class="string">&quot;#0099CC&quot;</span>,</span><br><span class="line">      <span class="string">&quot;#AA66CC&quot;</span>,</span><br><span class="line">      <span class="string">&quot;#9933CC&quot;</span>,</span><br><span class="line">      <span class="string">&quot;#99CC00&quot;</span>,</span><br><span class="line">      <span class="string">&quot;#669900&quot;</span>,</span><br><span class="line">      <span class="string">&quot;#FFBB33&quot;</span>,</span><br><span class="line">      <span class="string">&quot;#FF8800&quot;</span>,</span><br><span class="line">      <span class="string">&quot;#FF4444&quot;</span>,</span><br><span class="line">      <span class="string">&quot;#CC0000&quot;</span>,</span><br><span class="line">    ][<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">10</span>)]; <span class="comment">//randColor();可以rgb,hsl, 标准色，十六进制颜色</span></span><br><span class="line">    <span class="comment">//写入画布中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; colunms; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * str.length);</span><br><span class="line">      <span class="keyword">var</span> x = i * fontSize;</span><br><span class="line">      <span class="keyword">var</span> y = drops[i] * fontSize;</span><br><span class="line">      context.fillText(str[index], x, y);</span><br><span class="line">      <span class="comment">//如果要改变时间，肯定就是改变每次他的起点</span></span><br><span class="line">      <span class="keyword">if</span> (y &gt;= canvas.height &amp;&amp; <span class="built_in">Math</span>.random() &gt; <span class="number">0.99</span>) &#123;</span><br><span class="line">        drops[i] = <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      drops[i]++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">randColor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//随机颜色</span></span><br><span class="line">    <span class="keyword">var</span> r = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">    <span class="keyword">var</span> g = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">    <span class="keyword">var</span> b = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;rgb(&quot;</span> + r + <span class="string">&quot;,&quot;</span> + g + <span class="string">&quot;,&quot;</span> + b + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  draw();</span><br><span class="line">  <span class="built_in">setInterval</span>(draw, <span class="number">35</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>然后添加引用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span> <span class="attr">width</span>=<span class="string">&quot;1440&quot;</span> <span class="attr">height</span>=<span class="string">&quot;900&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/DigitalRain.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="End"><a href="#End" class="headerlink" title="End"></a>End</h1>]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>魔改</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-Butterfly主题魔改</title>
    <url>/2021/posts/bbr35lia/index.html</url>
    <content><![CDATA[<p>本文章首发于<a href="https://www.yuque.com/ladjeek/ygg4q6">语雀</a>!<br>通过各种高科技功能同步到<a href="https://blog.slqwq.cn/">Hajeekn 的博客</a></p>
<div class="note green icon simple"><i class="note-icon fab fa-internet-explorer"></i><p>本文章大部分功能涉及到魔改,如果您无法掌握 pug、stylus 等文件的缩进格式，可以直接前往我的博客源码拿取。</p>
</div>
<a class="btn-beautify button--animated orange larger" href="https://github.com/ladjeek-actions/blogsour" 
  title="这里是我的博客源码哦~"><i class="far fa-hand-point-right fa-fw"></i><span>这里是我的博客源码哦~</span></a>
<div class="note warning simple"><p>由于每个人的博客目录都不相同，这里博客目录使用%brt%代替</p>
</div>

<h1 id="通过-wowjs-给博客添加好看的样式"><a href="#通过-wowjs-给博客添加好看的样式" class="headerlink" title="通过 wowjs 给博客添加好看的样式"></a>通过 wowjs 给博客添加好看的样式</h1><h2 id="基础样式篇"><a href="#基础样式篇" class="headerlink" title="基础样式篇"></a>基础样式篇</h2><ul>
<li>1.创建 JS</li>
</ul>
<p>前往<code>%brt%\themes\butterfly\source\js\</code><br>新建一个 js,名称为<code>wow-init.js</code><br>其 JS 内部写入如下内容</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">wow = <span class="keyword">new</span> WOW(&#123;</span><br><span class="line">  boxClass: <span class="string">&quot;wow&quot;</span>,</span><br><span class="line">  <span class="comment">// 用户滚动时显示隐藏框的类名称(可以自行配置)</span></span><br><span class="line">  animateClass: <span class="string">&quot;animate__animated&quot;</span>,</span><br><span class="line">  <span class="comment">// 触发 CSS 动画的类名称（动画库默认为&quot;animate.css&quot;库）(可以自行配置)</span></span><br><span class="line">  offset: <span class="number">0</span>,</span><br><span class="line">  <span class="comment">// 定义浏览器视口底部与隐藏框顶部之间的距离。</span></span><br><span class="line">  <span class="comment">// 当用户滚动并到达此距离时，将显示隐藏的框。</span></span><br><span class="line">  <span class="comment">// 可以自行配置</span></span><br><span class="line">  live: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 在页面上检查新的 wow.js元素。</span></span><br><span class="line">&#125;);</span><br><span class="line">wow.init();</span><br></pre></td></tr></table></figure>

<p>如果您觉得不想出现注释，也可以删掉注释。</p>
<ul>
<li>2.前往<code>%brt%\themes\butterfly\layout\includes\third-party\</code>目录,新建一个名为<code>wow-js.pug</code>的文件</li>
</ul>
<p>其文件内部写入如下代码:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">.pjax-reload</span><br><span class="line">  <span class="keyword">if</span> theme.wowjs.animateitem</span><br><span class="line">    each item <span class="keyword">in</span> theme.wowjs.animateitem</span><br><span class="line">      script(<span class="keyword">async</span>).</span><br><span class="line">        var arr = document.getElementsByClassName(<span class="string">&#x27;!&#123;item.class&#125;&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span>(var i = <span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">            arr[i].classList.add(<span class="string">&#x27;wow&#x27;</span>);</span><br><span class="line">            arr[i].classList.add(<span class="string">&#x27;!&#123;item.style&#125;&#x27;</span>);</span><br><span class="line">            arr[i].setAttribute(<span class="string">&#x27;data-wow-duration&#x27;</span>, <span class="string">&#x27;!&#123;item.duration&#125;&#x27;</span>);</span><br><span class="line">            arr[i].setAttribute(<span class="string">&#x27;data-wow-delay&#x27;</span>, <span class="string">&#x27;!&#123;item.delay&#125;&#x27;</span>);</span><br><span class="line">            arr[i].setAttribute(<span class="string">&#x27;data-wow-offset&#x27;</span>, <span class="string">&#x27;!&#123;item.offset&#125;&#x27;</span>);</span><br><span class="line">            arr[i].setAttribute(<span class="string">&#x27;data-wow-iteration&#x27;</span>, <span class="string">&#x27;!&#123;item.iteration&#125;&#x27;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">script(defer src=url_for(theme.CDN.wowjs))</span><br><span class="line">script(defer src=url_for(theme.CDN.wowjs_init))</span><br></pre></td></tr></table></figure>

<ul>
<li>3.修改<code>%brt%\themes\butterfly\layout\includes\head.pug</code>的内容</li>
</ul>
<p>在 //- font 的配置下<br>//- global config 的配置上的空白部分写入以下代码(请直接复制粘贴,避免出现缩进错误 ❌)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;- animate_css</span><br><span class="line">if theme.wowjs.enable</span><br><span class="line">  link(rel&#x3D;&#39;stylesheet&#39; href&#x3D;url_for(theme.CDN.animate_css) media&#x3D;&quot;print&quot; onload&#x3D;&quot;this.media&#x3D;&#39;all&#39;&quot;)</span><br></pre></td></tr></table></figure>

<ul>
<li>4.修改<code>%brt&amp;\themes\butterfly\layout\includes\additional-js.pug</code>文件内部的内容</li>
</ul>
<p>在 if theme.pjax.enable 配置大项的 baidu-push 小项下写入一下代码(请直接复制粘贴,避免出现缩进错误 ❌)<br>V3.4.0 以下(不包括 3.4.0):<br>将其中的</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;script[data-pjax]&#x27;</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br></pre></td></tr></table></figure>

<p>删除,并修改为:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;script[data-pjax], .pjax-reload script&quot;</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="built_in">this</span>).parent().append($(<span class="built_in">this</span>).remove());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>V3.4.0 以上(包括 3.4.0):<br>找到</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;script[data-pjax]&#x27;</span>).forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br></pre></td></tr></table></figure>

<p>删除它,并写入以下代码(请直接复制粘贴,避免缩进错误 ❌)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span></span><br><span class="line">  .querySelectorAll(<span class="string">&quot;script[data-pjax], .pjax-reload script&quot;</span>)</span><br><span class="line">  .forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> newScript = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> content = item.text || item.textContent || item.innerHTML || <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">Array</span>.from(item.attributes).forEach(<span class="function">(<span class="params">attr</span>) =&gt;</span></span><br><span class="line">      newScript.setAttribute(attr.name, attr.value)</span><br><span class="line">    );</span><br><span class="line">    newScript.appendChild(<span class="built_in">document</span>.createTextNode(content));</span><br><span class="line">    item.parentNode.replaceChild(newScript, item);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<ul>
<li>5.修改<code>%brt\%config%\_config.butterfly.yml</code>(请将%config%替换为你主题配置文件的位置,如果在根目录请无视)</li>
</ul>
<p>找到 CDN 配置项<br>在</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">utils:</span> <span class="string">/js/utils.js</span></span><br></pre></td></tr></table></figure>

<p>的配置项下添加 wowjs、wowjs-init、animate 的库(请直接复制粘贴以下代码,避免格式缩进导致的错误 ❌)</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">wowjs:</span> <span class="string">https://cdn.jsdelivr.net/gh/graingert/wow@1.3.0/dist/wow.min.js</span></span><br><span class="line"><span class="attr">wowjs_init:</span> <span class="string">/js/wow_init.js</span></span><br><span class="line"><span class="attr">animate_css:</span> <span class="string">https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css</span></span><br></pre></td></tr></table></figure>

<ul>
<li>6.修改<code>%brt\%config%\_config.butterfly.yml</code>(请将%config%替换为你主题配置文件的位置,如果在根目录请无视)</li>
</ul>
<p>在该配置文件内部添加 wow 的开关，其中 class 和 style 配置为必填项</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">wowjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制动画开关。true是打开，false是关闭</span></span><br><span class="line">  <span class="attr">animateitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">recent-post-item</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="string">1s</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">100</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">2</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">CoolButton</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span></span><br></pre></td></tr></table></figure>

<p>运行<code>hexo clean &amp;&amp; hexo g</code>后方可看到效果,更多 animate 动画样式可查看<a href="https://animate.style/">animate 官方文档</a></p>
<h2 id="浮动样式篇"><a href="#浮动样式篇" class="headerlink" title="浮动样式篇"></a>浮动样式篇</h2><div class="note info simple"><p>浮动样式篇参考<a href="https://akilar.top/">Aklilar</a>大佬的文章<a href="https://akilar.top/posts/9e3bccc6">给博客元素添加浮动特效</a>和<a href="https://blog.zhheo.com/">洪哥</a>的博客效果</p>
</div>

<ul>
<li>1.前往<code>%brt%\themes\butterfly\source\js\</code>目录,新建一个名为<code>floatpanel.js</code>的文件</li>
</ul>
<p>在内部写入以下代码:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ANGLE = <span class="number">45</span>; <span class="comment">//控制浮动角度，数值越大，浮动幅度越大。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> panel = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;wowpanels&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; panel.length; i++) &#123;</span><br><span class="line">  floatable(panel[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">floatable</span>(<span class="params">content</span>) </span>&#123;</span><br><span class="line">  content.addEventListener(<span class="string">&quot;mouseout&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    content.style.transform = <span class="string">`perspective(300px)</span></span><br><span class="line"><span class="string">								   rotateX(0deg)</span></span><br><span class="line"><span class="string">								   rotateY(0deg)</span></span><br><span class="line"><span class="string">								   rotateZ(0deg)`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  content.addEventListener(<span class="string">&quot;mousemove&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> w = content.clientWidth;</span><br><span class="line">    <span class="keyword">var</span> h = content.clientHeight;</span><br><span class="line">    <span class="keyword">var</span> y = ((e.offsetX - w * <span class="number">0.5</span>) / w) * ANGLE;</span><br><span class="line">    <span class="keyword">var</span> x = ((<span class="number">1</span> - (e.offsetY - h * <span class="number">0.5</span>)) / h) * ANGLE;</span><br><span class="line"></span><br><span class="line">    content.style.transform = <span class="string">`perspective(300px)</span></span><br><span class="line"><span class="string">								   rotateX(<span class="subst">$&#123;x&#125;</span>deg)</span></span><br><span class="line"><span class="string">								   rotateY(<span class="subst">$&#123;y&#125;</span>deg)`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.修改<code>%brt\%config%\_config.butterfly.yml</code>(请将%config%替换为你主题配置文件的位置,如果在根目录请无视)</li>
</ul>
<p>在 inject 大项的 bottom 小项中添加 script 引入项:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/js/floatpanel.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>3.给你想要特效的类元素添加 wowpanels 属性,修改 floatpanel.js 的代码如下:</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">新增的内容</span></span><br><span class="line"><span class="string">var</span> <span class="string">arr</span> <span class="string">=</span> <span class="string">document.getElementsByClassName(&#x27;element-class&#x27;);</span></span><br><span class="line"><span class="string">//把element-class替换成你想要添加特效的元素的类名</span></span><br><span class="line"><span class="string">for(var</span> <span class="string">i</span> <span class="string">=</span> <span class="number">0</span><span class="string">;i&lt;arr.length;i++)&#123;</span></span><br><span class="line"><span class="string">arr[i].classList.add(&#x27;wowpanels&#x27;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">//</span> <span class="string">原来的内容</span></span><br><span class="line"><span class="string">var</span> <span class="string">ANGLE</span> <span class="string">=</span> <span class="number">45</span><span class="string">;</span> <span class="string">//控制浮动角度，数值越大，浮动幅度越大。</span></span><br><span class="line"><span class="string">var</span> <span class="string">panel=</span> <span class="string">document.getElementsByClassName(&#x27;wowpanels&#x27;);</span></span><br><span class="line"><span class="string">for(var</span> <span class="string">i</span> <span class="string">=</span> <span class="number">0</span><span class="string">;i&lt;panel.length;i++)&#123;</span></span><br><span class="line"><span class="string">floatable(panel[i]);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">function</span> <span class="string">floatable</span> <span class="string">(content)</span> &#123;</span><br><span class="line"><span class="string">content.addEventListener(&#x27;mouseout&#x27;</span>, <span class="string">e</span> <span class="string">=&gt;</span> &#123;</span><br><span class="line"><span class="string">content.style.transform</span> <span class="string">=</span> <span class="string">`perspective(300px)</span></span><br><span class="line"><span class="string">rotateX(0deg)</span></span><br><span class="line"><span class="string">rotateY(0deg)</span></span><br><span class="line"><span class="string">rotateZ(0deg)`;</span></span><br><span class="line">&#125;<span class="string">);</span></span><br><span class="line"><span class="string">content.addEventListener(&#x27;mousemove&#x27;</span>, <span class="string">e</span> <span class="string">=&gt;</span> &#123;</span><br><span class="line"><span class="string">var</span> <span class="string">w</span> <span class="string">=</span> <span class="string">content.clientWidth;</span></span><br><span class="line"><span class="string">var</span> <span class="string">h</span> <span class="string">=</span> <span class="string">content.clientHeight;</span></span><br><span class="line"><span class="string">var</span> <span class="string">y</span> <span class="string">=</span> <span class="string">(e.offsetX</span> <span class="bullet">-</span> <span class="string">w</span> <span class="string">*</span> <span class="number">0.5</span><span class="string">)</span> <span class="string">/</span> <span class="string">w</span> <span class="string">*</span> <span class="string">ANGLE;</span></span><br><span class="line"><span class="string">var</span> <span class="string">x</span> <span class="string">=</span> <span class="string">(1</span> <span class="bullet">-</span> <span class="string">(e.offsetY</span> <span class="bullet">-</span> <span class="string">h</span> <span class="string">*</span> <span class="number">0.5</span><span class="string">))</span> <span class="string">/</span> <span class="string">h</span> <span class="string">*</span> <span class="string">ANGLE;</span></span><br><span class="line"></span><br><span class="line"><span class="string">content.style.transform</span> <span class="string">=</span> <span class="string">`perspective(300px)</span></span><br><span class="line"><span class="string">rotateX($</span>&#123;<span class="string">x</span>&#125;<span class="string">deg)</span></span><br><span class="line"><span class="string">rotateY($</span>&#123;<span class="string">y</span>&#125;<span class="string">deg)`;</span></span><br><span class="line">&#125;<span class="string">);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><em><strong>当你完成了基础样式篇时,其实你可以直接将浮动效果看成一个动画样式</strong></em><br>在之前的配置下直接添加以下配置项:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class:</span> <span class="comment">#你想要更改的class类名</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">wowpanels</span></span><br></pre></td></tr></table></figure>

<p>添加完成后 wowjs 的配置项应该与下面的截图类似<br><img src= "/img/loading.gif" data-lazy-src="https://cdn.nlark.com/yuque/0/2021/png/12488964/1611663209876-8bc916b7-8a68-4ff4-9fad-d3b65be99d6f.png#align=left&display=inline&height=331&margin=%5Bobject%20Object%5D&name=image.png&originHeight=662&originWidth=950&size=154327&status=done&style=none&width=475" alt="image.png"><br>如果报错,请检查你的配置缩进是否正确 ✔,这里博主推荐使用微软爸爸出品的 VSC 编辑对于缩进格式邀请很强的文件格式<br>以下代码供您用来参考:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># wowjs</span></span><br><span class="line"><span class="attr">wowjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#控制动画开关。true是打开，false是关闭</span></span><br><span class="line">  <span class="attr">animateitem:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">recent-post-item</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomIn</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="number">0.</span><span class="string">5s</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">100</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">1</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">card-widget</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__zoomInUp</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="number">0.</span><span class="string">5s</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">100</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">1</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">layout</span> <span class="string">hide-aside</span> <span class="comment">#必填项，需要添加动画的元素的class</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">animate__flipInY</span> <span class="comment">#必填项，需要添加的动画</span></span><br><span class="line">      <span class="attr">duration:</span> <span class="string">3s</span> <span class="comment">#选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">delay:</span> <span class="number">0.</span><span class="string">5s</span> <span class="comment">#选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。</span></span><br><span class="line">      <span class="attr">offset:</span> <span class="number">100</span> <span class="comment">#选填项，开始动画的距离（相对浏览器底部）</span></span><br><span class="line">      <span class="attr">iteration:</span> <span class="number">1</span> <span class="comment">#选填项，动画重复的次数</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">class:</span> <span class="string">CoolButton</span></span><br><span class="line">      <span class="attr">style:</span> <span class="string">wowpanels</span></span><br></pre></td></tr></table></figure>

<p><strong>如果您想让动画更滑丝滑流畅,可以新建 css,在内部写入以下代码:</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.wowpanels</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.4s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.39</span>, <span class="number">0.575</span>, <span class="number">0.565</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="添加-BiliBili-同款的动态-Banner"><a href="#添加-BiliBili-同款的动态-Banner" class="headerlink" title="添加 BiliBili 同款的动态 Banner"></a>添加 BiliBili 同款的动态 Banner</h1><div class="note warning simple"><p>由于每个人的博客目录都不相同，这里博客目录使用%brt%代替</p>
</div>

<div class="btns"><a href="https://slqwq.lanzous.com/i94DIkvxz6f" title="下载Bilibili的Banner" one-link-mark="yes" data-pjax-state=""><i class="far fa-hand-point-right"></i>下载Bilibili的Banner</a></div>

<ul>
<li>1.前往<code>%brt%\themes\butterfly\layout\includes\header\</code>新建一个名为<code>bilibili-banner.pug</code>的文件</li>
</ul>
<p>在其内部写入</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!is_home())</span><br><span class="line">  - <span class="keyword">var</span> banner_style = (<span class="keyword">typeof</span>(page.bilibili_banner) != <span class="string">&quot;undefined&quot;</span> &amp;&amp; page.bilibili_banner!=<span class="literal">null</span>) ? page.bilibili_banner : theme.bilibili_banner.style</span><br><span class="line">  <span class="keyword">if</span> (banner_style === <span class="string">&#x27;autumn&#x27;</span>)</span><br><span class="line">    #autumnBanner</span><br><span class="line">      div</span><br><span class="line">        img(src=<span class="string">&#x27;/bilibiliBanner/autumn/bilibili-autumn-1.png&#x27;</span>)</span><br><span class="line">      div</span><br><span class="line">        img(src=<span class="string">&#x27;/bilibiliBanner/autumn/bilibili-autumn-2.png&#x27;</span>)</span><br><span class="line">      div</span><br><span class="line">        img(src=<span class="string">&#x27;/bilibiliBanner/autumn/bilibili-autumn-3.png&#x27;</span>)</span><br><span class="line">      div</span><br><span class="line">        img(src=<span class="string">&#x27;/bilibiliBanner/autumn/bilibili-autumn-4.png&#x27;</span>)</span><br><span class="line">      div</span><br><span class="line">        img(src=<span class="string">&#x27;/bilibiliBanner/autumn/bilibili-autumn-5.png&#x27;</span>)</span><br><span class="line">      div</span><br><span class="line">        img(src=<span class="string">&#x27;/bilibiliBanner/autumn/bilibili-autumn-6.png&#x27;</span>)</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (banner_style === <span class="string">&#x27;winter&#x27;</span>)</span><br><span class="line">    #winterBanner</span><br><span class="line">      .view</span><br><span class="line">        img.morning(src=<span class="string">&#x27;/bilibiliBanner/winter/bilibili-winter-view-1.png&#x27;</span> alt=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        img.afternoon(src=<span class="string">&#x27;/bilibiliBanner/winter/bilibili-winter-view-2.png&#x27;</span> alt=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        video.evening(autoplay=<span class="string">&#x27;&#x27;</span> loop=<span class="string">&#x27;&#x27;</span> muted=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">          source(src=<span class="string">&#x27;/bilibiliBanner/winter/bilibili-winter-view-3.webm&#x27;</span> type=<span class="string">&#x27;video/webm&#x27;</span>)</span><br><span class="line">        img.window-cover(src=<span class="string">&#x27;/bilibiliBanner/winter/bilibili-winter-view-3-snow.png&#x27;</span> alt=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      .tree</span><br><span class="line">        img.morning(src=<span class="string">&#x27;/bilibiliBanner/winter/bilibili-winter-tree-1.png&#x27;</span> alt=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        img.afternoon(src=<span class="string">&#x27;/bilibiliBanner/winter/bilibili-winter-tree-2.png&#x27;</span> alt=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        img.evening(src=<span class="string">&#x27;/bilibiliBanner/winter/bilibili-winter-tree-3.png&#x27;</span> alt=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  script(<span class="keyword">async</span> data-pjax src=url_for(theme.CDN.bilibili_banner))</span><br></pre></td></tr></table></figure>

<ul>
<li>2.前往<code>%brt%\themes\butterfly\source\css\</code>新建一个名为<code>bilibiliBanner.css</code>的文件</li>
</ul>
<p>在其内部写入以下代码:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* autumnBanner */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">1000px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#autumnBanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#autumnBanner</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">brightness</span>(<span class="number">70%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#autumnBanner</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">--offset</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">--blur</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#autumnBanner</span> &gt; <span class="selector-tag">div</span> &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">110%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">object-fit</span>: cover;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translatex</span>(var(--offset));</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(var(--blur));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* winterBanner */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">1000px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#winterBanner</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">--percentage</span>: <span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.view</span>,</span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.tree</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-tag">img</span>,</span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-tag">video</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">120%</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">120%</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">object-fit</span>: cover;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">brightness</span>(<span class="number">70%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.morning</span> &#123;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">20</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="built_in">calc</span>(<span class="number">1</span> - (var(--percentage) - <span class="number">0.25</span>) / <span class="number">0.25</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.afternoon</span> &#123;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="built_in">calc</span>(<span class="number">1</span> - (var(--percentage) - <span class="number">0.5</span>) / <span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.view</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translatex</span>(calc(var(--percentage) * <span class="number">100px</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.tree</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translatex</span>(calc(var(--percentage) * <span class="number">50px</span>));</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">3px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.view</span>,</span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.tree</span>,</span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.morning</span>,</span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.afternoon</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.2s</span> all ease-in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span><span class="selector-class">.moving</span> <span class="selector-class">.view</span>,</span><br><span class="line"><span class="selector-id">#winterBanner</span><span class="selector-class">.moving</span> <span class="selector-class">.tree</span>,</span><br><span class="line"><span class="selector-id">#winterBanner</span><span class="selector-class">.moving</span> <span class="selector-class">.morning</span>,</span><br><span class="line"><span class="selector-id">#winterBanner</span><span class="selector-class">.moving</span> <span class="selector-class">.afternoon</span> &#123;</span><br><span class="line">  <span class="attribute">transition</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#winterBanner</span> <span class="selector-class">.window-cover</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="built_in">calc</span>((var(--percentage) - <span class="number">0.9</span>) / <span class="number">0.1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>3.前往<code>%brt%\themes\butterfly\source\js\</code>新建一个名为<code>bilibili-banner.js</code>的文件</li>
</ul>
<p>在其内部写入以下代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//autumn_banner</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> autumnBanner = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#autumnBanner&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (autumnBanner) &#123;</span><br><span class="line">  <span class="keyword">var</span> images = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;#autumnBanner &gt; div &gt; img&quot;</span>);</span><br><span class="line">  autumnBanner.addEventListener(<span class="string">&quot;mousemove&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> percentage = e.clientX / <span class="built_in">window</span>.outerWidth;</span><br><span class="line">    <span class="keyword">let</span> offset = <span class="number">10</span> * percentage;</span><br><span class="line">    <span class="keyword">let</span> blur = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> [index, image] <span class="keyword">of</span> images.entries()) &#123;</span><br><span class="line">      offset *= <span class="number">1.3</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> blurValue = <span class="built_in">Math</span>.pow(index / images.length - percentage, <span class="number">2</span>) * blur;</span><br><span class="line"></span><br><span class="line">      image.style.setProperty(<span class="string">&quot;--offset&quot;</span>, <span class="string">`<span class="subst">$&#123;offset&#125;</span>px`</span>);</span><br><span class="line">      image.style.setProperty(<span class="string">&quot;--blur&quot;</span>, <span class="string">`<span class="subst">$&#123;blurValue&#125;</span>px`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//winter_banner</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> winterBanner = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#winterBanner&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (winterBanner) &#123;</span><br><span class="line">  <span class="keyword">var</span> startingPoint;</span><br><span class="line">  winterBanner.addEventListener(<span class="string">&quot;mouseenter&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    startingPoint = e.clientX;</span><br><span class="line">    winterBanner.classList.add(<span class="string">&quot;moving&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  winterBanner.addEventListener(<span class="string">&quot;mouseout&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    winterBanner.classList.remove(<span class="string">&quot;moving&quot;</span>);</span><br><span class="line">    winterBanner.style.setProperty(<span class="string">&quot;--percentage&quot;</span>, <span class="number">0.5</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  winterBanner.addEventListener(<span class="string">&quot;mousemove&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> percentage = (e.clientX - startingPoint) / <span class="built_in">window</span>.outerWidth + <span class="number">0.5</span>;</span><br><span class="line"></span><br><span class="line">    winterBanner.style.setProperty(<span class="string">&quot;--percentage&quot;</span>, percentage);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>4.在主题的 source 文件夹下新建<code>bilibiliBanner</code>文件夹,将我所提供的资源解压,直接放入进去(里面一定只有两个目录)</li>
<li>5.进入<code>%brt%\themes\butterfly\layout\includes\header\</code>文件夹,找到<code>index.pug</code>在内部注入 bilibili_banner 组件</li>
</ul>
<p>在 include ./nav.pug 配置下 if is_post()配置上添加以下配置(请直接复制粘贴,避免代码缩进导致的错误 ❌)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">- <span class="keyword">var</span> bilibili_banner = (<span class="keyword">typeof</span>(page.bilibili_banner) != <span class="string">&quot;undefined&quot;</span> &amp;&amp; page.bilibili_banner!=<span class="literal">null</span>) ? page.bilibili_banner : theme.bilibili_banner.enable</span><br><span class="line"><span class="keyword">if</span> (bilibili_banner)</span><br><span class="line">  include ./bilibili-banner.pug</span><br></pre></td></tr></table></figure>

<ul>
<li>6.修改<code>%brt\%config%\_config.butterfly.yml</code>(请将%config%替换为你主题配置文件的位置,如果在根目录请无视)</li>
</ul>
<p>找到 CDN 配置,在 utils: /js/utils.js 配置的后面添加以下配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">bilibili_banner:</span> <span class="string">/js/bilibili-banner.js</span></span><br></pre></td></tr></table></figure>

<ul>
<li><em><strong>添加  **</strong><code>css</code>*<strong>*  配置项。此处使用了异步加载，同时做了媒体选择，对手机是不会生效的。因为手机的  **</strong><code>banner</code>*<strong>*  高度会导致适配效果很差。</strong></em></li>
</ul>
<p>我们找到 inject 配置大项的 head 小项,在其内部添加以下配置:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/bilibiliBanner.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;screen&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>7.添加控制开关</li>
</ul>
<p>在 butterfly 主题配置中添加以下配置:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># banner样式</span></span><br><span class="line"><span class="attr">bilibili_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关banner</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">winter</span> <span class="comment"># autumn 秋季样式 ；winter 冬季样式</span></span><br></pre></td></tr></table></figure>

<ul>
<li>除了在主题配置文件通过配置  <code>bilibili_banner:</code>  的默认项，还可以在每个页面的  <code>markdown</code>  文件中通过  <code>front-matter</code>  控制单页配置。提供了<strong>三个选项</strong>：</li>
<li><code>false</code> ：  关闭该页面的动态 <code>banner</code> 显示</li>
<li><code>autumn</code> ：  开启该页面的动态 <code>banner</code>，并设置主题为秋季</li>
<li><code>winter</code> ：  开启该页面的动态 <code>banner</code>，并设置主题为冬季<br>页面配置项优先级高于主题配置</li>
</ul>
<h1 id="悬停左上角时在网站顶部中间位置会出现描述"><a href="#悬停左上角时在网站顶部中间位置会出现描述" class="headerlink" title="悬停左上角时在网站顶部中间位置会出现描述"></a>悬停左上角时在网站顶部中间位置会出现描述</h1><ul>
<li>1.进入<code>%brt%\themes\butterfly\layout\includes\header\</code>修改名为<code>nav.pug</code>的文件</li>
</ul>
<p>找到</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">span#blog_name</span><br><span class="line">a#site-name(href=url_for(<span class="string">&#x27;/&#x27;</span>)) #[=config.title]</span><br></pre></td></tr></table></figure>

<p>将它们删除,并替换为以下代码(请直接复制粘贴,避免缩进错误 ❌):</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">- <span class="keyword">var</span> pagedescr = (<span class="keyword">typeof</span>(page.description) != <span class="string">&quot;undefined&quot;</span> &amp;&amp; page.description!=<span class="literal">null</span>) ? page.description : <span class="string">&#x27;欢迎您来到了Hajeekn的小木屋呢,不过看起来有点漏水🐕&#x27;</span></span><br><span class="line">  <span class="keyword">if</span> is_post()</span><br><span class="line">    span#blog_name</span><br><span class="line">      a#site-name(onclick=<span class="string">&#x27;btf.scrollToDest(0,500)&#x27;</span> data-title=pagedescr) #[=config.title]</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> is_page()</span><br><span class="line">    span#blog_name</span><br><span class="line">      a#site-name(href=url_for(<span class="string">&#x27;/&#x27;</span>) data-title=pagedescr) #[=page.title]</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    span#blog_name</span><br><span class="line">      a#site-name(href=url_for(<span class="string">&#x27;/&#x27;</span>) data-title=pagedescr) #[=config.title]</span><br></pre></td></tr></table></figure>

<ul>
<li>2.因为  <code>hexo</code>  自带缓存的关系，如果我们用的是缓存式引入的话，<code>nav</code>  的刷新是惰性的，我们需要它根据文章和页面的切换实时变动。所以需要改动一下引入逻辑。打开<code>%brt%\themes\butterfly\layout\includes\header\index.pug</code></li>
</ul>
<p>找到</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!=partial(<span class="string">&#x27;includes/header/nav&#x27;</span>, &#123;&#125;, &#123;<span class="attr">cache</span>:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure>

<p>删除,并将它修改为以下代码(请直接复制粘贴,避免缩进错误 ❌):</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">include ./nav.pug</span><br><span class="line"><span class="keyword">if</span> top_img !== <span class="literal">false</span></span><br><span class="line">  <span class="keyword">if</span> is_post()</span><br><span class="line">    include ./post-info.pug</span><br></pre></td></tr></table></figure>

<p>(如果您添加了 BiliBili 动态 banner,请将它放置在在 if is_post()的前面 if top_img !== false 的后面,避免报错)</p>
<ul>
<li>3.进入<code>%brt%\themes\butterfly\source\css\_layout\</code>新建_custom.styl</li>
</ul>
<p>在其内部输入以下代码(请直接复制粘贴,避免缩进错误 ❌):</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*标题悬停显示文章描述*/</span></span><br><span class="line"><span class="selector-id">#site-name</span></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span></span><br><span class="line">    &amp;<span class="selector-pseudo">:before</span></span><br><span class="line">      <span class="selector-tag">position</span>: <span class="selector-tag">fixed</span></span><br><span class="line">      <span class="selector-tag">width</span><span class="selector-pseudo">:fit-content</span></span><br><span class="line">      <span class="selector-tag">margin</span><span class="selector-pseudo">:auto</span></span><br><span class="line">      <span class="selector-tag">left</span><span class="selector-pseudo">:0</span>;</span><br><span class="line">      <span class="selector-tag">right</span><span class="selector-pseudo">:0</span></span><br><span class="line">      <span class="selector-tag">top</span><span class="selector-pseudo">:10</span>%</span><br><span class="line">      <span class="selector-tag">border-radius</span>: 10<span class="selector-tag">px</span></span><br><span class="line">      <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span></span><br><span class="line">      <span class="selector-tag">z-index</span>: 100</span><br><span class="line">      <span class="selector-tag">content</span>: <span class="selector-tag">attr</span>(<span class="selector-tag">data-title</span>)</span><br><span class="line">      <span class="selector-tag">font-size</span>: 20<span class="selector-tag">px</span></span><br><span class="line">      <span class="selector-tag">color</span>: <span class="selector-id">#fff</span></span><br><span class="line">      <span class="selector-tag">padding</span>: 10<span class="selector-tag">px</span></span><br><span class="line">      <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(<span class="selector-id">#49B1F5</span>,0.9)</span><br><span class="line"><span class="comment">/* 夜间模式适配 */</span></span><br><span class="line"><span class="selector-attr">[data-theme=dark]</span></span><br><span class="line">  <span class="selector-tag">a</span><span class="selector-id">#site-name</span></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span></span><br><span class="line">      &amp;<span class="selector-pseudo">:before</span></span><br><span class="line">        <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(<span class="selector-id">#121212</span>,0.8)</span><br><span class="line"><span class="comment">/*标题超过隐藏并显示省略号*/</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">768px</span>)</span><br><span class="line">  a#site-name</span><br><span class="line">    -webkit-line-clamp <span class="number">1</span></span><br><span class="line">    word-break break-all</span><br><span class="line">    display -webkit-box</span><br><span class="line">    -webkit-box-orient vertical</span><br><span class="line">    overflow hidden</span><br></pre></td></tr></table></figure>

<h1 id="主页置顶的-♂gitcalendar♂"><a href="#主页置顶的-♂gitcalendar♂" class="headerlink" title="主页置顶的 ♂gitcalendar♂"></a>主页置顶的 ♂gitcalendar♂</h1><p>哪个男孩纸不想拥有一个状态显示呢?<br>这个模块就会教大家在 Butterfly 使用 gitcalendar</p>
<h2 id="准备好了吗-Go-Go"><a href="#准备好了吗-Go-Go" class="headerlink" title="准备好了吗?Go Go!"></a>准备好了吗?Go Go!</h2><ul>
<li>1.前往<code>%brt\themes\butterfly\layout\includes\</code>新建一个名为<code>gitcalendar.pug</code>的文件</li>
</ul>
<p>在其内部添加以下代码(请直接复制粘贴,避免缩进错误 ❌):</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#gitcalendar.gitcalendar</span><br><span class="line">  #gitmessage(:style=<span class="string">&#x27;&#123;top:y+px,left:x+px,position: fixed,zIndex:9999&#125;&#x27;</span>)</span><br><span class="line">    .angle-wrapper</span><br><span class="line">      span &#123;&#123;span1&#125;&#125; &amp;nbsp;</span><br><span class="line">      span &#123;&#123;span2&#125;&#125; 次上传</span><br><span class="line">  .position-relative</span><br><span class="line">    .border.py-<span class="number">2.</span>graph-before-activity-overview</span><br><span class="line">      .js-gitcalendar-graph.mx-md-<span class="number">2.</span>mx-<span class="number">3.</span>d-flex.flex-column.flex-items-end.flex-xl-items-center.overflow-hidden.pt-<span class="number">1.</span>is-graph-loading.graph-canvas.gitcalendar-graph.height-full.text-center</span><br><span class="line">        #gitcalendarcanvasbox(v-<span class="keyword">if</span>=<span class="string">&#x27;simplemode&#x27;</span>)</span><br><span class="line">          canvas#gitcanvas(style=<span class="string">&#x27;animation: none;&#x27;</span>)</span><br><span class="line">        svg.js-gitcalendar-graph-svg(width=<span class="string">&#x27;100%&#x27;</span>, viewBox=<span class="string">&#x27;0 0 770 128&#x27;</span>, v-<span class="keyword">if</span>=<span class="string">&#x27;!simplemode&#x27;</span>)</span><br><span class="line">          text.month(:x=<span class="string">&#x27;32 + monthindex*64&#x27;</span>, y=<span class="string">&#x27;20&#x27;</span>, v-<span class="keyword">for</span>=<span class="string">&#x27;(month,monthindex) in monthchange&#x27;</span>) &#123;&#123;month&#125;&#125;</span><br><span class="line">          text.wday(text-anchor=<span class="string">&#x27;start&#x27;</span>, dx=<span class="string">&#x27;0&#x27;</span>, dy=<span class="string">&#x27;40&#x27;</span>)  日</span><br><span class="line">          text.wday(text-anchor=<span class="string">&#x27;start&#x27;</span>, dx=<span class="string">&#x27;0&#x27;</span>, dy=<span class="string">&#x27;65&#x27;</span>)  二</span><br><span class="line">          text.wday(text-anchor=<span class="string">&#x27;start&#x27;</span>, dx=<span class="string">&#x27;0&#x27;</span>, dy=<span class="string">&#x27;90&#x27;</span>)  四</span><br><span class="line">          text.wday(text-anchor=<span class="string">&#x27;start&#x27;</span>, dx=<span class="string">&#x27;0&#x27;</span>, dy=<span class="string">&#x27;115&#x27;</span>) 六</span><br><span class="line">          g(v-<span class="keyword">for</span>=<span class="string">&#x27;(weekitem,weekIndex) in data&#x27;</span>, :transform=<span class="string">&#x27;\&#x27;translate(\&#x27;+ (16 + weekIndex*14) + \&#x27;,\&#x27; + \&#x27;0)\&#x27;&#x27;</span>)</span><br><span class="line">            rect(@mouseover=<span class="string">&quot;selectStyle(dayitem,$event)&quot;</span>  @mouseleave=<span class="string">&quot;outStyle()&quot;</span> v-<span class="keyword">for</span>=<span class="string">&#x27;(dayitem,dayIndex) in weekitem&#x27;</span>, :style=<span class="string">&#x27;&#123;fill:thiscolor(dayitem.count),shapeRendering:crispedges&#125;&#x27;</span>, :data-score=<span class="string">&#x27;dayitem.count&#x27;</span>, :data-date=<span class="string">&#x27;dayitem.date&#x27;</span>, x=<span class="string">&#x27;0&#x27;</span>, :y=<span class="string">&#x27; 30 + dayIndex*13 &#x27;</span>, width=<span class="string">&#x27;11&#x27;</span>, height=<span class="string">&#x27;11&#x27;</span>)</span><br><span class="line">      .contrib-footer.clearfix.mt-<span class="number">1.</span>mx-<span class="number">3.</span>px-<span class="number">3.</span>pb-<span class="number">1</span></span><br><span class="line">        .float-left.text-gray</span><br><span class="line">          | 数据来源</span><br><span class="line">          a(:href=<span class="string">&quot;&#x27;https://github.com/&#x27;+ user &quot;</span>, target=<span class="string">&#x27;blank&#x27;</span>) @&#123;&#123;user&#125;&#125;</span><br><span class="line">        .contrib-legend.text-gray</span><br><span class="line">          | Less</span><br><span class="line"></span><br><span class="line">          ul.legend</span><br><span class="line">            li(:style=<span class="string">&#x27;&#123;backgroundColor:color[0]&#125;&#x27;</span>)</span><br><span class="line">            li(:style=<span class="string">&#x27;&#123;backgroundColor:color[2]&#125;&#x27;</span>)</span><br><span class="line">            li(:style=<span class="string">&#x27;&#123;backgroundColor:color[4]&#125;&#x27;</span>)</span><br><span class="line">            li(:style=<span class="string">&#x27;&#123;backgroundColor:color[6]&#125;&#x27;</span>)</span><br><span class="line">            li(:style=<span class="string">&#x27;&#123;backgroundColor:color[8]&#125;&#x27;</span>)</span><br><span class="line">          | More</span><br><span class="line"></span><br><span class="line">  .contrib-column.contrib-column-first.table-column</span><br><span class="line">    span.text-muted 过去一年提交</span><br><span class="line">    span.contrib-number &#123;&#123;total&#125;&#125;</span><br><span class="line">    span.text-muted &#123;&#123;oneyearbeforeday&#125;&#125;&amp;nbsp;-&amp;nbsp;&#123;&#123;thisday&#125;&#125;</span><br><span class="line">  .contrib-column.table-column</span><br><span class="line">    span.text-muted 最近一月提交</span><br><span class="line">    span.contrib-number &#123;&#123;thisweekdatacore&#125;&#125;</span><br><span class="line">    span.text-muted &#123;&#123;amonthago&#125;&#125;&amp;nbsp;-&amp;nbsp;&#123;&#123;thisday&#125;&#125;</span><br><span class="line">  .contrib-column.table-column</span><br><span class="line">    span.text-muted 最近一周提交</span><br><span class="line">    span.contrib-number &#123;&#123;weekdatacore&#125;&#125;</span><br><span class="line">    span.text-muted &#123;&#123;aweekago&#125;&#125;&amp;nbsp;-&amp;nbsp;&#123;&#123;thisday&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.继续在这个目录下新建一个名为<code>gitcalendar-js.pug</code>的文件</li>
</ul>
<p>在内部写入以下代码(请直接复制粘贴,避免缩进错误 ❌):</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">script.</span><br><span class="line">  <span class="keyword">var</span> gitcalendar = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#gitcalendar&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      simplemode: !&#123;theme.gitcalendar.simplemode&#125;,</span><br><span class="line">      user: <span class="string">&#x27;!&#123;theme.gitcalendar.user&#125;&#x27;</span>,</span><br><span class="line">      fixed: <span class="string">&#x27;fixed&#x27;</span>,</span><br><span class="line">      px: <span class="string">&#x27;px&#x27;</span>,</span><br><span class="line">      x: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      y: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      span1: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      span2: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      month: [<span class="string">&#x27;一月&#x27;</span>, <span class="string">&#x27;二月&#x27;</span>, <span class="string">&#x27;三月&#x27;</span>, <span class="string">&#x27;四月&#x27;</span>, <span class="string">&#x27;五月&#x27;</span>, <span class="string">&#x27;六月&#x27;</span>, <span class="string">&#x27;七月&#x27;</span>, <span class="string">&#x27;八月&#x27;</span>, <span class="string">&#x27;九月&#x27;</span>, <span class="string">&#x27;十月&#x27;</span>, <span class="string">&#x27;十一月&#x27;</span>, <span class="string">&#x27;十二月&#x27;</span>],</span><br><span class="line">      monthchange: [],</span><br><span class="line">      oneyearbeforeday: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      thisday: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      amonthago: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      aweekago: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      weekdatacore: <span class="number">0</span>,</span><br><span class="line">      datacore: <span class="number">0</span>,</span><br><span class="line">      total: <span class="number">0</span>,</span><br><span class="line">      datadate: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      data: [],</span><br><span class="line">      positionplusdata: [],</span><br><span class="line">      firstweek: [],</span><br><span class="line">      lastweek: [],</span><br><span class="line">      beforeweek: [],</span><br><span class="line">      thisweekdatacore: <span class="number">0</span>,</span><br><span class="line">      mounthbeforeday: <span class="number">0</span>,</span><br><span class="line">      mounthfirstindex: <span class="number">0</span>,</span><br><span class="line">      crispedges: <span class="string">&#x27;crispedges&#x27;</span>,</span><br><span class="line">      thisdayindex: <span class="number">0</span>,</span><br><span class="line">      amonthagoindex: <span class="number">0</span>,</span><br><span class="line">      amonthagoweek: [],</span><br><span class="line">      firstdate: [],</span><br><span class="line">      first2date: [],</span><br><span class="line">      montharrbefore: [],</span><br><span class="line">      monthindex: <span class="number">0</span>,</span><br><span class="line">      color: !&#123;theme.gitcalendar.color&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      <span class="function"><span class="title">selectStyle</span>(<span class="params">data, event</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.angle-wrapper&#x27;</span>).style.display = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">        <span class="built_in">this</span>.span1 = data.date;</span><br><span class="line">        <span class="built_in">this</span>.span2 = data.count;</span><br><span class="line">        <span class="built_in">this</span>.x = event.clientX - <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">this</span>.y = event.clientY - <span class="number">60</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="title">outStyle</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.angle-wrapper&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="title">thiscolor</span>(<span class="params">x</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x === <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">let</span> i = <span class="built_in">parseInt</span>(x / <span class="number">2</span>);</span><br><span class="line">          <span class="keyword">return</span> <span class="built_in">this</span>.color[<span class="number">0</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &lt; <span class="number">2</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="built_in">this</span>.color[<span class="number">1</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &lt; <span class="number">20</span>) &#123;</span><br><span class="line">          <span class="keyword">let</span> i = <span class="built_in">parseInt</span>(x / <span class="number">2</span>);</span><br><span class="line">          <span class="keyword">return</span> <span class="built_in">this</span>.color[i]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="built_in">this</span>.color[<span class="number">9</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> apiurl = <span class="string">&#x27;!&#123;theme.gitcalendar.apiurl&#125;&#x27;</span> ? <span class="string">&#x27;https://!&#123;theme.gitcalendar.apiurl&#125;/api?&#x27;</span> : <span class="string">&#x27;https://githubapi.ryanchristian.dev/user/&#x27;</span></span><br><span class="line">  <span class="keyword">var</span> githubapiurl = apiurl + gitcalendar.user;</span><br><span class="line">  <span class="comment">//canvas绘图</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">responsiveChart</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> c = <span class="built_in">document</span>.getElementById(<span class="string">&quot;gitcanvas&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (c) &#123;</span><br><span class="line">      <span class="keyword">let</span> cmessage = <span class="built_in">document</span>.getElementById(<span class="string">&quot;gitmessage&quot;</span>);</span><br><span class="line">      <span class="keyword">let</span> ctx = c.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">      c.width = <span class="built_in">document</span>.getElementById(<span class="string">&quot;gitcalendarcanvasbox&quot;</span>).offsetWidth;</span><br><span class="line">      <span class="keyword">let</span> linemaxwitdh = <span class="number">0.96</span> * c.width / gitcalendar.data.length;</span><br><span class="line">      c.height = <span class="number">9</span> * linemaxwitdh;</span><br><span class="line">      <span class="keyword">let</span> lineminwitdh = <span class="number">0.8</span> * linemaxwitdh;</span><br><span class="line">      <span class="keyword">let</span> setposition = &#123;</span><br><span class="line">        x: <span class="number">0.02</span> * c.width,</span><br><span class="line">        y: <span class="number">0.025</span> * c.width</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> week <span class="keyword">in</span> gitcalendar.data) &#123;</span><br><span class="line">        weekdata = gitcalendar.data[week];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> day <span class="keyword">in</span> weekdata) &#123;</span><br><span class="line">          <span class="keyword">let</span> dataitem = &#123;</span><br><span class="line">            date: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            count: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            x: <span class="number">0</span>,</span><br><span class="line">            y: <span class="number">0</span></span><br><span class="line">          &#125;;</span><br><span class="line">          gitcalendar.positionplusdata.push(dataitem);</span><br><span class="line">          ctx.fillStyle = gitcalendar.thiscolor(weekdata[day].count);</span><br><span class="line">          setposition.y = <span class="built_in">Math</span>.round(setposition.y * <span class="number">100</span>) / <span class="number">100</span>;</span><br><span class="line">          dataitem.date = weekdata[day].date;</span><br><span class="line">          dataitem.count = weekdata[day].count;</span><br><span class="line">          dataitem.x = setposition.x;</span><br><span class="line">          dataitem.y = setposition.y;</span><br><span class="line">          ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh);</span><br><span class="line">          setposition.y = setposition.y + linemaxwitdh</span><br><span class="line">        &#125;;</span><br><span class="line">        setposition.y = <span class="number">0.025</span> * c.width;</span><br><span class="line">        setposition.x = setposition.x + linemaxwitdh</span><br><span class="line">      &#125;;</span><br><span class="line">      ctx.font = <span class="string">&quot;600  Arial&quot;</span>;</span><br><span class="line">      ctx.fillStyle = <span class="string">&#x27;#aaa&#x27;</span>;</span><br><span class="line">      ctx.fillText(<span class="string">&quot;日&quot;</span>, <span class="number">0</span>, <span class="number">1.9</span> * linemaxwitdh);</span><br><span class="line">      ctx.fillText(<span class="string">&quot;二&quot;</span>, <span class="number">0</span>, <span class="number">3.9</span> * linemaxwitdh);</span><br><span class="line">      ctx.fillText(<span class="string">&quot;四&quot;</span>, <span class="number">0</span>, <span class="number">5.9</span> * linemaxwitdh);</span><br><span class="line">      ctx.fillText(<span class="string">&quot;六&quot;</span>, <span class="number">0</span>, <span class="number">7.9</span> * linemaxwitdh);</span><br><span class="line">      <span class="keyword">let</span> monthindexlist = c.width / <span class="number">24</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> index <span class="keyword">in</span> gitcalendar.monthchange) &#123;</span><br><span class="line">        ctx.fillText(gitcalendar.monthchange[index], monthindexlist, <span class="number">0.7</span> * linemaxwitdh);</span><br><span class="line">        monthindexlist = monthindexlist + c.width / <span class="number">12</span></span><br><span class="line">      &#125;;</span><br><span class="line">      cmessage.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.angle-wrapper&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">      &#125;;</span><br><span class="line">      c.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.angle-wrapper&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">        getMousePos(c, event);</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">getMousePos</span>(<span class="params">canvas, event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> rect = canvas.getBoundingClientRect();</span><br><span class="line">        <span class="keyword">var</span> x = event.clientX - rect.left * (canvas.width / rect.width);</span><br><span class="line">        <span class="keyword">var</span> y = event.clientY - rect.top * (canvas.height / rect.height);</span><br><span class="line">        <span class="comment">//console.log(&quot;x:&quot;+x+&quot;,y:&quot;+y);</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> gitcalendar.positionplusdata) &#123;</span><br><span class="line">          <span class="keyword">let</span> lenthx = x - item.x;</span><br><span class="line">          <span class="keyword">let</span> lenthy = y - item.y;</span><br><span class="line">          <span class="comment">//console.log(lenthx,lenthy);</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="number">0</span> &lt; lenthx &amp;&amp; lenthx &lt; lineminwitdh) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">0</span> &lt; lenthy &amp;&amp; lenthy &lt; lineminwitdh) &#123;</span><br><span class="line">              <span class="comment">//console.log(item.date,item.count)</span></span><br><span class="line">              <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.angle-wrapper&#x27;</span>).style.display = <span class="string">&#x27;block&#x27;</span></span><br><span class="line">              gitcalendar.span1 = item.date;</span><br><span class="line">              gitcalendar.span2 = item.count;</span><br><span class="line">              gitcalendar.x = event.clientX - <span class="number">100</span>;</span><br><span class="line">              gitcalendar.y = event.clientY - <span class="number">60</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//if(0&lt; x - item.x &lt;lineminwitdh&amp;&amp;0&lt; y - item.y &lt;lineminwitdh)&#123;</span></span><br><span class="line">          <span class="comment">//console.log(item.count,item.date);</span></span><br><span class="line">          <span class="comment">//&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//数据统计算法</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">addlastmonth</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (gitcalendar.thisdayindex === <span class="number">0</span>) &#123;</span><br><span class="line">      thisweekcore(<span class="number">52</span>);</span><br><span class="line">      thisweekcore(<span class="number">51</span>);</span><br><span class="line">      thisweekcore(<span class="number">50</span>);</span><br><span class="line">      thisweekcore(<span class="number">49</span>);</span><br><span class="line">      thisweekcore(<span class="number">48</span>);</span><br><span class="line">      gitcalendar.thisweekdatacore += gitcalendar.firstdate[<span class="number">6</span>].count;</span><br><span class="line">      gitcalendar.amonthago = gitcalendar.firstdate[<span class="number">6</span>].date</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      thisweekcore(<span class="number">52</span>);</span><br><span class="line">      thisweekcore(<span class="number">51</span>);</span><br><span class="line">      thisweekcore(<span class="number">50</span>);</span><br><span class="line">      thisweekcore(<span class="number">49</span>);</span><br><span class="line">      thisweek2core();</span><br><span class="line">      gitcalendar.amonthago = gitcalendar.first2date[gitcalendar.thisdayindex - <span class="number">1</span>].date</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">thisweek2core</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = gitcalendar.thisdayindex - <span class="number">1</span>; i &lt; gitcalendar.first2date.length; i++) &#123;</span><br><span class="line">      gitcalendar.thisweekdatacore += gitcalendar.first2date[i].count</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">thisweekcore</span>(<span class="params">index</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> gitcalendar.data[index]) &#123;</span><br><span class="line">      gitcalendar.thisweekdatacore += item.count</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">addlastweek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> gitcalendar.lastweek) &#123;</span><br><span class="line">      gitcalendar.weekdatacore += item.count</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">addbeforeweek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = gitcalendar.thisdayindex; i &lt; gitcalendar.beforeweek.length; i++) &#123;</span><br><span class="line">      gitcalendar.weekdatacore += gitcalendar.beforeweek[i].count</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">addweek</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (gitcalendar.thisdayindex === <span class="number">6</span>) &#123;</span><br><span class="line">      gitcalendar.aweekago = gitcalendar.lastweek[<span class="number">0</span>].date;</span><br><span class="line">      addlastweek()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      lastweek = data.contributions[<span class="number">51</span>];</span><br><span class="line">      gitcalendar.aweekago = lastweek[gitcalendar.thisdayindex + <span class="number">1</span>].date;</span><br><span class="line">      addlastweek();</span><br><span class="line">      addbeforeweek()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  fetch(githubapiurl)</span><br><span class="line">    .then(<span class="function"><span class="params">data</span> =&gt;</span> data.json())</span><br><span class="line">    .then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      gitcalendar.data = data.contributions;</span><br><span class="line">      gitcalendar.total = data.total;</span><br><span class="line">      gitcalendar.first2date = gitcalendar.data[<span class="number">48</span>];</span><br><span class="line">      gitcalendar.firstdate = gitcalendar.data[<span class="number">47</span>];</span><br><span class="line">      gitcalendar.firstweek = data.contributions[<span class="number">0</span>];</span><br><span class="line">      gitcalendar.lastweek = data.contributions[<span class="number">52</span>];</span><br><span class="line">      gitcalendar.beforeweek = data.contributions[<span class="number">51</span>];</span><br><span class="line">      gitcalendar.thisdayindex = gitcalendar.lastweek.length - <span class="number">1</span>;</span><br><span class="line">      gitcalendar.thisday = gitcalendar.lastweek[gitcalendar.thisdayindex].date;</span><br><span class="line">      gitcalendar.oneyearbeforeday = gitcalendar.firstweek[<span class="number">0</span>].date;</span><br><span class="line">      gitcalendar.monthindex = gitcalendar.thisday.substring(<span class="number">5</span>, <span class="number">7</span>) * <span class="number">1</span>;</span><br><span class="line">      gitcalendar.montharrbefore = gitcalendar.month.splice(gitcalendar.monthindex, <span class="number">12</span> - gitcalendar.monthindex);</span><br><span class="line">      gitcalendar.monthchange = gitcalendar.montharrbefore.concat(gitcalendar.month);</span><br><span class="line">      addweek(data);</span><br><span class="line">      addlastmonth();</span><br><span class="line">      responsiveChart();</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(error);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//手机版更换为svg绘制</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&quot;gitcalendarcanvasbox&quot;</span>).offsetWidth &lt; <span class="number">500</span>) &#123;</span><br><span class="line">    gitcalendar.simplemode = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//当改变窗口大小时重新绘制canvas</span></span><br><span class="line">  <span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (gitcalendar.simplemode) responsiveChart()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//解决滚动滑轮时出现的标签显示</span></span><br><span class="line">  <span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.querySelector(<span class="string">&#x27;.angle-wrapper&#x27;</span>)) &#123;</span><br><span class="line">      <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.angle-wrapper&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure>

<p>然后你要去创建 Stylus 样式辣</p>
<ul>
<li>3.进入<code>%brt%\themes\butterfly\source\css\_layout\</code>新建一个名为<code>gitcalendar.styl</code>的文件</li>
</ul>
<p>用 编 辑 器 打开<br>在文件内部 植 入 以下代码:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">if hexo-config(&#x27;gitcalendar.enable&#x27;)</span><br><span class="line">  <span class="selector-class">.gitcalendar</span></span><br><span class="line">    <span class="selector-tag">font-family</span> <span class="selector-tag">SourceHanSans-Medium</span></span><br><span class="line">    <span class="selector-tag">border</span> 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#DDDDDD</span></span><br><span class="line">    <span class="selector-tag">border-radius</span> 3<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">min-height</span> 120<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">text-align</span> <span class="selector-tag">center</span></span><br><span class="line">    <span class="selector-tag">margin</span> 0 <span class="selector-tag">auto</span></span><br><span class="line">    <span class="selector-tag">border-width</span> 0<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">width</span> 100%</span><br><span class="line">    <span class="selector-tag">display</span> <span class="selector-tag">flex</span></span><br><span class="line">    <span class="selector-tag">display</span> <span class="selector-tag">-webkit-flex</span></span><br><span class="line">    <span class="selector-tag">justify-content</span> <span class="selector-tag">center</span></span><br><span class="line">    <span class="selector-tag">align-items</span> <span class="selector-tag">center</span></span><br><span class="line">    <span class="selector-tag">flex-wrap</span> <span class="selector-tag">wrap</span></span><br><span class="line">    <span class="selector-tag">img</span></span><br><span class="line">      &amp;<span class="selector-class">.spinner</span></span><br><span class="line">        <span class="selector-tag">width</span> 70<span class="selector-tag">px</span></span><br><span class="line">        <span class="selector-tag">margin-top</span> 50<span class="selector-tag">px</span></span><br><span class="line">        <span class="selector-tag">min-height</span> 70<span class="selector-tag">px</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.gitcalendar-graph</span> <span class="selector-tag">text</span><span class="selector-class">.wday</span>,</span><br><span class="line">  <span class="selector-class">.gitcalendar-graph</span> <span class="selector-tag">text</span><span class="selector-class">.month</span></span><br><span class="line">    <span class="selector-tag">font-size</span> 10<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">fill</span> <span class="selector-id">#aaa</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.contrib-legend</span></span><br><span class="line">    <span class="selector-tag">text-align</span> <span class="selector-tag">right</span></span><br><span class="line">    <span class="selector-tag">padding</span> 0 14<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> 0</span><br><span class="line">    <span class="selector-tag">display</span> <span class="selector-tag">inline-block</span></span><br><span class="line">    <span class="selector-tag">float</span> <span class="selector-tag">right</span></span><br><span class="line">    <span class="selector-class">.legend</span></span><br><span class="line">      <span class="selector-tag">display</span> <span class="selector-tag">inline-block</span></span><br><span class="line">      <span class="selector-tag">list-style</span> <span class="selector-tag">none</span></span><br><span class="line">      <span class="selector-tag">margin</span> 0 5<span class="selector-tag">px</span></span><br><span class="line">      <span class="selector-tag">position</span> <span class="selector-tag">relative</span></span><br><span class="line">      <span class="selector-tag">bottom</span> <span class="selector-tag">-1px</span></span><br><span class="line">      <span class="selector-tag">padding</span> 0</span><br><span class="line">      <span class="selector-tag">li</span></span><br><span class="line">        <span class="selector-tag">display</span> <span class="selector-tag">inline-block</span></span><br><span class="line">        <span class="selector-tag">width</span> 10<span class="selector-tag">px</span></span><br><span class="line">        <span class="selector-tag">height</span> 10<span class="selector-tag">px</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.text-small</span></span><br><span class="line">    <span class="selector-tag">font-size</span> 12<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">color</span> <span class="selector-id">#767676</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.gitcalendar-graph</span></span><br><span class="line">    <span class="selector-tag">padding</span> 15<span class="selector-tag">px</span> 0 0</span><br><span class="line">    <span class="selector-tag">text-align</span> <span class="selector-tag">center</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.contrib-column</span></span><br><span class="line">    <span class="selector-tag">text-align</span> <span class="selector-tag">center</span></span><br><span class="line">    <span class="selector-tag">border-left</span> 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ddd</span></span><br><span class="line">    <span class="selector-tag">border-top</span> 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ddd</span></span><br><span class="line">    <span class="selector-tag">font-size</span> 11<span class="selector-tag">px</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.contrib-column-first</span></span><br><span class="line">    <span class="selector-tag">border-left</span> 0</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.table-column</span></span><br><span class="line">    <span class="selector-tag">padding</span> 10<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">display</span> <span class="selector-tag">table-cell</span></span><br><span class="line">    <span class="selector-tag">width</span> 33%</span><br><span class="line">    <span class="selector-tag">vertical-align</span> <span class="selector-tag">top</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.contrib-number</span></span><br><span class="line">    <span class="selector-tag">font-weight</span> 300</span><br><span class="line">    <span class="selector-tag">line-height</span> 1.3<span class="selector-tag">em</span></span><br><span class="line">    <span class="selector-tag">font-size</span> 24<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">display</span> <span class="selector-tag">block</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.monospace</span></span><br><span class="line">    <span class="selector-tag">text-align</span> <span class="selector-tag">center</span></span><br><span class="line">    <span class="selector-tag">color</span> <span class="selector-id">#000</span></span><br><span class="line">    <span class="selector-tag">font-family</span> <span class="selector-tag">monospace</span></span><br><span class="line">    <span class="selector-tag">a</span></span><br><span class="line">      <span class="selector-tag">color</span> <span class="selector-id">#1D75AB</span></span><br><span class="line">      <span class="selector-tag">text-decoration</span> <span class="selector-tag">none</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.contrib-footer</span></span><br><span class="line">    <span class="selector-tag">font-size</span> 11<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">padding</span> 0 10<span class="selector-tag">px</span> 12<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">text-align</span> <span class="selector-tag">left</span></span><br><span class="line">    <span class="selector-tag">width</span> 100%</span><br><span class="line">    <span class="selector-tag">box-sizing</span> <span class="selector-tag">border-box</span></span><br><span class="line">    <span class="selector-tag">height</span> 26<span class="selector-tag">px</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.left</span></span><br><span class="line">    &amp;<span class="selector-class">.text-muted</span></span><br><span class="line">      <span class="selector-tag">float</span> <span class="selector-tag">left</span></span><br><span class="line">      <span class="selector-tag">margin-left</span> 9<span class="selector-tag">px</span></span><br><span class="line">      <span class="selector-tag">color</span> <span class="selector-id">#767676</span></span><br><span class="line">      <span class="selector-tag">a</span></span><br><span class="line">        <span class="selector-tag">color</span> <span class="selector-id">#4078c0</span></span><br><span class="line">        <span class="selector-tag">text-decoration</span> <span class="selector-tag">none</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.left</span><span class="selector-class">.text-muted</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line">  <span class="selector-class">.monospace</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span></span><br><span class="line">    <span class="selector-tag">text-decoration</span> <span class="selector-tag">underline</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">h2</span></span><br><span class="line">    &amp;<span class="selector-class">.f4</span></span><br><span class="line">      &amp;<span class="selector-class">.text-normal</span></span><br><span class="line">        &amp;<span class="selector-class">.mb-3</span></span><br><span class="line">          <span class="selector-tag">display</span> <span class="selector-tag">none</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.float-left</span></span><br><span class="line">    &amp;<span class="selector-class">.text-gray</span></span><br><span class="line">      <span class="selector-tag">float</span> <span class="selector-tag">left</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-id">#user-activity-overview</span></span><br><span class="line">    <span class="selector-tag">display</span> <span class="selector-tag">none</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.day-tooltip</span></span><br><span class="line">    <span class="selector-tag">white-space</span> <span class="selector-tag">nowrap</span></span><br><span class="line">    <span class="selector-tag">position</span> <span class="selector-tag">absolute</span></span><br><span class="line">    <span class="selector-tag">z-index</span> 99999</span><br><span class="line">    <span class="selector-tag">padding</span> 10<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">font-size</span> 12<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">color</span> <span class="selector-id">#959da5</span></span><br><span class="line">    <span class="selector-tag">text-align</span> <span class="selector-tag">center</span></span><br><span class="line">    <span class="selector-tag">background</span> <span class="selector-tag">rgba</span>(0,0,0,.85)</span><br><span class="line">    <span class="selector-tag">border-radius</span> 3<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">display</span> <span class="selector-tag">none</span></span><br><span class="line">    <span class="selector-tag">pointer-events</span> <span class="selector-tag">none</span></span><br><span class="line">    <span class="selector-tag">strong</span></span><br><span class="line">      <span class="selector-tag">color</span> <span class="selector-id">#dfe2e5</span></span><br><span class="line">    &amp;<span class="selector-class">.is-visible</span></span><br><span class="line">      <span class="selector-tag">display</span> <span class="selector-tag">block</span></span><br><span class="line">    &amp;<span class="selector-pseudo">:after</span></span><br><span class="line">      <span class="selector-tag">position</span> <span class="selector-tag">absolute</span></span><br><span class="line">      <span class="selector-tag">bottom</span> <span class="selector-tag">-10px</span></span><br><span class="line">      <span class="selector-tag">left</span> 50%</span><br><span class="line">      <span class="selector-tag">width</span> 5<span class="selector-tag">px</span></span><br><span class="line">      <span class="selector-tag">height</span> 5<span class="selector-tag">px</span></span><br><span class="line">      <span class="selector-tag">box-sizing</span> <span class="selector-tag">border-box</span></span><br><span class="line">      <span class="selector-tag">margin</span> 0 0 0 <span class="selector-tag">-5px</span></span><br><span class="line">      <span class="selector-tag">content</span> &quot; &quot;</span><br><span class="line">      <span class="selector-tag">border</span> 5<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">transparent</span></span><br><span class="line">      <span class="selector-tag">border-top-color</span> <span class="selector-tag">rgba</span>(0,0,0,.85)</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.position-relative</span></span><br><span class="line">    <span class="selector-tag">width</span> 100%</span><br><span class="line">    <span class="selector-tag">padding-left</span> 20<span class="selector-tag">px</span></span><br><span class="line">    <span class="selector-tag">padding-right</span> 20<span class="selector-tag">px</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">650px</span>)</span><br><span class="line">    .contrib-column</span><br><span class="line">      display none</span><br><span class="line"></span><br><span class="line">  .angle-wrapper</span><br><span class="line">    z-index <span class="number">9999</span></span><br><span class="line">    display inline</span><br><span class="line">    display none</span><br><span class="line">    width <span class="number">200px</span></span><br><span class="line">    height <span class="number">40px</span></span><br><span class="line">    position relative</span><br><span class="line">    padding <span class="number">5px</span> <span class="number">0</span></span><br><span class="line">    background rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.8</span>)</span><br><span class="line">    border-radius <span class="number">8px</span></span><br><span class="line">    text-align center</span><br><span class="line">    color white</span><br><span class="line">    span</span><br><span class="line">      padding-bottom <span class="number">1em</span></span><br><span class="line">    &amp;:before</span><br><span class="line">      content <span class="string">&#x27;&#x27;</span></span><br><span class="line">      width <span class="number">0</span></span><br><span class="line">      height <span class="number">0</span></span><br><span class="line">      border <span class="number">10px</span> solid transparent</span><br><span class="line">      border-top-color rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.8</span>)</span><br><span class="line">      position absolute</span><br><span class="line">      left <span class="number">47.5%</span></span><br><span class="line">      top <span class="number">100%</span></span><br><span class="line"></span><br><span class="line">  .angle-box</span><br><span class="line">    position fixed</span><br><span class="line">    padding <span class="number">10px</span></span><br></pre></td></tr></table></figure>

<ul>
<li>4.快马加鞭的前往<code>%brt%\themes\butterfly\layout\</code>找到我们的 食 物 <code>index.pug</code></li>
</ul>
<p>为了方便我们食用,找到#recent-posts.recent-posts 在下面插入一段代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> theme.gitcalendar.enable</span><br><span class="line">  .recent-post-item(style=<span class="string">&#x27;width:100%&#x27;</span>)</span><br><span class="line">    !=partial(<span class="string">&#x27;includes/gitcalendar&#x27;</span>, &#123;&#125;, &#123;<span class="attr">cache</span>:theme.fragment_cache&#125;)</span><br><span class="line"><span class="keyword">if</span> theme.categoryBar.enable</span><br><span class="line">  .recent-post-item(style=<span class="string">&#x27;height:auto;width:100%;padding:0px;&#x27;</span>)</span><br><span class="line">    #categoryBar!= list_categories(site.categories,&#123;<span class="attr">class</span>: <span class="string">&#x27;categoryBar&#x27;</span>,<span class="attr">depth</span>: <span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>记得一定要放在+postUI 的前一行哦</strong><br><strong>-</strong> 5.进入<code>%brt%\themes\butterfly\layout\includes\</code>的<code>additional-js.pug</code>文件<br>在 script(src=url_for(theme.CDN.utils))的上面加入以下内容</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">script((src = url_for(theme.CDN.vue)));</span><br></pre></td></tr></table></figure>

<p>然后再找到 script(defer src=url_for(theme.CDN.busuanzi))配置项<br>在这下面放入以下代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">if</span> theme.gitcalendar.enable</span><br><span class="line">    !=partial(<span class="string">&#x27;includes/gitcalendar-js&#x27;</span>, &#123;&#125;, &#123;<span class="attr">cache</span>:theme.fragment_cache&#125;)</span><br><span class="line">!=partial(<span class="string">&#x27;includes/third-party/prismjs&#x27;</span>, &#123;&#125;, &#123;<span class="attr">cache</span>:theme.fragment_cache&#125;)</span><br></pre></td></tr></table></figure>

<p>好的,修改完了,接下来我们就可以去添加 CDN 配置项和 gitcalendar 配置项了<br>进入<code>%brt%\_config.butterfly.yml</code><br>找到 CDN 配置项<br>在 utils: /js/utils.js 配置项的下面插入以下代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">vue: https:<span class="comment">//cdn.jsdelivr.net/npm/vue@2.6.11</span></span><br></pre></td></tr></table></figure>

<p>然后随便找一个屑位置,插入以下代码:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#gitcalendar</span></span><br><span class="line"><span class="attr">gitcalendar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">simplemode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#设为true时使用canvas绘制gitgitcalendar，</span></span><br><span class="line">  <span class="comment">#设为false时使用svg绘制gitgitcalendar</span></span><br><span class="line">  <span class="comment">#canvas：dom数少，但图像会发生模糊，自适应一般</span></span><br><span class="line">  <span class="comment">#svg：dom数多，图像清晰，自适应更佳</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">slblog-github</span> <span class="comment">#这里填写你的github用户名</span></span><br><span class="line">  <span class="attr">apiurl:</span> <span class="comment"># 留空为默认公共API</span></span><br><span class="line">  <span class="comment"># 以下色调选择喜欢的一行保留即可。其余注释。</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;[&#x27;#e4dfd7&#x27;, &#x27;#f9f4dc&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f8df72&#x27;, &#x27;#fcd217&#x27;, &#x27;#fcc515&#x27;, &#x27;#f28e16&#x27;, &#x27;#fb8b05&#x27;, &#x27;#d85916&#x27;, &#x27;#f43e06&#x27;]&quot;</span> <span class="comment">#橘黄色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot; #浅紫色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f0fff4&#x27;, &#x27;#dcffe4&#x27;, &#x27;#bef5cb&#x27;, &#x27;#85e89d&#x27;, &#x27;#34d058&#x27;, &#x27;#28a745&#x27;, &#x27;#22863a&#x27;, &#x27;#176f2c&#x27;, &#x27;#165c26&#x27;, &#x27;#144620&#x27;]&quot; #翠绿色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f1f8ff&#x27;, &#x27;#dbedff&#x27;, &#x27;#c8e1ff&#x27;, &#x27;#79b8ff&#x27;, &#x27;#2188ff&#x27;, &#x27;#0366d6&#x27;, &#x27;#005cc5&#x27;, &#x27;#044289&#x27;, &#x27;#032f62&#x27;, &#x27;#05264c&#x27;]&quot; #天青色调</span></span><br></pre></td></tr></table></figure>

<p>然后参照上面的配置就行辣~<br>关于配置 apiurl 可以参照<a href="https://akilar.top/posts/1f9c68c9/#%E8%87%AA%E5%BB%BAAPI%E9%83%A8%E7%BD%B2">Akilar 大佬的文章</a>自建 API 哦<br>各位有什么想魔改的可以评论以一下(只要不太难,毕竟我还是个 初 中 生)</p>
<h1 id="在你的网站添加一个-♂-美妙-♂-的-PACE-加载进度条"><a href="#在你的网站添加一个-♂-美妙-♂-的-PACE-加载进度条" class="headerlink" title="在你的网站添加一个 ♂ 美妙 ♂ 的 PACE 加载进度条"></a>在你的网站添加一个 ♂ 美妙 ♂ 的 PACE 加载进度条</h1><h2 id="这个很简单-只需要一个-JS-和一个-CSS-就可以了"><a href="#这个很简单-只需要一个-JS-和一个-CSS-就可以了" class="headerlink" title="这个很简单,只需要一个 JS 和一个 CSS 就可以了"></a>这个很简单,只需要一个 JS 和一个 CSS 就可以了</h2><p>现在我们开始吧<br>首先进入<code>%brt%\_config.butterfly.yml</code><br>找到 inject 大项<br>在 bottom 配置项下面添加如下配置:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">async</span> <span class="string">data-pjax</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/HCLonely/hclonely.github.io@1.4.7/js/custom/pace.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=stylesheet</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/HCLonely/hclonely.github.io@1.4.7/css/custom/pace-theme-flash.min.css&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后就行了,哈哈其实是用来水一下字数的</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>主题魔改</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>主题魔改</tag>
      </tags>
  </entry>
</search>
