{"meta":{"title":"SL's Blog","subtitle":"SL's Blog","description":"梦中做梦，做了个白日梦","author":"SL","url":"https://blog.slqwq.cn","root":"/"},"pages":[{"title":"VideoPlayer","date":"2020-09-20T11:58:24.000Z","updated":"2021-01-29T03:13:49.822Z","comments":false,"path":"VideoPlayer/index.html","permalink":"https://blog.slqwq.cn/VideoPlayer/index.html","excerpt":"","text":"$(document).ready(function () { if(location.href.indexOf(\"#reloaded\")==-1){ location.href=location.href+\"#reloaded\"; location.reload(); } }) 本页面仅作为视频播放器，此页面的所有资源均未去水印，所有内容归作者版权所有，播放器采用 DPlayer.js视频采用m3u8格式，采用Jsdelivr加速 当 前 正 播 放 来自[ 爱 奇 艺] 的 视 频 ! ! ! 视频地址:https://www.iqiyi.com/v_i4z49lkcp0.html $(function(){ const dp = new DPlayer({ container: document.getElementById('dplayer'), autoplay:!0,theme:\"#42b983\",loop:true,lang:\"zh-cn\",preload:\"auto\",volume:Number(\"0\"), video: { url: 'https://vdoplay.52msr.cn/go/playlist.m3u8', //自己的m3u8地址 type: 'hls', defaultQuality: 0, pic: 'https://pic5.iqiyipic.com/image/20210114/bc/4f/v_154295503_m_601_m2_260_360.jpg', //视频未播放前的封面 thumbnails: 'thumbnails.jpg', }, }); })"},{"title":"about","date":"2021-01-29T03:13:49.826Z","updated":"2021-01-29T03:13:49.826Z","comments":false,"path":"about/index.html","permalink":"https://blog.slqwq.cn/about/index.html","excerpt":"","text":"@font-face{font-family:myfont;font-weight:700;src:url(https://cdn.jsdelivr.net/gh/sviptzk/xiaokang.me/www/myfont.ttf)} Hajeekn 🍀 个人简介 初中 现居住:🌏 保持一颗充满童趣的心♥ 🌌 博客简介 全站HTTPS 静态博客(Hexo) + 近完美主题(Butterfly) 博客中少部分图片收集于Network 侵删 📞联系方式 Twitter: @hajeekn Facebook: Hajeekn QQ: 3356620252 微信: 就不告诉你 微博: 就不告诉你 EMail: sladmin@slwebtap.onmicrosoft.com/hajeekn@slwebtap.onmicrosoft.com/superxzlove@qq.com Google Account: &#x62;&#x6c;&#x61;&#x63;&#107;&#x6f;&#117;&#116;&#51;&#51;&#x35;&#54;&#54;&#x40;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109; Mojang Account / Minecraft Account: Hajeekn Xbox Account(Minecraft for Windows10): Super02Love ☁ 个人基本信息各账户主要情况:各账户GitHub状态:"},{"title":"categories","date":"2020-05-12T08:38:20.000Z","updated":"2021-01-29T03:13:49.826Z","comments":true,"path":"categories/index.html","permalink":"https://blog.slqwq.cn/categories/index.html","excerpt":"","text":"目前鸣谢、隐私问题、合作般到这里啦~鸣谢：https://www.slblog.ga/网站鸣谢 隐私问题：https://www.slblog.ga/您的隐私问题 合作伙伴：https://www.slblog.ga/合作伙伴们 公益：https://www.slblog.ga/404 服务状态：https://status.ytuty-blog.ga/ 服务状态(新Beta)：https://cdn.slblog.ga/Service/"},{"title":"友情链接","date":"2020-05-17T15:43:50.000Z","updated":"2021-01-29T03:13:49.830Z","comments":false,"path":"link/index.html","permalink":"https://blog.slqwq.cn/link/index.html","excerpt":"","text":"$(document).ready(function () { if(location.href.indexOf(\"#reloaded\")==-1){ location.href=location.href+\"#reloaded\"; location.reload(); } }) var obj = { // 容器选择器 el: '#friend1', // gitee主人id owner: 'SLQWQ', // gitee仓库 repo: 'Friends', // 排序方式 direction_sort: 'asc', // 按标签排序 sort_container: ['乐特大佬', 'N0ts大佬', 'Gitee友链'], // 标签描述 labelDescr: { 乐特大佬: \"这可是乐特大佬专属的位置哦!!\", Nots大佬: \"这可是Nots大佬专属的位置哦!!\", Gitee友链: \"这些都是我的友链啦~\", } } // 1.1.0 版本之前 try { btf.isJqueryLoad(function () { $('.flink').prepend(\"\") new Friend(obj) }) } catch (error) { window.onload = function () { btf.isJqueryLoad(function () { $('.flink').prepend(\"\") new Friend(obj) }) } } // 1.1.0 版本之后 document.querySelector('.flink').insertAdjacentHTML('afterbegin',\"\") new Friend(obj) 申请友链 申请须知 已使用HTTPS 无广告 转载文章需留原文 您的网站是学习/博客/日记的 如果您长时间没有更新文章/网站无法访问/取消本站链接本站将直接移除您的友链 个人信息 11234name: SL&#x27;s Bloglink: https://blog.slqwq.cnavatar: https://cdn.slblog.ga/pic/logo.pngdescr: 梦中做梦,做了个白日梦申请方法:前往Gitee添加Issues，当管理员审核通过后方可显示但在这之前，请先确保您已添加本站友链！详细申请方法已记载到仓库的README.md，按照MD指示方可完成 过期的友链们 萌城·博客名称:萌城·博客 地址:https://men******qwq.com/MuXin’s Blog名称:MuXin’s Blog 地址:https://mu******14.top/xiaoxu博客名称:xiaoxu博客 地址:https://www.x******og.cn/amemz的博客名称:amemz的博客 地址:https://www.j***.tk/xiaoxu博客名称:xiaoxu博客 地址:https://www.x******og.cn/ilyfairy’s Blog名称:ilyfairy’s Blog 地址:https://ily******ry.com/Spoience名称:Spoience 地址:https://spo******ce.com/xiaoxu博客名称:Zoom 地址:https://zoom1******ub.io/过期的友链请尽快找我重新申请"},{"title":"","date":"2021-01-24T13:52:14.000Z","updated":"2021-01-29T03:13:49.830Z","comments":true,"path":"messagesboard/index.html","permalink":"https://blog.slqwq.cn/messagesboard/index.html","excerpt":"","text":"这里是Hajeekn的留言板你可以在这里友好的留言或者留下你的小脚印🐱👣哦 来自Hajeekn的留言: 有什么想问的？ 有什么想说的？ 有什么想吐槽的？ 小小书记人偶竭诚为您服务！ 来自Hajeekn的留言: 有什么想问的？ 有什么想说的？ 有什么想吐槽的？"},{"title":"标签","date":"2021-01-20T16:46:20.000Z","updated":"2021-01-29T03:13:49.830Z","comments":true,"path":"tags/index.html","permalink":"https://blog.slqwq.cn/tags/index.html","excerpt":"","text":""},{"title":"公告(单Page)","date":"2020-08-03T20:28:34.000Z","updated":"2021-01-29T03:13:49.830Z","comments":true,"path":"公告-单Page/index.html","permalink":"https://blog.slqwq.cn/%E5%85%AC%E5%91%8A-%E5%8D%95Page/index.html","excerpt":"","text":"请点击此处"},{"title":"合作伙伴们","date":"2020-04-06T21:11:11.000Z","updated":"2021-01-29T03:13:49.830Z","comments":true,"path":"合作伙伴们/index.html","permalink":"https://blog.slqwq.cn/%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E4%BB%AC/index.html","excerpt":"","text":"感谢进入这个页面 合作伙伴如下： 1.Jsdelivrhttps://www.jsdelivr.com/ 2.Meng Rong Jiang’s bloghttps://www.mrjblog.top/ 3.YF Cloud（暂时罢工）https://yum.136588.top/ 4.xiobb’s bloghttps://www.yfblog.ml/ 5.bmyjacks’s bloghttps://www.bmyjacks.cn/ 6.Freenomhttps://www.freenom.com/ 7.Codinghttps://www.coding.net/ 8.Githubhttps://www.github.com/ 9.CloudFlarehttps://www.cloudflare.com/ 10.Meng Cheng Jiang’s bloghttps://bili.bio/ 11.YF(xiobb)的域名分发(SSL无法配置)http://www.eivm.tk/ 申请方式:禁止申请 投诉方式:QQ:3356620252email:&#x73;&#x6c;&#97;&#x64;&#109;&#x69;&#x6e;&#64;&#115;&#x6c;&#x77;&#x65;&#x62;&#x74;&#97;&#x70;&#x2e;&#x73;&#x6c;&#98;&#x6c;&#x6f;&#x67;&#46;&#x67;&#97;Google Mail:&#x62;&#108;&#97;&#x63;&#107;&#111;&#x75;&#x74;&#x33;&#x33;&#53;&#54;&#x36;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;"},{"title":"网站鸣谢","date":"2020-05-06T12:46:35.000Z","updated":"2021-01-29T03:13:49.830Z","comments":true,"path":"网站鸣谢/index.html","permalink":"https://blog.slqwq.cn/%E7%BD%91%E7%AB%99%E9%B8%A3%E8%B0%A2/index.html","excerpt":"","text":"博客鸣谢1.Bmyjacks(B站:bmyjacks)2.xiobb(B站:xiobb)3.MBRjun(B站:MBRjun)4.amemz(B站1:amemz_minecraft,B站2:amemz)5.Cnoim(B站:Cnoim)6.萌城酱(B站:1萌城酱,B站2:我是萌城酱)7.請吃宵夜(B站:請吃宵夜)8.GitHub Pages(https://pages.github.com/)9.Coding Pages(https://pages.coding.net.com/)10.Zeit.co(https://vercel.com/)11.Fast.io(https://Fast.io/)12.Jsdelivr(https://jsdelivr.com/)13.badgen(https://badgen.net/)14.Hexo(https://hexo.io/)15.Hexo-theme-Butterfly(1:https://github.com/jerryc127/hexo-theme-butterfly/,2:https://jerryc.me/）16.夕晴酱(QQ:3314307538)17.xiaoxu(QQ:2243016926) 在这里附上最真诚的感谢！"},{"title":"合作伙伴页面-Beta","date":"2020-04-04T08:07:08.000Z","updated":"2021-01-29T03:13:49.830Z","comments":true,"path":"合作伙伴们/betapages/index.html","permalink":"https://blog.slqwq.cn/%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E4%BB%AC/betapages/index.html","excerpt":"","text":"注意:本页面的合作伙伴随时更新。 1.Jsdelivrhttps://www.jsdelivr.com/ 2.Meng Rong Jiang’s bloghttps://www.mrjblog.top/ 3.YF Cloud（暂时罢工）https://yum.136588.top/ 4.xiobb’s bloghttps://www.yfblog.cf/ 5.bmyjacks’s bloghttps://www.bmyjacks.cn/ 6.Freenomhttps://www.freenom.com/ 7.Codinghttps://www.coding.net/ 8.Githubhttps://www.github.com/ 9.CloudFlarehttps://www.cloudflare.com/ 10.Meng Cheng Jiang’s blog(停机维护)https://bili.bio/ 11.YF(xiobb)的域名分发(SSL无法配置)http://www.eivm.tk/ 申请方式:禁止申请 投诉方式:QQ:3356620252email:&#115;&#x6c;&#x61;&#x64;&#109;&#105;&#x6e;&#x40;&#115;&#108;&#119;&#101;&#x62;&#x74;&#x61;&#112;&#46;&#115;&#108;&#x62;&#108;&#x6f;&#103;&#x2e;&#x67;&#97;Google Mail:&#x62;&#108;&#x61;&#99;&#x6b;&#111;&#117;&#116;&#51;&#51;&#x35;&#54;&#x36;&#x40;&#103;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;"},{"title":"","date":"2021-01-29T03:13:49.830Z","updated":"2021-01-29T03:13:49.830Z","comments":true,"path":"time/tagpl.css","permalink":"https://blog.slqwq.cn/time/tagpl.css","excerpt":"","text":"div.tabs { display: block; position: relative; margin-top: 0.5rem; margin-bottom: 0.5rem; border-radius: 4px; background: var(--color-card); border: 1px solid rgba(68,68,68,0.2); font-size: 0.9375rem; } div.tabs .highlight, div.tabs p, div.tabs ul, div.tabs ol, div.tabs div.note, div.tabs details { margin-top: 0.5rem; margin-bottom: 0.5rem; } div.tabs ul.nav-tabs { display: -ms-flexbox; display: flex; overflow-x: auto; white-space: nowrap; -ms-flex-pack: start; justify-content: flex-start; margin: 0 !important; padding: 8px 8px 0 8px; background: var(--color-block); border-radius: 4px 4px 0 0; line-height: 1.5; } div.tabs ul.nav-tabs li.tab { list-style-type: none; margin-top: 0; margin-bottom: 0; } div.tabs ul.nav-tabs li.tab:last-child { padding-right: 16px; } div.tabs ul.nav-tabs li.tab a { display: block; cursor: pointer; border-radius: 4px 4px 0 0; padding: 8px; text-align: center; font-size: 0.875rem; line-height: inherit; font-weight: bold; color: var(--color-meta); border: 1px solid transparent; } div.tabs ul.nav-tabs li.tab a:hover { color: var(--color-p); } div.tabs ul.nav-tabs li.tab a i { pointer-events: none; } div.tabs ul.nav-tabs li.tab.active a { cursor: default; color: var(--color-p); background: #fff; border: 1px solid rgba(68,68,68,0.2); border-bottom: 1px solid var(--color-card); } div.tabs .tab-content { border-top: 1px solid rgba(68,68,68,0.2); margin-top: -1px; } div.tabs .tab-content .tab-pane { padding: 16px; } div.tabs .tab-content .tab-pane:not(.active) { display: none; } div.tabs .tab-content .tab-pane.active { display: block; } div.tabs .tab-content .tab-pane > p:first-child, div.tabs .tab-content .tab-pane > .tabs:first-child, div.tabs .tab-content .tab-pane > ul:first-child, div.tabs .tab-content .tab-pane > ol:first-child, div.tabs .tab-content .tab-pane > .highlight:first-child, div.tabs .tab-content .tab-pane > .note:first-child, div.tabs .tab-content .tab-pane > .fancybox:first-child { margin-top: 0; } div.tabs .tab-content .tab-pane > p:last-child, div.tabs .tab-content .tab-pane > .tabs:last-child, div.tabs .tab-content .tab-pane > ul:last-child, div.tabs .tab-content .tab-pane > ol:last-child, div.tabs .tab-content .tab-pane > .highlight:last-child, div.tabs .tab-content .tab-pane > .note:last-child, div.tabs .tab-content .tab-pane > .fancybox:last-child { margin-bottom: 0; } div.timenode { position: relative; } div.timenode:before, div.timenode:after { content: ''; z-index: 1; position: absolute; background: rgba(68,215,182,0.5); width: 2px; left: 7px; } div.timenode:before { top: 0px; height: 6px; } div.timenode:after { top: 26px; height: calc(100% - 26px); } div.timenode:last-child:after { height: calc(100% - 26px - 16px); border-bottom-left-radius: 2px; border-bottom-right-radius: 2px; } div.timenode .meta, div.timenode .body { max-width: calc(100% - 24px); } div.timenode .meta { position: relative; color: var(--color-meta); font-size: 0.875rem; line-height: 32px; height: 32px; } div.timenode .meta:before, div.timenode .meta:after { content: ''; position: absolute; top: 8px; z-index: 2; } div.timenode .meta:before { background: rgba(68,215,182,0.5); width: 16px; height: 16px; border-radius: 8px; } div.timenode .meta:after { background: #44d7b6; margin-left: 2px; margin-top: 2px; width: 12px; height: 12px; border-radius: 6px; transform: scale(0.5); transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } div.timenode .meta p { font-weight: bold; margin: 0 0 0 24px; } div.timenode .body { margin: 4px 0 16px 24px; padding: 16px; border-radius: 8px; background: var(--color-block); display: inline-block; } div.timenode .body:empty { display: none; } div.timenode .body p:first-child { margin-top: 0; } div.timenode .body p:last-child { margin-bottom: 0; } div.timenode .body .highlight { border: 1px solid #e4e4e4; } div.timenode:hover .meta { color: var(--color-text); } div.timenode:hover .meta:before { background: rgba(255,87,34,0.5); } div.timenode:hover .meta:after { background: #ff5722; transform: scale(1); }"},{"title":"update","date":"2020-05-15T10:02:18.000Z","updated":"2021-01-29T03:13:49.830Z","comments":false,"path":"update/index.html","permalink":"https://blog.slqwq.cn/update/index.html","excerpt":"","text":"小动作 2021/1/24 压缩博客 使用gulp工具对博客进行压缩移除Gitalk评论系统 2021/1/20 对博客做了一些很小的改动 移除音乐播放器新增语雀文章同步到Hexo的功能!(重磅更新)移除Valine评论系统新增Waline评论系统 2020/8/18 CDN更换 更换cdn.slblog.ga的节点提供商添加APlayer播放器 2020/8/16 友链申请方式改变 更换友链申请方式为添加Issues(只需博主审核，其他不用操作) 2020/8/8 做了一些小改动 移除Aplayer播放器公告栏更变🤭 2020/8/1 做了一些小改动 更改Valine评论系统字体颜色更改一些小细节 2020/7/8 做了一些小改动 升级主题为Pjax分支添加Aplayer播放器移除Hexo-neat压缩工具🗜，否则会造成主题报错💀 2020/6/29 做了一些小改动 删除音乐播放器更新全局字体使用Hexo-Neat压缩关闭侧边栏的Discord功能提高加载速度 2020/6/8 做了一些小改动 新增文件CDN(每月15GB流量)侧边栏新增访客信息移除阿里云(大陆)CDN 2020/6/2 做了一些小改动 将slblog.ga跳转到blog.slqwq.cn 实验室新增音乐播放器功能替换新的播放器 2020/6/2 做了一些小改动 更换新的域名-blog.slqwq.cn 2020/5/23 做了一些小改动 新增阿里云大陆CDN 2020/5/16 做了一些小改动 新增cdn.slblog.ga CDN 2020/5/15 更换博客CDN 由于CloudFlare回源故障，现删除CloudFlare"},{"title":"Speak","date":"2020-08-09T22:38:04.000Z","updated":"2021-01-29T03:13:49.830Z","comments":false,"path":"time/index.html","permalink":"https://blog.slqwq.cn/time/index.html","excerpt":"","text":"$(document).ready(function () { if(location.href.indexOf(\"#reloaded\")==-1){ location.href=location.href+\"#reloaded\"; location.reload(); } }) *{box-sizing:border-box;outline:0;margin:0;padding:0}#loading-bar-wrapper{position:fixed;width:100px;top:8px;left:50%;transform:translateX(-50%);height:8px;border-radius:8px;z-index:99999;background:0 0}#loading-bar-wrapper.nprogress-custom-parent{background:var(--color-card);box-shadow:0 1px 2px 0 rgba(0,0,0,.1)}.loading-circle{display:none;height:100%;width:100%;position:fixed;top:0;left:0;z-index:999999;background-color:rgba(250,250,250,.9)}.loading-circle img{width:280px;height:210px;position:relative;top:45%;left:50%;margin-left:-140px;margin-top:-105px}#loader-circle{display:block;position:relative;left:50%;top:50%;width:150px;height:150px;margin:-75px 0 0 -75px;border-radius:50%;border:3px solid transparent;border-top-color:#ff5a5a;animation:spin 1s linear infinite}#loader-circle:before{content:\"\";position:absolute;top:5px;left:5px;right:5px;bottom:5px;border-radius:50%;border:3px solid transparent;border-top-color:#5af33f;animation:spin 3s linear infinite}#loader-circle:after{content:\"\";position:absolute;top:15px;left:15px;right:15px;bottom:15px;border-radius:50%;border:3px solid transparent;border-top-color:#6dc9ff;animation:spin 2s linear infinite}.fa-cog:before{content:\"\\f013\";color:#0ee4e4}.fuck{color:#0ee4e4} .hljs{display:block;overflow-x:auto;padding:.5em;background:#23241f}.hljs,.hljs-subst,.hljs-tag{color:#f8f8f2}.hljs-emphasis,.hljs-strong{color:#a8a8a2}.hljs-bullet,.hljs-link,.hljs-literal,.hljs-number,.hljs-quote,.hljs-regexp{color:#ae81ff}.hljs-code,.hljs-section,.hljs-selector-class,.hljs-title{color:#a6e22e}.hljs-strong{font-weight:700}.hljs-emphasis{font-style:italic}.hljs-attr,.hljs-keyword,.hljs-name,.hljs-selector-tag{color:#f92672}.hljs-attribute,.hljs-symbol{color:#66d9ef}.hljs-class .hljs-title,.hljs-params{color:#f8f8f2}.hljs-addition,.hljs-built_in,.hljs-builtin-name,.hljs-selector-attr,.hljs-selector-id,.hljs-selector-pseudo,.hljs-string,.hljs-template-variable,.hljs-type,.hljs-variable{color:#e6db74}.hljs-comment,.hljs-deletion,.hljs-meta{color:#75715e} 🍭 欢迎你的来访啊 🍭 这里是SL的speak页面啊 已经有位可爱的用户访问这个页面了呀~ 这个页面的访问量达到了欸! new Speak({ per_page: 5, owner: 'slqwq', repo: 'speak', defaultLabelName: 'Deafult', defaultLabelColor: '#ffc107', });"}],"posts":[{"title":"Hexo-Butterfly主题魔改","slug":"efp1yi","date":"2021-01-26T20:00:46.000Z","updated":"2021-01-29T03:14:26.978Z","comments":true,"path":"2021/posts/bbr35lia/index.html","link":"","permalink":"https://blog.slqwq.cn/2021/posts/bbr35lia/index.html","excerpt":"","text":"本文章首发于语雀!通过各种高科技功能同步到Hajeekn 的博客 本文章大部分功能涉及到魔改,如果您无法掌握 pug、stylus 等文件的缩进格式，可以直接前往我的博客源码拿取。 这里是我的博客源码哦~ 由于每个人的博客目录都不相同，这里博客目录使用%brt%代替 通过 wowjs 给博客添加好看的样式基础样式篇 1.创建 JS 前往%brt%\\themes\\butterfly\\source\\js\\新建一个 js,名称为wow-init.js其 JS 内部写入如下内容 12345678910111213wow = new WOW(&#123; boxClass: &quot;wow&quot;, // 用户滚动时显示隐藏框的类名称(可以自行配置) animateClass: &quot;animate__animated&quot;, // 触发 CSS 动画的类名称（动画库默认为&quot;animate.css&quot;库）(可以自行配置) offset: 0, // 定义浏览器视口底部与隐藏框顶部之间的距离。 // 当用户滚动并到达此距离时，将显示隐藏的框。 // 可以自行配置 live: true, // 在页面上检查新的 wow.js元素。&#125;);wow.init(); 如果您觉得不想出现注释，也可以删掉注释。 2.前往%brt%\\themes\\butterfly\\layout\\includes\\third-party\\目录,新建一个名为wow-js.pug的文件 其文件内部写入如下代码: 123456789101112131415.pjax-reload if theme.wowjs.animateitem each item in theme.wowjs.animateitem script(async). var arr = document.getElementsByClassName(&#x27;!&#123;item.class&#125;&#x27;); for(var i = 0;i&lt;arr.length;i++)&#123; arr[i].classList.add(&#x27;wow&#x27;); arr[i].classList.add(&#x27;!&#123;item.style&#125;&#x27;); arr[i].setAttribute(&#x27;data-wow-duration&#x27;, &#x27;!&#123;item.duration&#125;&#x27;); arr[i].setAttribute(&#x27;data-wow-delay&#x27;, &#x27;!&#123;item.delay&#125;&#x27;); arr[i].setAttribute(&#x27;data-wow-offset&#x27;, &#x27;!&#123;item.offset&#125;&#x27;); arr[i].setAttribute(&#x27;data-wow-iteration&#x27;, &#x27;!&#123;item.iteration&#125;&#x27;); &#125;script(defer src=url_for(theme.CDN.wowjs))script(defer src=url_for(theme.CDN.wowjs_init)) 3.修改%brt%\\themes\\butterfly\\layout\\includes\\head.pug的内容 在 //- font 的配置下//- global config 的配置上的空白部分写入以下代码(请直接复制粘贴,避免出现缩进错误 ❌) 123&#x2F;&#x2F;- animate_cssif theme.wowjs.enable link(rel&#x3D;&#39;stylesheet&#39; href&#x3D;url_for(theme.CDN.animate_css) media&#x3D;&quot;print&quot; onload&#x3D;&quot;this.media&#x3D;&#39;all&#39;&quot;) 4.修改%brt&amp;\\themes\\butterfly\\layout\\includes\\additional-js.pug文件内部的内容 在 if theme.pjax.enable 配置大项的 baidu-push 小项下写入一下代码(请直接复制粘贴,避免出现缩进错误 ❌)V3.4.0 以下(不包括 3.4.0):将其中的 1$(&#x27;script[data-pjax]&#x27;).each(function () &#123; 删除,并修改为: 123$(&quot;script[data-pjax], .pjax-reload script&quot;).each(function () &#123; $(this).parent().append($(this).remove());&#125;); V3.4.0 以上(包括 3.4.0):找到 1document.querySelectorAll(&#x27;script[data-pjax]&#x27;).forEach(item =&gt; &#123; 删除它,并写入以下代码(请直接复制粘贴,避免缩进错误 ❌) 1234567891011document .querySelectorAll(&quot;script[data-pjax], .pjax-reload script&quot;) .forEach((item) =&gt; &#123; const newScript = document.createElement(&quot;script&quot;); const content = item.text || item.textContent || item.innerHTML || &quot;&quot;; Array.from(item.attributes).forEach((attr) =&gt; newScript.setAttribute(attr.name, attr.value) ); newScript.appendChild(document.createTextNode(content)); item.parentNode.replaceChild(newScript, item); &#125;); 5.修改%brt\\%config%\\_config.butterfly.yml(请将%config%替换为你主题配置文件的位置,如果在根目录请无视) 找到 CDN 配置项在 1utils: /js/utils.js 的配置项下添加 wowjs、wowjs-init、animate 的库(请直接复制粘贴以下代码,避免格式缩进导致的错误 ❌) 123wowjs: https://cdn.jsdelivr.net/gh/graingert/wow@1.3.0/dist/wow.min.jswowjs_init: /js/wow_init.jsanimate_css: https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css 6.修改%brt\\%config%\\_config.butterfly.yml(请将%config%替换为你主题配置文件的位置,如果在根目录请无视) 在该配置文件内部添加 wow 的开关，其中 class 和 style 配置为必填项 1234567891011wowjs: enable: true #控制动画开关。true是打开，false是关闭 animateitem: - class: recent-post-item #必填项，需要添加动画的元素的class style: animate__zoomIn #必填项，需要添加的动画 duration: 3s #选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。 delay: 1s #选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。 offset: 100 #选填项，开始动画的距离（相对浏览器底部） iteration: 2 #选填项，动画重复的次数 - class: CoolButton style: animate__zoomIn 运行hexo clean &amp;&amp; hexo g后方可看到效果,更多 animate 动画样式可查看animate 官方文档 浮动样式篇浮动样式篇参考Aklilar大佬的文章给博客元素添加浮动特效和洪哥的博客效果 1.前往%brt%\\themes\\butterfly\\source\\js\\目录,新建一个名为floatpanel.js的文件 在内部写入以下代码: 123456789101112131415161718192021222324var ANGLE = 45; //控制浮动角度，数值越大，浮动幅度越大。var panel = document.getElementsByClassName(&quot;wowpanels&quot;);for (var i = 0; i &lt; panel.length; i++) &#123; floatable(panel[i]);&#125;function floatable(content) &#123; content.addEventListener(&quot;mouseout&quot;, (e) =&gt; &#123; content.style.transform = `perspective(300px) rotateX(0deg) rotateY(0deg) rotateZ(0deg)`; &#125;); content.addEventListener(&quot;mousemove&quot;, (e) =&gt; &#123; var w = content.clientWidth; var h = content.clientHeight; var y = ((e.offsetX - w * 0.5) / w) * ANGLE; var x = ((1 - (e.offsetY - h * 0.5)) / h) * ANGLE; content.style.transform = `perspective(300px) rotateX($&#123;x&#125;deg) rotateY($&#123;y&#125;deg)`; &#125;);&#125; 2.修改%brt\\%config%\\_config.butterfly.yml(请将%config%替换为你主题配置文件的位置,如果在根目录请无视) 在 inject 大项的 bottom 小项中添加 script 引入项: 1- &lt;script async data-pjax src=&quot;/js/floatpanel.js&quot;&gt;&lt;/script&gt; 3.给你想要特效的类元素添加 wowpanels 属性,修改 floatpanel.js 的代码如下: 123456789101112131415161718192021222324252627282930// 新增的内容var arr = document.getElementsByClassName(&#x27;element-class&#x27;);//把element-class替换成你想要添加特效的元素的类名for(var i = 0;i&lt;arr.length;i++)&#123;arr[i].classList.add(&#x27;wowpanels&#x27;);&#125;// 原来的内容var ANGLE = 45; //控制浮动角度，数值越大，浮动幅度越大。var panel= document.getElementsByClassName(&#x27;wowpanels&#x27;);for(var i = 0;i&lt;panel.length;i++)&#123;floatable(panel[i]);&#125;function floatable (content) &#123;content.addEventListener(&#x27;mouseout&#x27;, e =&gt; &#123;content.style.transform = `perspective(300px)rotateX(0deg)rotateY(0deg)rotateZ(0deg)`;&#125;);content.addEventListener(&#x27;mousemove&#x27;, e =&gt; &#123;var w = content.clientWidth;var h = content.clientHeight;var y = (e.offsetX - w * 0.5) / w * ANGLE;var x = (1 - (e.offsetY - h * 0.5)) / h * ANGLE;content.style.transform = `perspective(300px)rotateX($&#123;x&#125;deg)rotateY($&#123;y&#125;deg)`;&#125;);&#125; 当你完成了基础样式篇时,其实你可以直接将浮动效果看成一个动画样式在之前的配置下直接添加以下配置项: 12- class: #你想要更改的class类名 style: wowpanels 添加完成后 wowjs 的配置项应该与下面的截图类似如果报错,请检查你的配置缩进是否正确 ✔,这里博主推荐使用微软爸爸出品的 VSC 编辑对于缩进格式邀请很强的文件格式以下代码供您用来参考: 123456789101112131415161718192021222324# wowjswowjs: enable: true #控制动画开关。true是打开，false是关闭 animateitem: - class: recent-post-item #必填项，需要添加动画的元素的class style: animate__zoomIn #必填项，需要添加的动画 duration: 3s #选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。 delay: 0.5s #选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。 offset: 100 #选填项，开始动画的距离（相对浏览器底部） iteration: 1 #选填项，动画重复的次数 - class: card-widget #必填项，需要添加动画的元素的class style: animate__zoomInUp #必填项，需要添加的动画 duration: 3s #选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。 delay: 0.5s #选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。 offset: 100 #选填项，开始动画的距离（相对浏览器底部） iteration: 1 #选填项，动画重复的次数 - class: layout hide-aside #必填项，需要添加动画的元素的class style: animate__flipInY #必填项，需要添加的动画 duration: 3s #选填项，动画持续时间，单位可以是ms也可以是s。例如3s，700ms。 delay: 0.5s #选填项，动画开始的延迟时间，单位可以是ms也可以是s。例如3s，700ms。 offset: 100 #选填项，开始动画的距离（相对浏览器底部） iteration: 1 #选填项，动画重复的次数 - class: CoolButton style: wowpanels 如果您想让动画更滑丝滑流畅,可以新建 css,在内部写入以下代码: 123.wowpanels &#123; transition: all 0.4s cubic-bezier(0.39, 0.575, 0.565, 1);&#125; 添加 BiliBili 同款的动态 Banner由于每个人的博客目录都不相同，这里博客目录使用%brt%代替 下载Bilibili的Banner 1.前往%brt%\\themes\\butterfly\\layout\\includes\\header\\新建一个名为bilibili-banner.pug的文件 在其内部写入 1234567891011121314151617181920212223242526272829if (!is_home()) - var banner_style = (typeof(page.bilibili_banner) != &quot;undefined&quot; &amp;&amp; page.bilibili_banner!=null) ? page.bilibili_banner : theme.bilibili_banner.style if (banner_style === &#x27;autumn&#x27;) #autumnBanner div img(src=&#x27;/bilibiliBanner/autumn/bilibili-autumn-1.png&#x27;) div img(src=&#x27;/bilibiliBanner/autumn/bilibili-autumn-2.png&#x27;) div img(src=&#x27;/bilibiliBanner/autumn/bilibili-autumn-3.png&#x27;) div img(src=&#x27;/bilibiliBanner/autumn/bilibili-autumn-4.png&#x27;) div img(src=&#x27;/bilibiliBanner/autumn/bilibili-autumn-5.png&#x27;) div img(src=&#x27;/bilibiliBanner/autumn/bilibili-autumn-6.png&#x27;) else if (banner_style === &#x27;winter&#x27;) #winterBanner .view img.morning(src=&#x27;/bilibiliBanner/winter/bilibili-winter-view-1.png&#x27; alt=&#x27;&#x27;) img.afternoon(src=&#x27;/bilibiliBanner/winter/bilibili-winter-view-2.png&#x27; alt=&#x27;&#x27;) video.evening(autoplay=&#x27;&#x27; loop=&#x27;&#x27; muted=&#x27;&#x27;) source(src=&#x27;/bilibiliBanner/winter/bilibili-winter-view-3.webm&#x27; type=&#x27;video/webm&#x27;) img.window-cover(src=&#x27;/bilibiliBanner/winter/bilibili-winter-view-3-snow.png&#x27; alt=&#x27;&#x27;) .tree img.morning(src=&#x27;/bilibiliBanner/winter/bilibili-winter-tree-1.png&#x27; alt=&#x27;&#x27;) img.afternoon(src=&#x27;/bilibiliBanner/winter/bilibili-winter-tree-2.png&#x27; alt=&#x27;&#x27;) img.evening(src=&#x27;/bilibiliBanner/winter/bilibili-winter-tree-3.png&#x27; alt=&#x27;&#x27;) script(async data-pjax src=url_for(theme.CDN.bilibili_banner)) 2.前往%brt%\\themes\\butterfly\\source\\css\\新建一个名为bilibiliBanner.css的文件 在其内部写入以下代码: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111/* autumnBanner */@media screen and (max-width: 1000px) &#123; #autumnBanner &#123; display: none !important; &#125;&#125;#autumnBanner &#123; height: 100%; position: relative; overflow: hidden; filter: brightness(70%);&#125;#autumnBanner &gt; div &#123; position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; --offset: 0px; --blur: 2px;&#125;#autumnBanner &gt; div &gt; img &#123; display: block; width: 110%; height: 100%; object-fit: cover; transform: translatex(var(--offset)); filter: blur(var(--blur));&#125;/* winterBanner */@media screen and (max-width: 1000px) &#123; #winterBanner &#123; display: none !important; &#125;&#125;#winterBanner &#123; height: 100%; position: relative; width: 100%; overflow: hidden; --percentage: 0.5;&#125;#winterBanner .view,#winterBanner .tree &#123; position: absolute; top: 0; right: 0; bottom: 0; left: 0; display: flex; justify-content: center; align-items: center;&#125;#winterBanner img,#winterBanner video &#123; position: absolute; display: block; max-width: 120% !important; width: 120% !important; height: 100%; object-fit: cover; filter: brightness(70%);&#125;#winterBanner .morning &#123; z-index: 20; opacity: calc(1 - (var(--percentage) - 0.25) / 0.25);&#125;#winterBanner .afternoon &#123; z-index: 10; opacity: calc(1 - (var(--percentage) - 0.5) / 0.5);&#125;#winterBanner .view &#123; transform: translatex(calc(var(--percentage) * 100px));&#125;#winterBanner .tree &#123; transform: translatex(calc(var(--percentage) * 50px)); filter: blur(3px);&#125;#winterBanner .view,#winterBanner .tree,#winterBanner .morning,#winterBanner .afternoon &#123; transition: 0.2s all ease-in;&#125;#winterBanner.moving .view,#winterBanner.moving .tree,#winterBanner.moving .morning,#winterBanner.moving .afternoon &#123; transition: none;&#125;#winterBanner .window-cover &#123; opacity: calc((var(--percentage) - 0.9) / 0.1);&#125; 3.前往%brt%\\themes\\butterfly\\source\\js\\新建一个名为bilibili-banner.js的文件 在其内部写入以下代码 1234567891011121314151617181920212223242526272829303132333435363738394041//autumn_bannervar autumnBanner = document.querySelector(&quot;#autumnBanner&quot;);if (autumnBanner) &#123; var images = document.querySelectorAll(&quot;#autumnBanner &gt; div &gt; img&quot;); autumnBanner.addEventListener(&quot;mousemove&quot;, (e) =&gt; &#123; let percentage = e.clientX / window.outerWidth; let offset = 10 * percentage; let blur = 20; for (let [index, image] of images.entries()) &#123; offset *= 1.3; let blurValue = Math.pow(index / images.length - percentage, 2) * blur; image.style.setProperty(&quot;--offset&quot;, `$&#123;offset&#125;px`); image.style.setProperty(&quot;--blur&quot;, `$&#123;blurValue&#125;px`); &#125; &#125;);&#125;//winter_bannervar winterBanner = document.querySelector(&quot;#winterBanner&quot;);if (winterBanner) &#123; var startingPoint; winterBanner.addEventListener(&quot;mouseenter&quot;, (e) =&gt; &#123; startingPoint = e.clientX; winterBanner.classList.add(&quot;moving&quot;); &#125;); winterBanner.addEventListener(&quot;mouseout&quot;, (e) =&gt; &#123; winterBanner.classList.remove(&quot;moving&quot;); winterBanner.style.setProperty(&quot;--percentage&quot;, 0.5); &#125;); winterBanner.addEventListener(&quot;mousemove&quot;, (e) =&gt; &#123; let percentage = (e.clientX - startingPoint) / window.outerWidth + 0.5; winterBanner.style.setProperty(&quot;--percentage&quot;, percentage); &#125;);&#125; 4.在主题的 source 文件夹下新建bilibiliBanner文件夹,将我所提供的资源解压,直接放入进去(里面一定只有两个目录) 5.进入%brt%\\themes\\butterfly\\layout\\includes\\header\\文件夹,找到index.pug在内部注入 bilibili_banner 组件 在 include ./nav.pug 配置下 if is_post()配置上添加以下配置(请直接复制粘贴,避免代码缩进导致的错误 ❌) 123- var bilibili_banner = (typeof(page.bilibili_banner) != &quot;undefined&quot; &amp;&amp; page.bilibili_banner!=null) ? page.bilibili_banner : theme.bilibili_banner.enableif (bilibili_banner) include ./bilibili-banner.pug 6.修改%brt\\%config%\\_config.butterfly.yml(请将%config%替换为你主题配置文件的位置,如果在根目录请无视) 找到 CDN 配置,在 utils: /js/utils.js 配置的后面添加以下配置 1bilibili_banner: /js/bilibili-banner.js 添加 **css** 配置项。此处使用了异步加载，同时做了媒体选择，对手机是不会生效的。因为手机的 **banner** 高度会导致适配效果很差。 我们找到 inject 配置大项的 head 小项,在其内部添加以下配置: 1- &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/bilibiliBanner.css&quot; media=&quot;defer&quot; onload=&quot;this.media=&#x27;screen&#x27;&quot;&gt; 7.添加控制开关 在 butterfly 主题配置中添加以下配置: 1234# banner样式bilibili_banner: enable: true # 开关banner style: winter # autumn 秋季样式 ；winter 冬季样式 除了在主题配置文件通过配置 bilibili_banner: 的默认项，还可以在每个页面的 markdown 文件中通过 front-matter 控制单页配置。提供了三个选项： false ： 关闭该页面的动态 banner 显示 autumn ： 开启该页面的动态 banner，并设置主题为秋季 winter ： 开启该页面的动态 banner，并设置主题为冬季页面配置项优先级高于主题配置 悬停左上角时在网站顶部中间位置会出现描述 1.进入%brt%\\themes\\butterfly\\layout\\includes\\header\\修改名为nav.pug的文件 找到 12span#blog_namea#site-name(href=url_for(&#x27;/&#x27;)) #[=config.title] 将它们删除,并替换为以下代码(请直接复制粘贴,避免缩进错误 ❌): 12345678910- var pagedescr = (typeof(page.description) != &quot;undefined&quot; &amp;&amp; page.description!=null) ? page.description : &#x27;欢迎您来到了Hajeekn的小木屋呢,不过看起来有点漏水🐕&#x27; if is_post() span#blog_name a#site-name(onclick=&#x27;btf.scrollToDest(0,500)&#x27; data-title=pagedescr) #[=config.title] else if is_page() span#blog_name a#site-name(href=url_for(&#x27;/&#x27;) data-title=pagedescr) #[=page.title] else span#blog_name a#site-name(href=url_for(&#x27;/&#x27;) data-title=pagedescr) #[=config.title] 2.因为 hexo 自带缓存的关系，如果我们用的是缓存式引入的话，nav 的刷新是惰性的，我们需要它根据文章和页面的切换实时变动。所以需要改动一下引入逻辑。打开%brt%\\themes\\butterfly\\layout\\includes\\header\\index.pug 找到 1!=partial(&#x27;includes/header/nav&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;) 删除,并将它修改为以下代码(请直接复制粘贴,避免缩进错误 ❌): 1234include ./nav.pugif top_img !== false if is_post() include ./post-info.pug (如果您添加了 BiliBili 动态 banner,请将它放置在在 if is_post()的前面 if top_img !== false 的后面,避免报错) 3.进入%brt%\\themes\\butterfly\\source\\css\\_layout\\新建_custom.styl 在其内部输入以下代码(请直接复制粘贴,避免缩进错误 ❌): 1234567891011121314151617181920212223242526272829303132/*标题悬停显示文章描述*/#site-name &amp;:hover &amp;:before position: fixed width:fit-content margin:auto left:0; right:0 top:10% border-radius: 10px text-align: center z-index: 100 content: attr(data-title) font-size: 20px color: #fff padding: 10px background-color: rgba(#49B1F5,0.9)/* 夜间模式适配 */[data-theme=dark] a#site-name &amp;:hover &amp;:before background-color: rgba(#121212,0.8)/*标题超过隐藏并显示省略号*/@media screen and (max-width: 768px) a#site-name -webkit-line-clamp 1 word-break break-all display -webkit-box -webkit-box-orient vertical overflow hidden 主页置顶的 ♂gitcalendar♂哪个男孩纸不想拥有一个状态显示呢?这个模块就会教大家在 Butterfly 使用 gitcalendar 准备好了吗?Go Go! 1.前往%brt\\themes\\butterfly\\layout\\includes\\新建一个名为gitcalendar.pug的文件 在其内部添加以下代码(请直接复制粘贴,避免缩进错误 ❌): 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#gitcalendar.gitcalendar #gitmessage(:style=&#x27;&#123;top:y+px,left:x+px,position: fixed,zIndex:9999&#125;&#x27;) .angle-wrapper span &#123;&#123;span1&#125;&#125; &amp;nbsp; span &#123;&#123;span2&#125;&#125; 次上传 .position-relative .border.py-2.graph-before-activity-overview .js-gitcalendar-graph.mx-md-2.mx-3.d-flex.flex-column.flex-items-end.flex-xl-items-center.overflow-hidden.pt-1.is-graph-loading.graph-canvas.gitcalendar-graph.height-full.text-center #gitcalendarcanvasbox(v-if=&#x27;simplemode&#x27;) canvas#gitcanvas(style=&#x27;animation: none;&#x27;) svg.js-gitcalendar-graph-svg(width=&#x27;100%&#x27;, viewBox=&#x27;0 0 770 128&#x27;, v-if=&#x27;!simplemode&#x27;) text.month(:x=&#x27;32 + monthindex*64&#x27;, y=&#x27;20&#x27;, v-for=&#x27;(month,monthindex) in monthchange&#x27;) &#123;&#123;month&#125;&#125; text.wday(text-anchor=&#x27;start&#x27;, dx=&#x27;0&#x27;, dy=&#x27;40&#x27;) 日 text.wday(text-anchor=&#x27;start&#x27;, dx=&#x27;0&#x27;, dy=&#x27;65&#x27;) 二 text.wday(text-anchor=&#x27;start&#x27;, dx=&#x27;0&#x27;, dy=&#x27;90&#x27;) 四 text.wday(text-anchor=&#x27;start&#x27;, dx=&#x27;0&#x27;, dy=&#x27;115&#x27;) 六 g(v-for=&#x27;(weekitem,weekIndex) in data&#x27;, :transform=&#x27;\\&#x27;translate(\\&#x27;+ (16 + weekIndex*14) + \\&#x27;,\\&#x27; + \\&#x27;0)\\&#x27;&#x27;) rect(@mouseover=&quot;selectStyle(dayitem,$event)&quot; @mouseleave=&quot;outStyle()&quot; v-for=&#x27;(dayitem,dayIndex) in weekitem&#x27;, :style=&#x27;&#123;fill:thiscolor(dayitem.count),shapeRendering:crispedges&#125;&#x27;, :data-score=&#x27;dayitem.count&#x27;, :data-date=&#x27;dayitem.date&#x27;, x=&#x27;0&#x27;, :y=&#x27; 30 + dayIndex*13 &#x27;, width=&#x27;11&#x27;, height=&#x27;11&#x27;) .contrib-footer.clearfix.mt-1.mx-3.px-3.pb-1 .float-left.text-gray | 数据来源 a(:href=&quot;&#x27;https://github.com/&#x27;+ user &quot;, target=&#x27;blank&#x27;) @&#123;&#123;user&#125;&#125; .contrib-legend.text-gray | Less ul.legend li(:style=&#x27;&#123;backgroundColor:color[0]&#125;&#x27;) li(:style=&#x27;&#123;backgroundColor:color[2]&#125;&#x27;) li(:style=&#x27;&#123;backgroundColor:color[4]&#125;&#x27;) li(:style=&#x27;&#123;backgroundColor:color[6]&#125;&#x27;) li(:style=&#x27;&#123;backgroundColor:color[8]&#125;&#x27;) | More .contrib-column.contrib-column-first.table-column span.text-muted 过去一年提交 span.contrib-number &#123;&#123;total&#125;&#125; span.text-muted &#123;&#123;oneyearbeforeday&#125;&#125;&amp;nbsp;-&amp;nbsp;&#123;&#123;thisday&#125;&#125; .contrib-column.table-column span.text-muted 最近一月提交 span.contrib-number &#123;&#123;thisweekdatacore&#125;&#125; span.text-muted &#123;&#123;amonthago&#125;&#125;&amp;nbsp;-&amp;nbsp;&#123;&#123;thisday&#125;&#125; .contrib-column.table-column span.text-muted 最近一周提交 span.contrib-number &#123;&#123;weekdatacore&#125;&#125; span.text-muted &#123;&#123;aweekago&#125;&#125;&amp;nbsp;-&amp;nbsp;&#123;&#123;thisday&#125;&#125; 2.继续在这个目录下新建一个名为gitcalendar-js.pug的文件 在内部写入以下代码(请直接复制粘贴,避免缩进错误 ❌): 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245script. var gitcalendar = new Vue(&#123; el: &#x27;#gitcalendar&#x27;, data: &#123; simplemode: !&#123;theme.gitcalendar.simplemode&#125;, user: &#x27;!&#123;theme.gitcalendar.user&#125;&#x27;, fixed: &#x27;fixed&#x27;, px: &#x27;px&#x27;, x: &#x27;&#x27;, y: &#x27;&#x27;, span1: &#x27;&#x27;, span2: &#x27;&#x27;, month: [&#x27;一月&#x27;, &#x27;二月&#x27;, &#x27;三月&#x27;, &#x27;四月&#x27;, &#x27;五月&#x27;, &#x27;六月&#x27;, &#x27;七月&#x27;, &#x27;八月&#x27;, &#x27;九月&#x27;, &#x27;十月&#x27;, &#x27;十一月&#x27;, &#x27;十二月&#x27;], monthchange: [], oneyearbeforeday: &#x27;&#x27;, thisday: &#x27;&#x27;, amonthago: &#x27;&#x27;, aweekago: &#x27;&#x27;, weekdatacore: 0, datacore: 0, total: 0, datadate: &#x27;&#x27;, data: [], positionplusdata: [], firstweek: [], lastweek: [], beforeweek: [], thisweekdatacore: 0, mounthbeforeday: 0, mounthfirstindex: 0, crispedges: &#x27;crispedges&#x27;, thisdayindex: 0, amonthagoindex: 0, amonthagoweek: [], firstdate: [], first2date: [], montharrbefore: [], monthindex: 0, color: !&#123;theme.gitcalendar.color&#125; &#125;, methods: &#123; selectStyle(data, event) &#123; document.querySelector(&#x27;.angle-wrapper&#x27;).style.display = &#x27;block&#x27; this.span1 = data.date; this.span2 = data.count; this.x = event.clientX - 100; this.y = event.clientY - 60 &#125;, outStyle() &#123; document.querySelector(&#x27;.angle-wrapper&#x27;).style.display = &#x27;none&#x27; &#125;, thiscolor(x) &#123; if (x === 0) &#123; let i = parseInt(x / 2); return this.color[0] &#125; else if (x &lt; 2) &#123; return this.color[1] &#125; else if (x &lt; 20) &#123; let i = parseInt(x / 2); return this.color[i] &#125; else &#123; return this.color[9] &#125; &#125;, &#125; &#125;); var apiurl = &#x27;!&#123;theme.gitcalendar.apiurl&#125;&#x27; ? &#x27;https://!&#123;theme.gitcalendar.apiurl&#125;/api?&#x27; : &#x27;https://githubapi.ryanchristian.dev/user/&#x27; var githubapiurl = apiurl + gitcalendar.user; //canvas绘图 function responsiveChart() &#123; let c = document.getElementById(&quot;gitcanvas&quot;); if (c) &#123; let cmessage = document.getElementById(&quot;gitmessage&quot;); let ctx = c.getContext(&quot;2d&quot;); c.width = document.getElementById(&quot;gitcalendarcanvasbox&quot;).offsetWidth; let linemaxwitdh = 0.96 * c.width / gitcalendar.data.length; c.height = 9 * linemaxwitdh; let lineminwitdh = 0.8 * linemaxwitdh; let setposition = &#123; x: 0.02 * c.width, y: 0.025 * c.width &#125;; for (let week in gitcalendar.data) &#123; weekdata = gitcalendar.data[week]; for (let day in weekdata) &#123; let dataitem = &#123; date: &quot;&quot;, count: &quot;&quot;, x: 0, y: 0 &#125;; gitcalendar.positionplusdata.push(dataitem); ctx.fillStyle = gitcalendar.thiscolor(weekdata[day].count); setposition.y = Math.round(setposition.y * 100) / 100; dataitem.date = weekdata[day].date; dataitem.count = weekdata[day].count; dataitem.x = setposition.x; dataitem.y = setposition.y; ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh); setposition.y = setposition.y + linemaxwitdh &#125;; setposition.y = 0.025 * c.width; setposition.x = setposition.x + linemaxwitdh &#125;; ctx.font = &quot;600 Arial&quot;; ctx.fillStyle = &#x27;#aaa&#x27;; ctx.fillText(&quot;日&quot;, 0, 1.9 * linemaxwitdh); ctx.fillText(&quot;二&quot;, 0, 3.9 * linemaxwitdh); ctx.fillText(&quot;四&quot;, 0, 5.9 * linemaxwitdh); ctx.fillText(&quot;六&quot;, 0, 7.9 * linemaxwitdh); let monthindexlist = c.width / 24; for (let index in gitcalendar.monthchange) &#123; ctx.fillText(gitcalendar.monthchange[index], monthindexlist, 0.7 * linemaxwitdh); monthindexlist = monthindexlist + c.width / 12 &#125;; cmessage.onmousemove = function(event) &#123; document.querySelector(&#x27;.angle-wrapper&#x27;).style.display = &#x27;none&#x27; &#125;; c.onmousemove = function(event) &#123; document.querySelector(&#x27;.angle-wrapper&#x27;).style.display = &#x27;none&#x27; getMousePos(c, event); &#125;; function getMousePos(canvas, event) &#123; var rect = canvas.getBoundingClientRect(); var x = event.clientX - rect.left * (canvas.width / rect.width); var y = event.clientY - rect.top * (canvas.height / rect.height); //console.log(&quot;x:&quot;+x+&quot;,y:&quot;+y); for (let item of gitcalendar.positionplusdata) &#123; let lenthx = x - item.x; let lenthy = y - item.y; //console.log(lenthx,lenthy); if (0 &lt; lenthx &amp;&amp; lenthx &lt; lineminwitdh) &#123; if (0 &lt; lenthy &amp;&amp; lenthy &lt; lineminwitdh) &#123; //console.log(item.date,item.count) document.querySelector(&#x27;.angle-wrapper&#x27;).style.display = &#x27;block&#x27; gitcalendar.span1 = item.date; gitcalendar.span2 = item.count; gitcalendar.x = event.clientX - 100; gitcalendar.y = event.clientY - 60 &#125; &#125; //if(0&lt; x - item.x &lt;lineminwitdh&amp;&amp;0&lt; y - item.y &lt;lineminwitdh)&#123; //console.log(item.count,item.date); //&#125; &#125; &#125; &#125; &#125; //数据统计算法 function addlastmonth() &#123; if (gitcalendar.thisdayindex === 0) &#123; thisweekcore(52); thisweekcore(51); thisweekcore(50); thisweekcore(49); thisweekcore(48); gitcalendar.thisweekdatacore += gitcalendar.firstdate[6].count; gitcalendar.amonthago = gitcalendar.firstdate[6].date &#125; else &#123; thisweekcore(52); thisweekcore(51); thisweekcore(50); thisweekcore(49); thisweek2core(); gitcalendar.amonthago = gitcalendar.first2date[gitcalendar.thisdayindex - 1].date &#125; &#125;; function thisweek2core() &#123; for (let i = gitcalendar.thisdayindex - 1; i &lt; gitcalendar.first2date.length; i++) &#123; gitcalendar.thisweekdatacore += gitcalendar.first2date[i].count &#125; &#125;; function thisweekcore(index) &#123; for (let item of gitcalendar.data[index]) &#123; gitcalendar.thisweekdatacore += item.count &#125; &#125;; function addlastweek() &#123; for (let item of gitcalendar.lastweek) &#123; gitcalendar.weekdatacore += item.count &#125; &#125;; function addbeforeweek() &#123; for (let i = gitcalendar.thisdayindex; i &lt; gitcalendar.beforeweek.length; i++) &#123; gitcalendar.weekdatacore += gitcalendar.beforeweek[i].count &#125; &#125;; function addweek(data) &#123; if (gitcalendar.thisdayindex === 6) &#123; gitcalendar.aweekago = gitcalendar.lastweek[0].date; addlastweek() &#125; else &#123; lastweek = data.contributions[51]; gitcalendar.aweekago = lastweek[gitcalendar.thisdayindex + 1].date; addlastweek(); addbeforeweek() &#125; &#125; fetch(githubapiurl) .then(data =&gt; data.json()) .then(data =&gt; &#123; gitcalendar.data = data.contributions; gitcalendar.total = data.total; gitcalendar.first2date = gitcalendar.data[48]; gitcalendar.firstdate = gitcalendar.data[47]; gitcalendar.firstweek = data.contributions[0]; gitcalendar.lastweek = data.contributions[52]; gitcalendar.beforeweek = data.contributions[51]; gitcalendar.thisdayindex = gitcalendar.lastweek.length - 1; gitcalendar.thisday = gitcalendar.lastweek[gitcalendar.thisdayindex].date; gitcalendar.oneyearbeforeday = gitcalendar.firstweek[0].date; gitcalendar.monthindex = gitcalendar.thisday.substring(5, 7) * 1; gitcalendar.montharrbefore = gitcalendar.month.splice(gitcalendar.monthindex, 12 - gitcalendar.monthindex); gitcalendar.monthchange = gitcalendar.montharrbefore.concat(gitcalendar.month); addweek(data); addlastmonth(); responsiveChart(); &#125;) .catch(function(error) &#123; console.log(error); &#125;); //手机版更换为svg绘制 if (document.getElementById(&quot;gitcalendarcanvasbox&quot;).offsetWidth &lt; 500) &#123; gitcalendar.simplemode = false &#125; //当改变窗口大小时重新绘制canvas window.onresize = function() &#123; if (gitcalendar.simplemode) responsiveChart() &#125; //解决滚动滑轮时出现的标签显示 window.onscroll = function() &#123; if (document.querySelector(&#x27;.angle-wrapper&#x27;)) &#123; document.querySelector(&#x27;.angle-wrapper&#x27;).style.display = &#x27;none&#x27; &#125; &#125;; 然后你要去创建 Stylus 样式辣 3.进入%brt%\\themes\\butterfly\\source\\css\\_layout\\新建一个名为gitcalendar.styl的文件 用 编 辑 器 打开在文件内部 植 入 以下代码: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178if hexo-config(&#x27;gitcalendar.enable&#x27;) .gitcalendar font-family SourceHanSans-Medium border 1px solid #DDDDDD border-radius 3px min-height 120px text-align center margin 0 auto border-width 0px width 100% display flex display -webkit-flex justify-content center align-items center flex-wrap wrap img &amp;.spinner width 70px margin-top 50px min-height 70px .gitcalendar-graph text.wday, .gitcalendar-graph text.month font-size 10px fill #aaa .contrib-legend text-align right padding 0 14px 10px 0 display inline-block float right .legend display inline-block list-style none margin 0 5px position relative bottom -1px padding 0 li display inline-block width 10px height 10px .text-small font-size 12px color #767676 .gitcalendar-graph padding 15px 0 0 text-align center .contrib-column text-align center border-left 1px solid #ddd border-top 1px solid #ddd font-size 11px .contrib-column-first border-left 0 .table-column padding 10px display table-cell width 33% vertical-align top .contrib-number font-weight 300 line-height 1.3em font-size 24px display block .monospace text-align center color #000 font-family monospace a color #1D75AB text-decoration none .contrib-footer font-size 11px padding 0 10px 12px text-align left width 100% box-sizing border-box height 26px .left &amp;.text-muted float left margin-left 9px color #767676 a color #4078c0 text-decoration none .left.text-muted a:hover, .monospace a:hover text-decoration underline h2 &amp;.f4 &amp;.text-normal &amp;.mb-3 display none .float-left &amp;.text-gray float left #user-activity-overview display none .day-tooltip white-space nowrap position absolute z-index 99999 padding 10px font-size 12px color #959da5 text-align center background rgba(0,0,0,.85) border-radius 3px display none pointer-events none strong color #dfe2e5 &amp;.is-visible display block &amp;:after position absolute bottom -10px left 50% width 5px height 5px box-sizing border-box margin 0 0 0 -5px content &quot; &quot; border 5px solid transparent border-top-color rgba(0,0,0,.85) .position-relative width 100% padding-left 20px padding-right 20px @media screen and (max-width: 650px) .contrib-column display none .angle-wrapper z-index 9999 display inline display none width 200px height 40px position relative padding 5px 0 background rgba(0, 0, 0, 0.8) border-radius 8px text-align center color white span padding-bottom 1em &amp;:before content &#x27;&#x27; width 0 height 0 border 10px solid transparent border-top-color rgba(0, 0, 0, 0.8) position absolute left 47.5% top 100% .angle-box position fixed padding 10px 4.快马加鞭的前往%brt%\\themes\\butterfly\\layout\\找到我们的 食 物 index.pug 为了方便我们食用,找到#recent-posts.recent-posts 在下面插入一段代码 123456if theme.gitcalendar.enable .recent-post-item(style=&#x27;width:100%&#x27;) !=partial(&#x27;includes/gitcalendar&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)if theme.categoryBar.enable .recent-post-item(style=&#x27;height:auto;width:100%;padding:0px;&#x27;) #categoryBar!= list_categories(site.categories,&#123;class: &#x27;categoryBar&#x27;,depth: 1&#125;) 记得一定要放在+postUI 的前一行哦- 5.进入%brt%\\themes\\butterfly\\layout\\includes\\的additional-js.pug文件在 script(src=url_for(theme.CDN.utils))的上面加入以下内容 1script((src = url_for(theme.CDN.vue))); 然后再找到 script(defer src=url_for(theme.CDN.busuanzi))配置项在这下面放入以下代码 123 if theme.gitcalendar.enable !=partial(&#x27;includes/gitcalendar-js&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;)!=partial(&#x27;includes/third-party/prismjs&#x27;, &#123;&#125;, &#123;cache:theme.fragment_cache&#125;) 好的,修改完了,接下来我们就可以去添加 CDN 配置项和 gitcalendar 配置项了进入%brt%\\_config.butterfly.yml找到 CDN 配置项在 utils: /js/utils.js 配置项的下面插入以下代码 1vue: https://cdn.jsdelivr.net/npm/vue@2.6.11 然后随便找一个屑位置,插入以下代码: 123456789101112131415#gitcalendargitcalendar: enable: true simplemode: true #设为true时使用canvas绘制gitgitcalendar， #设为false时使用svg绘制gitgitcalendar #canvas：dom数少，但图像会发生模糊，自适应一般 #svg：dom数多，图像清晰，自适应更佳 user: slblog-github #这里填写你的github用户名 apiurl: # 留空为默认公共API # 以下色调选择喜欢的一行保留即可。其余注释。 color: &quot;[&#x27;#e4dfd7&#x27;, &#x27;#f9f4dc&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f8df72&#x27;, &#x27;#fcd217&#x27;, &#x27;#fcc515&#x27;, &#x27;#f28e16&#x27;, &#x27;#fb8b05&#x27;, &#x27;#d85916&#x27;, &#x27;#f43e06&#x27;]&quot; #橘黄色调 # color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot; #浅紫色调 # color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f0fff4&#x27;, &#x27;#dcffe4&#x27;, &#x27;#bef5cb&#x27;, &#x27;#85e89d&#x27;, &#x27;#34d058&#x27;, &#x27;#28a745&#x27;, &#x27;#22863a&#x27;, &#x27;#176f2c&#x27;, &#x27;#165c26&#x27;, &#x27;#144620&#x27;]&quot; #翠绿色调 # color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f1f8ff&#x27;, &#x27;#dbedff&#x27;, &#x27;#c8e1ff&#x27;, &#x27;#79b8ff&#x27;, &#x27;#2188ff&#x27;, &#x27;#0366d6&#x27;, &#x27;#005cc5&#x27;, &#x27;#044289&#x27;, &#x27;#032f62&#x27;, &#x27;#05264c&#x27;]&quot; #天青色调 然后参照上面的配置就行辣~关于配置 apiurl 可以参照Akilar 大佬的文章自建 API 哦各位有什么想魔改的可以评论以一下(只要不太难,毕竟我还是个 初 中 生) 在你的网站添加一个 ♂ 美妙 ♂ 的 PACE 加载进度条这个很简单,只需要一个 JS 和一个 CSS 就可以了现在我们开始吧首先进入%brt%\\_config.butterfly.yml找到 inject 大项在 bottom 配置项下面添加如下配置: 12- &lt;script async data-pjax src=&quot;https://cdn.jsdelivr.net/gh/HCLonely/hclonely.github.io@1.4.7/js/custom/pace.min.js&quot;&gt;&lt;/script&gt;- &lt;link rel=stylesheet href=&quot;https://cdn.jsdelivr.net/gh/HCLonely/hclonely.github.io@1.4.7/css/custom/pace-theme-flash.min.css&quot;&gt; 然后就行了,哈哈其实是用来水一下字数的","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/categories/Hexo/"},{"name":"主题魔改","slug":"Hexo/主题魔改","permalink":"https://blog.slqwq.cn/categories/Hexo/%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/tags/Hexo/"},{"name":"主题魔改","slug":"主题魔改","permalink":"https://blog.slqwq.cn/tags/%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"}],"author":"Hajeekn"},{"title":"使用Cloud Studio在云端写作✍","slug":"af1bhg","date":"2021-01-21T20:00:46.000Z","updated":"2021-01-29T03:14:27.010Z","comments":true,"path":"2021/posts/2ir0l12g/index.html","link":"","permalink":"https://blog.slqwq.cn/2021/posts/2ir0l12g/index.html","excerpt":"","text":"本文章首发于语雀!通过各种高科技功能同步到Hajeekn 的博客 Hey，这篇文章我们会为你介绍一个写作的新方法——Cloud Studio 云写作 初始化 Cloud Studio想要在 Cloud Studio 云写作，首先你要上传源码到仓库。你可以上传到 GitLab、GitHub、Coding 等代码托管商首先我们打开 Cloud Studio地址为你的项目名.cloudstudio.net/dashboard/workspace进入后选择新建工作空间工作空间名可以随便填运行环选择 Node.js代码来源可以选择空 同步仓库现在进入工作空间后我们选择上栏的终端新建终端然后在下面就会出现类似这样的东西这就是我们的终端了，现在你要把你博客上传到 GitHub 之类的代码托管网站上，方便我们同步。在你的终端内输入 123git clone 你的仓库地址 .&#96;&#96;&#96;bashgit clone 你的仓库地址 . 克隆完后在右边就会出现你的文件，这时候你就可以像本地一样正常写文章了哦（其实笔者还是认为 GitHub Actions 自动部署好一点) Thanks For You©2020-Now year 本篇文章由 SL 发布到语雀，通过百度云函数及 Webhook 同步到 SL 的博客~未经允许，可以转载","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/categories/Hexo/"},{"name":"云端写作","slug":"Hexo/云端写作","permalink":"https://blog.slqwq.cn/categories/Hexo/%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/tags/Hexo/"},{"name":"云端","slug":"云端","permalink":"https://blog.slqwq.cn/tags/%E4%BA%91%E7%AB%AF/"},{"name":"高效写作","slug":"高效写作","permalink":"https://blog.slqwq.cn/tags/%E9%AB%98%E6%95%88%E5%86%99%E4%BD%9C/"}],"author":"Hajeekn"},{"title":"使用全新的评论系统————————————Waline","slug":"ugincq","date":"2021-01-17T08:08:23.000Z","updated":"2021-01-29T03:14:28.094Z","comments":true,"path":"2021/posts/4a5e237/index.html","link":"","permalink":"https://blog.slqwq.cn/2021/posts/4a5e237/index.html","excerpt":"","text":"市面上有许多评论 Valine 来必力 畅言 等等评论系统 这篇文章我将教大家使用一款全新的评论————Waline Waline 是基于 Valine 所衍生出来的评论 你可以将 Waline 等价为 With backend Valine 官网:https://waline.js.org/ 本篇文章将以 Butterfly 3.5.1 做演示 获取 APP ID/KEY首先我们登录账号 https://console.leancloud.app/login?from=%2Fapps 没有的可以自己注册 登陆完成后我们创建一个应用 创建完成后进入设置 选择应用 Keys 记好这三个重要 ID 部署至 Vercel 点击上方按钮跳转到 Vercel 部署 。未登录的话需要登录，这里选 Github 登录即可。登录后会让你输入 Vercel 项目名称。 输入名称后点击 Continue 进入下一步，输入 Github 仓库名称。Vercel 会基于 waline 模板帮助你新建并初始化该仓库。 仓库初始化完毕后开始准备部署到 Vercel。这里需要在 Environment Variables 初配置 LEAN_ID, LEAN_KEY 和 LEAN_MASTER_KEY 三个环境变量。它们的值分别对应上一步在 LeanCloud 中获得的 APP ID, APP KEY, Master Key。如果你是 LeanCloud 国内版用户的话，还需要输入 LEAN_SERVER 环境变量，对应的是你在上一步上绑定的已备案域名。 点击 Deploy 就会开始进行部署了。稍等片刻，就会看到满屏的烟花庆祝你部署成功了。点击 Visit 会跳转到部署好的网站地址上，该地址即为之后需要填入的 serverURL 地址。 配置实战接着我们进入 Butterfly 主题配置 找到 waline 配置项 在 serverURL 填入刚才的网站地址(记得带上 https 协议) 默认配置文件如下: 12345678# waline - A simple comment system with backend support fork from Valine# https://waline.js.org/waline: serverURL: # Waline server address url avatar: monsterid # gravatar style https://zh-tw.gravatar.com/site/implement/images/#default-image bg: /image/comment_bg.png # waline background emojiCDN: # emoji CDN option: 自定义表情如果你需要自定义表情，请在emojiCDN配置你的表情 CDN 同时你需要在 Hexo 根目录下的source/_data/创建一个 jsonwaline.json waline.json与valine.json的配置文件可共用 格式如下 1234567891011121314151617181920212223&#123; &quot;tv_doge&quot;: &quot;6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png&quot;, &quot;tv_親親&quot;: &quot;a8111ad55953ef5e3be3327ef94eb4a39d535d06.png&quot;, &quot;tv_偷笑&quot;: &quot;bb690d4107620f1c15cff29509db529a73aee261.png&quot;, &quot;tv_再見&quot;: &quot;180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png&quot;, &quot;tv_冷漠&quot;: &quot;b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png&quot;, &quot;tv_發怒&quot;: &quot;34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png&quot;, &quot;tv_發財&quot;: &quot;34db290afd2963723c6eb3c4560667db7253a21a.png&quot;, &quot;tv_可愛&quot;: &quot;9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png&quot;, &quot;tv_吐血&quot;: &quot;09dd16a7aa59b77baa1155d47484409624470c77.png&quot;, &quot;tv_呆&quot;: &quot;fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png&quot;, &quot;tv_嘔吐&quot;: &quot;9f996894a39e282ccf5e66856af49483f81870f3.png&quot;, &quot;tv_困&quot;: &quot;241ee304e44c0af029adceb294399391e4737ef2.png&quot;, &quot;tv_壞笑&quot;: &quot;1f0b87f731a671079842116e0991c91c2c88645a.png&quot;, &quot;tv_大佬&quot;: &quot;093c1e2c490161aca397afc45573c877cdead616.png&quot;, &quot;tv_大哭&quot;: &quot;23269aeb35f99daee28dda129676f6e9ea87934f.png&quot;, &quot;tv_委屈&quot;: &quot;d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png&quot;, &quot;tv_害羞&quot;: &quot;a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png&quot;, &quot;tv_尷尬&quot;: &quot;7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png&quot;, &quot;tv_微笑&quot;: &quot;70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png&quot;, &quot;tv_思考&quot;: &quot;90cf159733e558137ed20aa04d09964436f618a1.png&quot;, &quot;tv_驚嚇&quot;: &quot;0d15c7e2ee58e935adc6a7193ee042388adc22af.png&quot;&#125; ENDThanks For You pie title 文章内容采集 &quot;Waline 文档&quot; : 30.77 &quot;Butterfly 文档&quot; : 40.56 &quot;自写&quot; : 28.67","categories":[{"name":"评论系统","slug":"评论系统","permalink":"https://blog.slqwq.cn/categories/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"}],"tags":[{"name":"简约","slug":"简约","permalink":"https://blog.slqwq.cn/tags/%E7%AE%80%E7%BA%A6/"},{"name":"大气","slug":"大气","permalink":"https://blog.slqwq.cn/tags/%E5%A4%A7%E6%B0%94/"}],"author":"Hajeekn"},{"title":"使用\"Colour-Buttons\"CSS","slug":"nceoe0","date":"2021-01-15T19:39:13.000Z","updated":"2021-01-29T03:14:27.750Z","comments":true,"path":"2021/posts/26b85026/index.html","link":"","permalink":"https://blog.slqwq.cn/2021/posts/26b85026/index.html","excerpt":"","text":"Color-buttons 是博主(Hajeekn)从 Butterfly 主题搬并独立出来的一个按钮样式 并且我还对他的颜色多样化了，今天教大家如何使用这个东西。 进入Color-Buttons 仓库 您可以选择克隆仓库后手动构建/直接使用我们构建好的样式文件 已经构建好的文件:https://cdn.jsdelivr.net/npm/color-buttons/dist/colormin.css 今天我们以手动构建来演示 1.克隆仓库克隆指令: 1git clone https://github.com/glahajeekn/Color-Buttons.git &amp;&amp; cd Color-Buttons 克隆完成后有这些文件 在终端输入 1npm i 或者 1cnpm i 补全依赖(其实也就几个) 2.构建文件在终端输入 1npm run build 构建出 CSS 文件 构建完成后进入 dist 文件夹内部 就可以看到生成好的文件 你现在就可以用它生成漂亮按钮了 class 名都在这 Thanks For You","categories":[],"tags":[],"author":"Hajeekn"},{"title":"测试语雀文章","slug":"pgv37z","date":"2021-01-13T12:33:34.000Z","updated":"2021-01-29T03:14:27.082Z","comments":true,"path":"2021/posts/ebef76rc/index.html","link":"","permalink":"https://blog.slqwq.cn/2021/posts/ebef76rc/index.html","excerpt":"","text":"本文首发于语雀由 Hajeekn 发布接下来测试各种写法显示 1.图片以上图片由语雀提供存储服务~ 2.语雀上的多样文字Text(加粗)Text(斜体)Text(杠掉)Text(下划线)Te(上标)xt(下标)Text(行内代码)~~_**Te**_~~``~~_**xt**_~~(组合文字) 3.外挂标签(Hexo 特性) 开始背书 海内存知己‚天涯若比邻 初级标签 Codeblock in note 成功标签 Info Header 信息标签 Warning Header 警告标签 Danger Header 危险标签 No icon note note info no-icon 无图标标签 12&lt;p&gt;代码框标签，效果和&#96;&#96;一样&lt;&#x2F;p&gt; 黄色色块 左边框红色块级 纯文本测试 支持简单的 markdown 语法 支持自定义颜色 绿色 + 默认选中 黄色 + 默认选中 青色 + 默认选中 蓝色 + 默认选中 增加 减少 叉 测试 测试一下 看看答案 我是答案 看看更新吧 如何参与项目[http://localhost:4000/contributors/](http://localhost:4000/contributors/) 碎碎念 2020-08-06 连接测试 今天是 2020-08-06 2020-08-05 连接测试 今天是 2020-08-05 查看图片测试 查看默认打开的折叠框 这是一个默认打开的折叠框。 查看代码测试 查看列表测试 hahahehe 查看嵌套测试 查看嵌套测试2 查看嵌套测试3 hahaha 4.多彩文字HHHHHHHH 5.带多彩背景的文字(语雀)啊这","categories":[],"tags":[],"author":"Hajeekn"},{"title":"使用 You-get 下载 YouTube 的视频","slug":"lgts8i","date":"2020-12-26T10:01:28.000Z","updated":"2021-01-29T03:14:27.814Z","comments":true,"path":"2020/posts/b6b199d4/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/b6b199d4/index.html","excerpt":"","text":"注:本篇涉及到 Python 和 Terminal! 现在大部分视频网站都使用 HTML5 播放器 这也使原来可以轻易下载视频的方法失效 因为我们使用 F12 查看后发现地址变成了 blob 这是我们很难进行下载，下载后获取的文件大部分都为 m3u8，根本无法进行解析，于是本文章将教大家使用 GitHub 开源项目:You-get下载视频 (本篇使用 YouTube 示例) INSTALL PYTHON首先进入Python官网下载 Python 最新版 (本篇写于:2020/12/26 最新版本为 Python 3.9.1) 点击此按钮进行下载 下载后执行下载的文件就可以开始安装了 安装完成后就可进入下一步 更换 PIP 源官方默认 pip 源较慢，于是我们可以将他更改为国内 pip 源 进入 C:\\Users%username% 在目录下创建一个名为 pip 的文件夹 pip 文件夹内部新建 pip.ini 文件内写入以下代码 12[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple 接着以管理员身份打开终端 执行 1pip install you-get 安装 you-get 包 安装完后使用 1you-get 查看是否安装成功 安装成功后就可进入下一步 下载视频测试这里我们去 YouTube 上找一个视频 这里以 4K 为例 我们在终端执行以下指令 1you-get https://www.youtube.com/watch?v=zBKei6Ji_WI 不过可能会半天出不来，这是因为 you-get(python)无法直接被网页代理软件进行代理(如:SSR/V2Ray/SS/Torjan) 如报错图 这时候就要使用 Proxy options(高级参数) 我们对指令进行一下修改 修改后如下: 1you-get https://www.youtube.com/watch?v=zBKei6Ji_WI -x 127.0.0.1:10809 成功开始下载 附文点这里下载 Python(蓝奏云)","categories":[{"name":"Python","slug":"Python","permalink":"https://blog.slqwq.cn/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://blog.slqwq.cn/tags/Python/"},{"name":"Terminal","slug":"Terminal","permalink":"https://blog.slqwq.cn/tags/Terminal/"}],"author":"Hajeekn"},{"title":"使用Vercel搭建一个静态网站","slug":"vxyp0t","date":"2020-12-11T21:53:28.000Z","updated":"2021-01-29T03:14:27.854Z","comments":true,"path":"2020/posts/98e384e2/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/98e384e2/index.html","excerpt":"","text":"提供免费搭建网站的服务有很多，像热铁盒主机、Coding Pages、GitHub Pages······Vercel 也是其中之一，今天教大家使用 Vercel 搭建一个静态网站。 登录账号前往 Vercel 官网 点击 Login 按钮 点击后会跳转至这个页面 授权服务选择一个你有的账号 按钮 1.连接到 GitHub 按钮 2.连接到 GitLab 按钮 3.连接到 Bitbucket 如果你都没有就可以点击下面的 Don’t have an account? Sign Up(没有一个账号?注册) 这里用 GitHub 来演示 登录完成后会跳转到仪表盘 这时候我们先回到 GitHub，我们先创建一个仓库放入测试 html 导入项目接着我们复制刚创建的仓库的 git 地址 进入这个页面的时候注意，由于我们的仓库里放了一个 html，所以这里不要做任何设置直接点击蓝色的 Deploy 按钮 出现这个页面就代表你的网页成功部署了 我们点击 Visit 按钮去测试一下 成功! 这样就可以搭建一个简单的静态网站了。 对于 Hexo 你可以直接放源码上去，然后配置构建命令，不过这个内容不属于本文范围之类，所以就不讲了。 Thanks For You","categories":[{"name":"Vercel","slug":"Vercel","permalink":"https://blog.slqwq.cn/categories/Vercel/"}],"tags":[{"name":"网站","slug":"网站","permalink":"https://blog.slqwq.cn/tags/%E7%BD%91%E7%AB%99/"},{"name":"Free","slug":"Free","permalink":"https://blog.slqwq.cn/tags/Free/"}],"author":"Hajeekn"},{"title":"获取JOOX的音乐地址","slug":"vth6on","date":"2020-11-27T20:00:46.000Z","updated":"2021-01-29T03:14:27.118Z","comments":true,"path":"2020/posts/ebef73e2/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/ebef73e2/index.html","excerpt":"","text":"Joox 相信很多人都熟悉，它是腾讯音乐的国外版本，可以免费听大部分国内要 VIP 的歌(包括单独付费的歌曲) 今天我来教大家如何获取他的音乐地址 进入官网首先我们进入官网: 点击进入 看到的应该是这样的场景，如果右上角没出现 Log in 就请参照CCKNBC 大佬的教程配置 搜索歌曲在 Search Songs 处搜索歌曲，这里以周杰伦的 Mojiti 为例 在此页面的时候按下 F12 F12切换到 Network 看好这里 点击 Play 的时候看有没有新的请求 一般都会请求失败，因为 API 被墙了 取得 API 地址我们把鼠标移到这两个新增的请求上面 找到以 https://api-jooxtt.sanook.com 开头的地址，将他复制下来 在新窗口打开 接着只需要找到 play_url_list 将他打开即可 End本文结束","categories":[{"name":"干货","slug":"干货","permalink":"https://blog.slqwq.cn/categories/%E5%B9%B2%E8%B4%A7/"}],"tags":[{"name":"干货","slug":"干货","permalink":"https://blog.slqwq.cn/tags/%E5%B9%B2%E8%B4%A7/"}],"author":"Hajeekn"},{"title":"用Jsdelivr存储视频","slug":"gvdaq5","date":"2020-11-01T10:35:57.000Z","updated":"2021-01-29T03:14:27.898Z","comments":true,"path":"2020/posts/e2973985/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/e2973985/index.html","excerpt":"","text":"众所周知，Jsdelivr 是个免费、开源的 CDN，你可以在上面存储小于 20MB 的文件 那么视频也可以?当然，但是 Jsdelivr 对于音视频的解码不太好，在 PC 上打开直接成为一段音轨。 不过我们可以采用 M3U8 的方式进行视频存储 接下来就开始教程 视频切片申明一下，这不是简单的切片，这个切片利用了 HLS 技术: HLS 的工作原理是把整个流分成一个个小的基于 HTTP 的文件来下载，每次只下载一些。当媒体流正在播放时，客户端可以选择从许多不同的备用源中以不同的速率下载同样的资源，允许流媒体会话适应不同的数据速率。在开始一个流媒体会话时，客户端会下载一个包含元数据的 extended M3U (m3u8) playlist 文件，用于寻找可用的媒体流。HLS 只请求基本的 HTTP 报文，与实时传输协议（RTP）不同，HLS 可以穿过任何允许 HTTP 数据通过的防火墙或者代理服务器。它也很容易使用内容分发网络来传输媒体流。 在我们的需求中，可以简单地把视频的地址理解为 playlist 的地址，而 playlist 就是我们单个视频片段的索引，把较大的视频给宅分就可以绕过存储单件大小限制，同时也符合 jsdelivr 丢资源的要求，这样就可以用 GitHub+Jsdelivr 做视频床了。 咋实现呢? 获取重要工具-ffmpeg Get ffmpeg 下载后可以看到有三个 exe 仅需脱出 ffmpeg.exe 即可 接着打开终端 输入 1./ffmpeg.exe 就会弹出 ffmpeg 的参数 说明你弄正确了，但你觉得太麻烦的话可以自行百度添加环境变量 开始切片 视频转为 ts 格式，一对一，转换后大小没变化 1./ffmpeg.exe -y -i 视频.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 视频.ts 将 ts 进行分片，每 5 秒为一片 1./ffmpeg.exe -i 视频.ts -c copy -map 0 -f segment -segment_list playlist.m3u8 -segment_time 5 视频%03d.ts 分片完成后可以看到多了一些 ts 之后我们删除你的原视频和原视频转换的 ts 使用 DPlayer 播放器解析 注:这不是单纯的分片，如果你不信就可以自己打开看看，是乱码。 当然直接试图访问 m3u8 也是不行的，我们需要用 hls.js: hls.js 是一款基于 Media Source Extensions 开发的，用于实现 HTTP Live Streaming 开源 JavaScript 类库。它可以实现将 MPEG-2 和 AAC/MP3 码流变成自制的 MP4 的分片。并且可以直接绑定在 Video 上，实现播放。 我们使用 DPlayer 播放器，只用在 DPlayer 前引入 hls.js 就可以了 12345678&lt;div id=&quot;dplayer&quot; class=&quot;dplayer-video dplayer dplayer-no-danmaku dplayer-paused&quot;&gt;&lt;/div&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/jquery&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/hls.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/gh/MoePlayer/DPlayer@master/dist/DPlayer.min.js&quot;&gt;&lt;/script&gt; 引入后我们需要对他进行初始化 1234567891011121314151617181920$(function () &#123; const dp = new DPlayer(&#123; container: document.getElementById(&quot;dplayer&quot;), autoplay: !0, theme: &quot;#42b983&quot;, loop: true, lang: &quot;zh-cn&quot;, preload: &quot;auto&quot;, volume: Number(&quot;0&quot;), video: &#123; url: &quot;https://cdn.jsdelivr.net/gh/glahajeekn/vdts@master/go/playlist.m3u8&quot;, //自己的m3u8地址 type: &quot;hls&quot;, defaultQuality: 0, pic: &quot;https://i2.hdslb.com/bfs/archive/37785c661455874fe424a6731a9c6b82e31cef7a.jpg&quot;, //视频未播放前的封面 thumbnails: &quot;thumbnails.jpg&quot;, &#125;, &#125;);&#125;); 初始化完成后就可以用了 效果可以查看我的VideoPlayer","categories":[{"name":"干货","slug":"干货","permalink":"https://blog.slqwq.cn/categories/%E5%B9%B2%E8%B4%A7/"}],"tags":[{"name":"Jsdelivr","slug":"Jsdelivr","permalink":"https://blog.slqwq.cn/tags/Jsdelivr/"}],"author":"Hajeekn"},{"title":"如何使用在线工具 - Photopea","slug":"gkg19k","date":"2020-10-02T17:24:42.000Z","updated":"2021-01-29T03:14:27.150Z","comments":true,"path":"2020/posts/c9f23913/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/c9f23913/index.html","excerpt":"","text":"众所周知，Adobe 全家桶的”PS”是处理图片不可缺少的一款工具 可稍不注意就会 无响应警告 不过国外有一位大神开发出了在线版本的”PS”，并且将”PS”的大部分功能都给还原了 这是由 Ivan Kuckir 大神开发的Photopea 我们首先打开这个网站 点击新建项目，当然也可以从电脑打开 接下来它会让我们选择项目大小和模板之类的 这里可以直接不选择模板直接选择大小，然后填写一下名字就创建 进入项目后可以看到这样的界面 接下来我演示怎么做一个简单的 Logo 首先点击左边工具栏的”T”(文字工具) 接着在上方会出现 这里我们可以自己调节字体、文字大小、文字颜色等 这里我选的是 Hanalei Fill 字体 大小我调节的是 499px 然后写入自己想要的文字 写入完成后是这个样子的 接下来我们贴个图 去iconfont找个好康的图标，下载下来 png 下载下来 PNG 后将这个图片拖进 Photopea 然后调好大小就完成了 接着点击文件-另存为 PSD 保存这个工程文件，方便下次修改 然后点击 然后就可以下载下来 Logo 了 顺便这个网站还提供 SVG 下载哦 总结:齐全的功能，多语言支持，佩服作者 👍","categories":[{"name":"实用工具","slug":"实用工具","permalink":"https://blog.slqwq.cn/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"},{"name":"在线工具","slug":"实用工具/在线工具","permalink":"https://blog.slqwq.cn/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"实用工具","slug":"实用工具","permalink":"https://blog.slqwq.cn/tags/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"author":"Hajeekn"},{"title":"推荐一些实用工具","slug":"qqzb5p","date":"2020-08-28T10:09:19.000Z","updated":"2021-01-29T03:14:27.190Z","comments":true,"path":"2020/posts/c5ef192c/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/c5ef192c/index.html","excerpt":"","text":"RaiDrive官网:https://www.raidrive.com/download 这款软件可以帮你把 NAS、OneDrive、Google Drive 等网盘映射到本地，目前博主正在用，非常好评! IDM官网:http://www.internetdownloadmanager.com/ 这是一款多线程下载器，最高支持 32 线程 下载速度杠杠滴! Typora官网:https://www.typora.io/ 一款 MarkDown 写作工具，支持自定义主题 也支持使用 CSS 自构建一款心爱的主题 ScreenToGif官网:https://www.screentogif.com/ GitHub:https://github.com/NickeManarin/ScreenToGif 可以录制高帧率的 GIF OBS官网:https://obsproject.com/ 主播都在用的推流/录制软件，支持自定义推流服务器 也可以使用内置的 落雪音乐GitHub:https://github.com/lyswhut/lx-music-desktop 支持酷我、酷狗、企鹅、网易等音乐平台的歌曲搜索 还支持显示歌词、下载歌词、收藏等操作 火绒官网:https://www.huorong.cn/ 一款安全软件，不流氓，清爽 并且还包含各种小工具 如:漏洞修复、系统修复、弹窗拦截、右键管理 BlockbenchGitHub:https://github.com/JannisX11/blockbench 一款模型制作工具 支持制作著名游戏 Minecraft 的模型和制作其它引擎的模型 SSTap-beta官网:https://www.sockscap64.com/sstap-homepage-chinese-traditional/ 可以创建一个全局环境，代理 CS:GO 等游戏 玩过游戏的基本都用过这款软件的吧 Google Chrome官网:https://google.cn/chrome 由谷歌团队开发的一款浏览器 因为其清爽简洁的 UI 和琳琅满目的扩展支持让他成为大众的不二之选 缺点: CPU/内存占用超大 SocksCap官网:https://www.sockscap64.com/homepage/ 这款软件允许你把不支持网页代理的应用(例如 OBS Studio)的数据流转发到网页代理，使得可以支持网页代理。 网页代理，又称为在线代理或线上代理**。网页代理是一种在网页上运行的代理服务器程序，其不用任何设置，有输入网址选择好代理服务器便可以访问的优点。 网页代理是常见的一种代理程序。网页代理给客户端提供远程网站上的网页和文件的高速缓存，使客户端可以更加快速安全的浏览远程网站。一些网页代理网站保持每天更新以保证速度。 网页代理软件: ShadowsocksR Shadowsocks Trojan V2Ray 以上列举的常用的软件 他们都有一个共同的特点 无法代理 OBS 推流，那是因为 OBS 不支持网页代理，需要使用一些软件来转换数据流","categories":[{"name":"实用工具","slug":"实用工具","permalink":"https://blog.slqwq.cn/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"干货","slug":"干货","permalink":"https://blog.slqwq.cn/tags/%E5%B9%B2%E8%B4%A7/"}],"author":"Hajeekn"},{"title":"想写一个Button?看这里","slug":"ryckoc","date":"2020-08-24T20:47:02.000Z","updated":"2021-01-29T03:14:27.294Z","comments":true,"path":"2020/posts/5b931a80/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/5b931a80/index.html","excerpt":"","text":"想写一个 Button 但是不会 CSS 和动画效果?这期水货干货满满不知道什么是 Button? 这是 Button 这也算 Button 这边就拿我的个人主页的 ↗ Go Blog 为例子 首先我们在本地创建一个 HTML 和 CSS 类似这样 然后我们右键 HTML 打开后按照你写一个页面的格式 写一个简单的空壳页面 我这边是这样写的: 12345678910&lt;!DOCTYPE HTML&gt;&lt;!-- Start --!&gt;&lt;html&gt;&lt;head&gt;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;./bt.css&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;I&#x27;m Body&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 写完后我们首先在 Body 部分写一个自定义样式的超链接 12345678&lt;a class=&quot;btn&quot; href=&quot;https://blog.slqwq.cn&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot; one-link-mark=&quot;yes&quot; &gt;&lt;span&gt;&amp;nbsp;&amp;nbsp; ↗&amp;nbsp;Go Blog &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/a&gt; 然后我们打开 css 在里面写入: 12#btns .btn &#123;&#125; 这样一个基本 CSS 框架就好了 然后我们就可以开始写 CSS 部分了 先写入 1padding: 0; 使填充为 0 再写入 1font-size: 100%; 使字体尺码为 100% 然后写入 1position: relative; 生成相对定位的元素，相对于其正常位置进行定位。 接着写入 1z-index: 1; 设置元素的堆叠顺序。拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面 之后写入 1align-items: center; 定义 flex 子项在 flex 容器的当前行的侧轴(纵轴)方向上的对齐方式 最后写入 1border-radius: 50%; 给 div 元素添加方形的边框 这时候显示出来还是这种状态 然后咱们再写入 12345678910111213141516border: 4px solid hsla(0,0%,100%,.7);0,0,0,.08), 0 3px 8px rgba(0,0,0,.06): ;border: none;box-shadow: 0 14px 38px #2196f300, 0 3px 8px #2196f300;background-color: #2196F3;-webkit-transition: all .3s ease-out;transition: all .3s ease-out;margin: 0 30px;width: 54px;height: 54px;min-width: 54px;min-height: 54px;border-radius: 0px;line-height: 4.3rem;font-size: 20px;color: #eff; 定义背景颜色之类的 然后就成了这个亚子 这时候已经半成了 我们只需要再去掉下划线，调调大小之类的就行了，所以就写入 1text-decoration: none; 这就是去掉下划线后的样子，然后我们需要添加鼠标移动效果 123456789101112131415161718.btn:hover &#123; background-color: #ff7242; -webkit-transition-timing-function: cubic-bezier(0.45, 1.64, 0.47, 0.66); -moz-transition-timing-function: cubic-bezier(0.45, 1.64, 0.47, 0.66); -o-transition-timing-function: cubic-bezier(0.45, 1.64, 0.47, 0.66); -ms-transition-timing-function: cubic-bezier(0.45, 1.64, 0.47, 0.66); transition-timing-function: cubic-bezier(0.45, 1.64, 0.47, 0.66); -webkit-transform: scaleX(1); -moz-transform: scaleX(1); -o-transform: scaleX(1); -ms-transform: scaleX(1); transform: scaleX(1); -webkit-transition: all 1s ease-in-out; -moz-transition: all 1s ease-in-out; -o-transition: all 1s ease-in-out; -ms-transition: all 1s ease-in-out; transition: all 1s ease-in-out;&#125; 然后就可以达到鼠标移上去变色的效果 接着咋们在修改亿点地方 最终成品 文章水完了，溜了溜了","categories":[{"name":"干货","slug":"干货","permalink":"https://blog.slqwq.cn/categories/%E5%B9%B2%E8%B4%A7/"}],"tags":[{"name":"CSS","slug":"CSS","permalink":"https://blog.slqwq.cn/tags/CSS/"},{"name":"HTML","slug":"HTML","permalink":"https://blog.slqwq.cn/tags/HTML/"}],"author":"Hajeekn"},{"title":"使用 Travis CI 持续集成工具自动化部署 Hexo","slug":"db36zg","date":"2020-08-19T16:02:36.000Z","updated":"2021-01-29T03:14:27.786Z","comments":true,"path":"2020/posts/9ed5997f/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/9ed5997f/index.html","excerpt":"","text":"众所周知，Hexo 是一款免费开源的静态博客生成工具，使用它可以快速生成一个博客。但随着文章之类的东西增加，生成的速度也会逐渐变慢，如果你配置不够，那搞不好就要几小时才能生成，并且还有一个好处: 即走即编辑，就算你是手机也可以在线编辑文件，免去配置环境。 所以今天我教大家如何使用持续集成工具—-Travis CI 来部署 Hexo 创建仓库我们首先打开GitHub 选择 仓库名称可以随意 但是一定要选择 Private，不然你的博客源码就会被别人看到，到时候使用 Token 提交的各位小伙伴的仓库就不保喽 创建完成后复制你的仓库克隆地址 在 Hexo 根目录下打开终端 输入 1git add travis 复制的仓库克隆地址 创建 Travis CI 配置接着去创建一个文件:”.travis.yml” 里面输入 123456789101112131415161718192021222324252627282930language: node_jsnode_js: stablesudo: required# Travis-CI Cachingcache: directories: - node_modules# S: Build Lifecycleinstall: - npm installscript: - hexo clean &amp;&amp; hexo g - cd ./public - git init - git config user.name &quot;NAME&quot; - git config user.email &quot;EMAIL&quot; - git add . - git commit -m &quot;Update&quot; - git push --force --quiet &quot;XXX&quot; master:master - git push --force --quiet &quot;XXX&quot; master:master# after_script:branches: only: - master 其中 NAME 改为 git 用户名 EMAIL 改为邮箱 XXX 改为 GitHub/Coding 的部署地址(Token)(下文会讲到) 配置 GitHub Token写完之后去GitHub创建一个 Token 权限直接全选 然后把你 Hexo 配置 GitHub 的 SSH/HTTPS 部署地址改为 1https:&#x2F;&#x2F;你的token@github.com&#x2F;用户名&#x2F;仓库.git 配置 Coding Token(有就使用，没有就不使用)进入 Coding 企业 右上角找到个人账户设置 进入访问令牌设置 新建令牌 权限依然全选 选择完后将你 Hexo 的 codingSSH/HTTPS 部署地址改为 1https:&#x2F;&#x2F;username:password@e.coding.net&#x2F;用户名&#x2F;仓库名.git 注册 Travis首先我们要打开Travis 官网 然后注册一个账户 注册完成后会跳转到仪表盘 我们点击那个小加号 找到从跳转的页面找到我们刚才创建的仓库 可以看到没有构建接下来我们 在终端内输入 123git add --allgit commit -m &quot;这里随便&quot;git push -u travis master -f 提交完成后就刷新看看你的 Travis 吧","categories":[],"tags":[],"author":"Hajeekn"},{"title":"搭建 Hexo","slug":"vb1ze2","date":"2020-08-19T15:29:37.000Z","updated":"2021-01-29T03:14:28.034Z","comments":true,"path":"2020/posts/731e29be/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/731e29be/index.html","excerpt":"","text":"本期教大家如何搭建 Hexo 首先需要准备的东西如下: 1.电脑 2.手 3.脑袋 好了没了 安装 Node.js由于 Hexo 这款博客程序是基于 Node.js 所构建的，所以我们需要下载 Node.js 打开Node.js 官网 选择下载稳定版（LTS):12.18.3 下载并安装完成后验证是否安装好了的方法 打开终端 输入 node -v 和 npm -v 如果出现版本号 v….就说明安装成功 安装 Git使用 Hexo 呢 Git 也是必不可少的 打开Git 官网 点击 Donload 2.28.0 for Windows 即可进行下载 但由于是使用 GitHub 的 release 进行下载所以速度较慢 国内用户可以使用:淘宝镜像源进行下载，最新版本需要翻到最底下进行下载 安装好后在桌面单击右键，如果右键菜单出现 Git Bash Here 的字眼则代表安装成功 安装 Hexo新建一个文件夹，在里面右键 选择 Git Bash Here 打开 Git 终端 输入 1npm install hexo-cli -g 安装 Hexo-cli 安装好后输入 1hexo init 来初始化 Hexo，此步骤会从 GitHub 下载 Hexo 的主题、依赖文件所以时间会比较久，请耐心等待哦 o(￣ ▽ ￣)ブ如果你有条件就科学上网吧~ 当提示 INFO Start blogging with Hexo!时就安装完成了 查看安装的文件夹 发现有这些文件／文件夹： node_modules scaffolds source themes .gitignore _config.yml package.json package-lock.json 其中 node_modules 是你安装的插件存放位置，删掉了必须重新 npm i scaffolds 是你博客的模板存储位置，page.md 就是创建 page 时使用什么模板以此类推就行 source 是用来存放博客资源的，一般都是随手扔文件进去就行 .gitignore 目前用不到(除了使用 GitHub actions 等持续集成部署博客的) _config.yml 用来存放 Hexo 配置 package.json 顾名思义，就是你安装的插件名称和版本都会被存储在里面 其中我们要用到的是 themes、_config.yml 安装主题首先我们去Hexo 官方主题网站找一个好看的主题 这边用 Butterfly 为例 点击它的图片进去看看效果 个人觉得还行,目前我正在用,体验也非常好 这款主题的 GitHub 仓库为https://github.com/jerryc127/hexo-theme-butterfly 进入后在 README.md 中有 2 种安装方法 1.使用普通安装方法(git clone) 2.使用 NPM 安装(npm install hexo-theme-butterfly) 这边用 GIT 做演示 复制指令 在终端内部粘贴并回车 安装完成后根据 GitHub 仓库的 README.md 提示还需要安装 pug&amp;stylus 渲染器 指令如下: 1npm install hexo-renderer-pug hexo-renderer-stylus 安装依赖完成后我们打开_config.yml 找到 theme: 把它改为 Butterfly 保存文件,然后在终端执行 1hexo s 打开 Hexo 的本地预览工具看看效果 默认的打开地址是:http://localhost4000 用户可通过 hexo s -p 来指定访问端口 比如 2000 1080 8081 等 更改名称Hexo 安装完成后默认的名称为 Hexo，那么如何更改呢 首先打开_config.yml 找到”# Site” 更改 title subtitle description keywords author title 更改为您的博客名字 subtitle 更改为你的介绍 keywords 更改为你想要的关键字 author 更改为你自己的名字 部署到服务器一切准备完成后就可以部署了 这边演示 Coding 部署 双部署也一样 首先打开Coding 官网 如果没有账号就点击免费注册 注册完成进入你的企业 选择创建项目 项目模板使用 DevOps 名称可以随意 例如:👴 的博客等 这边用 👴 的博客示范 启用 README.md 初始化可以随意 公开源代码可以自选 配置完后点击完成创建 接下来进入持续部署-静态网站 进行实名认证 认证完成后点击立即发布静态网站 网站名称依旧随便填写 其他配置不要动 点击完成创建 这时候出现这个页面 选择设置 下滑找到自定义域名 复制用以代替 xxxx.coding-pages.com 作为网站的访问地址的 xxxx.coding-pages.com 然后打开 DNS 解析商 这边使用 dns.la 新建一个解析 解析设置: 其中主机记录可以自行设置 比如 www test cna 等 如果要直接用域名访问主机记录留空 做好解析之后回到 Coding 页面 添加刚才的域名 这边使用 test.slqwq.cn 做示范 这时候会出现这样的样子 这是在生成证书 证书状态变为正常后推荐打开强制 HTTPS 这些做完后打开_config.yml 找到 deploy 配置 里面这样填写 1234deploy: type: git repo: https://e.coding.net/企业名/项目名/仓库名.git branch: master 填写完后在终端内输入 1npm install hexo-deployer-git --save 安装 Hexo-Deployer-Git 安装完后就可以使用 1hexo clean &amp;&amp; hexo d -g 部署了 End结束了~ 感谢您的观看 更多进阶功能可前往Hexo 文档和Butterfly 主题文档查看","categories":[],"tags":[],"author":"Hajeekn"},{"title":"关于3.0.0RC2版本Valine魔改出博主、访客、小伙伴的教程","slug":"ulhohz","date":"2020-08-04T15:41:39.000Z","updated":"2021-01-29T03:14:27.838Z","comments":true,"path":"2020/posts/8f68d635/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/8f68d635/index.html","excerpt":"","text":"关于 Butterfly 最新的 3.0.0RC2 版本如何魔改出博主、访客、小伙伴的教程 首先我们进行对比 发现 3.0.0RC 的 Valine.pug 与其他版本的结构不相同 其它版: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950- let emojiMaps &#x3D; &#39;&quot;&quot;&#39;if site.data.valine - emojiMaps &#x3D; JSON.stringify(site.data.valine)script. function loadvaline () &#123; function requestSetting (from, set) &#123; var from &#x3D; from var setting &#x3D; set.split(&#39;,&#39;).filter(function(item)&#123; return from.indexOf(item) &gt; -1 &#125;); setting &#x3D; setting.length &#x3D;&#x3D; 0 ? from :setting; return setting &#125; var guestInfo &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.guest_info &#125;&#39;) var requiredFields &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;],&#39;#&#123; theme.valine.requiredFields &#125;&#39;) function initValine () &#123; window.valine &#x3D; new Valine(&#123; el:&#39;#vcomment&#39;, appId: &#39;#&#123;theme.valine.appId&#125;&#39;, appKey: &#39;#&#123;theme.valine.appKey&#125;&#39;, path: window.location.pathname, placeholder: &#39;#&#123;theme.valine.placeholder&#125;&#39;, avatar: &#39;#&#123;theme.valine.avatar&#125;&#39;, meta: guestInfo, pageSize: &#39;#&#123;theme.valine.pageSize&#125;&#39;, lang: &#39;#&#123;theme.valine.lang&#125;&#39;, recordIP: #&#123;theme.valine.recordIP&#125;, serverURLs: &#39;#&#123;theme.valine.serverURLs&#125;&#39;, emojiCDN: &#39;#&#123;theme.valine.emojiCDN&#125;&#39;, emojiMaps: !&#123;emojiMaps&#125;, enableQQ: #&#123;theme.valine.enableQQ&#125;, requiredFields: requiredFields, &#125;); &#125; if (typeof window.valine &#x3D;&#x3D;&#x3D;&#39;object&#39;) initValine() else $.getScript(&#39;!&#123;url_for(theme.CDN.valine)&#125;&#39;, initValine) &#125; if (&#39;!&#123;defaultComment&#125;&#39; &#x3D;&#x3D;&#x3D; &#39;Valine&#39; || !&#123;theme.comments.load_begin&#125;) &#123; loadvaline() &#125; else &#123; function loadOtherComment () &#123; loadvaline() &#125; &#125; RC2 版: 1234567891011121314151617181920212223242526272829303132333435363738- let emojiMaps &#x3D; &#39;&quot;&quot;&#39;if site.data.valine - emojiMaps &#x3D; JSON.stringify(site.data.valine)script. function loadValine () &#123; function initValine () &#123; window.valine &#x3D; new Valine(&#123; el: &#39;#vcomment&#39;, appId: &#39;#&#123;theme.valine.appId&#125;&#39;, appKey: &#39;#&#123;theme.valine.appKey&#125;&#39;, placeholder: &#39;#&#123;theme.valine.placeholder&#125;&#39;, avatar: &#39;#&#123;theme.valine.avatar&#125;&#39;, meta: &#39;#&#123;theme.valine.guest_info &#125;&#39;.split(&#39;,&#39;), pageSize: &#39;#&#123;theme.valine.pageSize&#125;&#39;, lang: &#39;#&#123;theme.valine.lang&#125;&#39;, recordIP: #&#123;theme.valine.recordIP&#125;, serverURLs: &#39;#&#123;theme.valine.serverURLs&#125;&#39;, emojiCDN: &#39;#&#123;theme.valine.emojiCDN&#125;&#39;, emojiMaps: !&#123;emojiMaps&#125;, enableQQ: #&#123;theme.valine.enableQQ&#125;, path: window.location.pathname, &#125;); if (&#39;#&#123;theme.valine.requiredFields&#125;&#39;) &#123; valine.config.requiredFields&#x3D; &#39;#&#123;theme.valine.requiredFields&#125;&#39;.split(&#39;,&#39;) &#125; &#125; if (typeof Valine &#x3D;&#x3D;&#x3D; &#39;function&#39;) initValine() else $.getScript(&#39;!&#123;url_for(theme.CDN.valine)&#125;&#39;, initValine) &#125; if (&#39;!&#123;theme.comments.use[0]&#125;&#39; &#x3D;&#x3D;&#x3D; &#39;Valine&#39; || !!&#123;theme.comments.lazyload&#125;) &#123; if (!&#123;theme.comments.lazyload&#125;) loadComment(document.querySelector(&#39;#vcomment&#39;),loadValine) else setTimeout(() &#x3D;&gt; loadValine(), 0) &#125; else &#123; function loadOtherComment () &#123; loadValine() &#125; &#125; 可以看到 script.下面的内容不一样 这就是不同之处了 这样也就导致部分根据 HCLonely 博客魔改 Valine 的用户无法找到魔改的地方 解决其实很简单 在 function loadValine 的前面加上 1234567891011function requestSetting (from, set) &#123; var from &#x3D; from var setting &#x3D; set.split(&#39;,&#39;).filter(function(item)&#123; return from.indexOf(item) &gt; -1 &#125;); setting &#x3D; setting.length &#x3D;&#x3D; 0 ? from :setting; return setting&#125;var guestInfo &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.guest_info &#125;&#39;)var requiredFields &#x3D; requestSetting([&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;],&#39;#&#123; theme.valine.requiredFields &#125;&#39;) 即可，然后就可以继续按照 HCLonely 的魔改教程魔改了。 完结，撒花","categories":[{"name":"魔改","slug":"魔改","permalink":"https://blog.slqwq.cn/categories/%E9%AD%94%E6%94%B9/"},{"name":"评论","slug":"魔改/评论","permalink":"https://blog.slqwq.cn/categories/%E9%AD%94%E6%94%B9/%E8%AF%84%E8%AE%BA/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/tags/Hexo/"},{"name":"魔改","slug":"魔改","permalink":"https://blog.slqwq.cn/tags/%E9%AD%94%E6%94%B9/"}],"author":"Hajeekn"},{"title":"Hexo小魔改","slug":"isa8f6","date":"2020-08-03T21:40:32.000Z","updated":"2021-01-29T03:14:27.666Z","comments":true,"path":"2020/posts/652ef4b5/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/652ef4b5/index.html","excerpt":"","text":"注:本文的所有魔改都基于 JS/配置文件魔改，并不修改源码 为了方便，本文的魔改提供一键 JS: 未压缩 JS: 1&lt;script src=&quot;https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies@V1.7/jake.js&quot;&gt;&lt;/script&gt; 普通压缩 JS: 1&lt;script src=&quot;https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies@V1.7/jake.min.js&quot;&gt;&lt;/script&gt; 加密压缩 JS: 1&lt;script src=&quot;https://cdn.jsdelivr.net/gh/slblog-github/BlogFlies@V1.7/jake.encryption.js&quot;&gt;&lt;/script&gt; 页面添加小红心在主题 source 目录下新建文件 click_show_love.js 文件内插入以下代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586!(function (e, t, a) &#123; function n() &#123; c( &quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot; ), o(), r(); &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++) d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, (d[e].scale += 0.004), (d[e].alpha -= 0.013), (d[e].el.style.cssText = &quot;left:&quot; + d[e].x + &quot;px;top:&quot; + d[e].y + &quot;px;opacity:&quot; + d[e].alpha + &quot;;transform:scale(&quot; + d[e].scale + &quot;,&quot; + d[e].scale + &quot;) rotate(45deg);background:&quot; + d[e].color + &quot;;z-index:99999&quot;)); requestAnimationFrame(r); &#125; function o() &#123; var t = &quot;function&quot; == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e); &#125;; &#125; function i(e) &#123; var a = t.createElement(&quot;div&quot;); (a.className = &quot;heart&quot;), d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s(), &#125;), t.body.appendChild(a); &#125; function c(e) &#123; var a = t.createElement(&quot;style&quot;); a.type = &quot;text/css&quot;; try &#123; a.appendChild(t.createTextNode(e)); &#125; catch (t) &#123; a.styleSheet.cssText = e; &#125; t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a); &#125; function s() &#123; return ( &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot; ); &#125; var d = []; (e.requestAnimationFrame = (function () &#123; return ( e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60); &#125; ); &#125;)()), n();&#125;)(window, document); 然后打开主题配置文件，添加引用: 1&lt;script type=&quot;text/javascript&quot; src=&quot;/click_show_love.js&quot;&gt;&lt;/script&gt; 添加鼠标点击字体在主题 source 目录下新建文件 click_show_text.js 文件内部添加如下代码: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647var a_idx = 0;jQuery(document).ready(function ($) &#123; $(&quot;body&quot;).click(function (e) &#123; var a = new Array( &quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;, &quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot; ); var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css(&#123; &quot;z-index&quot;: 5, top: y - 20, left: x, position: &quot;absolute&quot;, &quot;font-weight&quot;: &quot;bold&quot;, color: &quot;#FF0000&quot;, &#125;); $(&quot;body&quot;).append($i); $i.animate( &#123; top: y - 180, opacity: 0, &#125;, 3000, function () &#123; $i.remove(); &#125; ); &#125;); setTimeout(&quot;delay()&quot;, 2000);&#125;);function delay() &#123; $(&quot;.buryit&quot;).removeAttr(&quot;onclick&quot;);&#125; 其中富强”, “民主”, “文明”, “和谐”, “自由”, “平等”, “公正”, “法治”, “爱国”, “敬业”, “诚信”, “友善”可自己更改 然后在主题配置文件添加引用: 1&lt;script type=&quot;text/javascript&quot; src=&quot;/click_show_text.js&quot;&gt;&lt;/script&gt; 添加鼠标点击烟花爆炸效果在主题 source 目录下新建文件 fireworks.js，内部写入如下代码: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266&quot;use strict&quot;;function updateCoords(e) &#123; (pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left), (pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top);&#125;function setParticuleDirection(e) &#123; var t = (anime.random(0, 360) * Math.PI) / 180, a = anime.random(50, 180), n = [-1, 1][anime.random(0, 1)] * a; return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;;&#125;function createParticule(e, t) &#123; var a = &#123;&#125;; return ( (a.x = e), (a.y = t), (a.color = colors[anime.random(0, colors.length - 1)]), (a.radius = anime.random(16, 32)), (a.endPos = setParticuleDirection(a)), (a.draw = function () &#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.fillStyle = a.color), ctx.fill(); &#125;), a );&#125;function createCircle(e, t) &#123; var a = &#123;&#125;; return ( (a.x = e), (a.y = t), (a.color = &quot;#F00&quot;), (a.radius = 0.1), (a.alpha = 0.5), (a.lineWidth = 6), (a.draw = function () &#123; (ctx.globalAlpha = a.alpha), ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.lineWidth = a.lineWidth), (ctx.strokeStyle = a.color), ctx.stroke(), (ctx.globalAlpha = 1); &#125;), a );&#125;function renderParticule(e) &#123; for (var t = 0; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw(); &#125;&#125;function animateParticules(e, t) &#123; for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)); &#125; anime .timeline() .add(&#123; targets: n, x: function (e) &#123; return e.endPos.x; &#125;, y: function (e) &#123; return e.endPos.y; &#125;, radius: 0.1, duration: anime.random(1200, 1800), easing: &quot;easeOutExpo&quot;, update: renderParticule, &#125;) .add(&#123; targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: &#123; value: 0, easing: &quot;linear&quot;, duration: anime.random(600, 800) &#125;, duration: anime.random(1200, 1800), easing: &quot;easeOutExpo&quot;, update: renderParticule, offset: 0, &#125;);&#125;function debounce(e, t) &#123; var a; return function () &#123; var n = this, i = arguments; clearTimeout(a), (a = setTimeout(function () &#123; e.apply(n, i); &#125;, t)); &#125;;&#125;var canvasEl = document.querySelector(&quot;.fireworks&quot;);if (canvasEl) &#123; var ctx = canvasEl.getContext(&quot;2d&quot;), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = &quot;mousedown&quot;, colors = [&quot;#FF1461&quot;, &quot;#18FF92&quot;, &quot;#5A87FF&quot;, &quot;#FBF38C&quot;], setCanvasSize = debounce(function () &#123; (canvasEl.width = 2 * window.innerWidth), (canvasEl.height = 2 * window.innerHeight), (canvasEl.style.width = window.innerWidth + &quot;px&quot;), (canvasEl.style.height = window.innerHeight + &quot;px&quot;), canvasEl.getContext(&quot;2d&quot;).scale(2, 2); &#125;, 500), render = anime(&#123; duration: 1 / 0, update: function () &#123; ctx.clearRect(0, 0, canvasEl.width, canvasEl.height); &#125;, &#125;); document.addEventListener( tap, function (e) &#123; &quot;sidebar&quot; !== e.target.id &amp;&amp; &quot;toggle-sidebar&quot; !== e.target.id &amp;&amp; &quot;A&quot; !== e.target.nodeName &amp;&amp; &quot;IMG&quot; !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)); &#125;, !1 ), setCanvasSize(), window.addEventListener(&quot;resize&quot;, setCanvasSize, !1);&#125;(&quot;use strict&quot;);function updateCoords(e) &#123; (pointerX = (e.clientX || e.touches[0].clientX) - canvasEl.getBoundingClientRect().left), (pointerY = e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top);&#125;function setParticuleDirection(e) &#123; var t = (anime.random(0, 360) * Math.PI) / 180, a = anime.random(50, 180), n = [-1, 1][anime.random(0, 1)] * a; return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;;&#125;function createParticule(e, t) &#123; var a = &#123;&#125;; return ( (a.x = e), (a.y = t), (a.color = colors[anime.random(0, colors.length - 1)]), (a.radius = anime.random(16, 32)), (a.endPos = setParticuleDirection(a)), (a.draw = function () &#123; ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.fillStyle = a.color), ctx.fill(); &#125;), a );&#125;function createCircle(e, t) &#123; var a = &#123;&#125;; return ( (a.x = e), (a.y = t), (a.color = &quot;#F00&quot;), (a.radius = 0.1), (a.alpha = 0.5), (a.lineWidth = 6), (a.draw = function () &#123; (ctx.globalAlpha = a.alpha), ctx.beginPath(), ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0), (ctx.lineWidth = a.lineWidth), (ctx.strokeStyle = a.color), ctx.stroke(), (ctx.globalAlpha = 1); &#125;), a );&#125;function renderParticule(e) &#123; for (var t = 0; t &lt; e.animatables.length; t++) &#123; e.animatables[t].target.draw(); &#125;&#125;function animateParticules(e, t) &#123; for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123; n.push(createParticule(e, t)); &#125; anime .timeline() .add(&#123; targets: n, x: function (e) &#123; return e.endPos.x; &#125;, y: function (e) &#123; return e.endPos.y; &#125;, radius: 0.1, duration: anime.random(1200, 1800), easing: &quot;easeOutExpo&quot;, update: renderParticule, &#125;) .add(&#123; targets: a, radius: anime.random(80, 160), lineWidth: 0, alpha: &#123; value: 0, easing: &quot;linear&quot;, duration: anime.random(600, 800) &#125;, duration: anime.random(1200, 1800), easing: &quot;easeOutExpo&quot;, update: renderParticule, offset: 0, &#125;);&#125;function debounce(e, t) &#123; var a; return function () &#123; var n = this, i = arguments; clearTimeout(a), (a = setTimeout(function () &#123; e.apply(n, i); &#125;, t)); &#125;;&#125;var canvasEl = document.querySelector(&quot;.fireworks&quot;);if (canvasEl) &#123; var ctx = canvasEl.getContext(&quot;2d&quot;), numberOfParticules = 30, pointerX = 0, pointerY = 0, tap = &quot;mousedown&quot;, colors = [&quot;#FF1461&quot;, &quot;#18FF92&quot;, &quot;#5A87FF&quot;, &quot;#FBF38C&quot;], setCanvasSize = debounce(function () &#123; (canvasEl.width = 2 * window.innerWidth), (canvasEl.height = 2 * window.innerHeight), (canvasEl.style.width = window.innerWidth + &quot;px&quot;), (canvasEl.style.height = window.innerHeight + &quot;px&quot;), canvasEl.getContext(&quot;2d&quot;).scale(2, 2); &#125;, 500), render = anime(&#123; duration: 1 / 0, update: function () &#123; ctx.clearRect(0, 0, canvasEl.width, canvasEl.height); &#125;, &#125;); document.addEventListener( tap, function (e) &#123; &quot;sidebar&quot; !== e.target.id &amp;&amp; &quot;toggle-sidebar&quot; !== e.target.id &amp;&amp; &quot;A&quot; !== e.target.nodeName &amp;&amp; &quot;IMG&quot; !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY)); &#125;, !1 ), setCanvasSize(), window.addEventListener(&quot;resize&quot;, setCanvasSize, !1);&#125; 然后打开主题配置文件添加引用: 123456789&lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;&gt;&lt;/canvas&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/fireworks.js&quot;&gt;&lt;/script&gt; 添加彩色打字效果在你要添加的地方写入以下代码: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495&lt;div id=&quot;binft&quot;&gt;&lt;/div&gt;&lt;script&gt; var binft = function (r) &#123; function t() &#123; return b[Math.floor(Math.random() * b.length)]; &#125; function e() &#123; return String.fromCharCode(94 * Math.random() + 33); &#125; function n(r) &#123; for (var n = document.createDocumentFragment(), i = 0; r &gt; i; i++) &#123; var l = document.createElement(&quot;span&quot;); (l.textContent = e()), (l.style.color = t()), n.appendChild(l); &#125; return n; &#125; function i() &#123; var t = o[c.skillI]; c.step ? c.step-- : ((c.step = g), c.prefixP &lt; l.length ? (c.prefixP &gt;= 0 &amp;&amp; (c.text += l[c.prefixP]), c.prefixP++) : &quot;forward&quot; === c.direction ? c.skillP &lt; t.length ? ((c.text += t[c.skillP]), c.skillP++) : c.delay ? c.delay-- : ((c.direction = &quot;backward&quot;), (c.delay = a)) : c.skillP &gt; 0 ? ((c.text = c.text.slice(0, -1)), c.skillP--) : ((c.skillI = (c.skillI + 1) % o.length), (c.direction = &quot;forward&quot;))), (r.textContent = c.text), r.appendChild( n( c.prefixP &lt; l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP) ) ), setTimeout(i, d); &#125; var l = &quot;&quot;, o = [ &quot;青青陵上柏，磊磊涧中石。&quot;, &quot;人生天地间，忽如远行客。&quot;, &quot;斗酒相娱乐，聊厚不为薄。&quot;, &quot;驱车策驽马，游戏宛与洛。&quot;, &quot;洛中何郁郁，冠带自相索。&quot;, &quot;长衢罗夹巷，王侯多第宅。&quot;, &quot;两宫遥相望，双阙百余尺。&quot;, &quot;极宴娱心意，戚戚何所迫？&quot;, ].map(function (r) &#123; return r + &quot;&quot;; &#125;), a = 2, g = 1, s = 5, d = 75, b = [ &quot;rgb(110,64,170)&quot;, &quot;rgb(150,61,179)&quot;, &quot;rgb(191,60,175)&quot;, &quot;rgb(228,65,157)&quot;, &quot;rgb(254,75,131)&quot;, &quot;rgb(255,94,99)&quot;, &quot;rgb(255,120,71)&quot;, &quot;rgb(251,150,51)&quot;, &quot;rgb(226,183,47)&quot;, &quot;rgb(198,214,60)&quot;, &quot;rgb(175,240,91)&quot;, &quot;rgb(127,246,88)&quot;, &quot;rgb(82,246,103)&quot;, &quot;rgb(48,239,130)&quot;, &quot;rgb(29,223,163)&quot;, &quot;rgb(26,199,194)&quot;, &quot;rgb(35,171,216)&quot;, &quot;rgb(54,140,225)&quot;, &quot;rgb(76,110,219)&quot;, &quot;rgb(96,84,200)&quot;, ], c = &#123; text: &quot;&quot;, prefixP: -s, skillI: 0, skillP: 0, direction: &quot;forward&quot;, delay: a, step: g, &#125;; i(); &#125;; binft(document.getElementById(&quot;binft&quot;));&lt;/script&gt; 其中青青陵上柏，磊磊涧中石。”, “人生天地间，忽如远行客。”,”斗酒相娱乐，聊厚不为薄。”, “驱车策驽马，游戏宛与洛。”,”洛中何郁郁，冠带自相索。”,”长衢罗夹巷，王侯多第宅。”,”两宫遥相望，双阙百余尺。”,”极宴娱心意，戚戚何所迫？和 color 可自己修改 浏览器标题恶搞在主题 source 目录下新建 title.js，文件内写入: 123456var OriginTitle = document.title; var titleTime;document.addEventListener(&#x27;visibilitychange&#x27;, function () &#123; if (document.hidden)&#123; $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;, &quot;/funny.ico&quot;); document.title = &#x27;╭(°A°`)╮页面崩溃啦 ~&#x27;; clearTimeout(titleTime); &#125; else &#123; $(&#x27;[rel=&quot;icon&quot;]&#x27;).attr(&#x27;href&#x27;,&quot;/favicon.ico&quot;); document.title = &#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#x27; + OriginTitle; titleTime= setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125; &#125;); 其中 funny.ico 是用户切换到其他标签后的图标，favicon 是正常图标 然后在主题配置文件内添加引用 1&lt;script type=&quot;text/javascript&quot; src=&quot;/title.js&quot;&gt;&lt;/script&gt; 添加动态线条效果主题配置文件内插入: 12345678&lt;script type=&quot;text/javascript&quot; color=&quot;220,220,220&quot; opacity=&quot;0.7&quot; zIndex=&quot;-2&quot; count=&quot;200&quot; src=&quot;https://cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt; 网站添加雪花飘落效果在主题 source 目录下新建文件 snow.js 文件内写入以下代码: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253(function ($) &#123; $.fn.snow = function (options) &#123; var $flake = $(&#x27;&lt;div id=&quot;snowbox&quot; /&gt;&#x27;) .css(&#123; position: &quot;absolute&quot;, &quot;z-index&quot;: &quot;9999&quot;, top: &quot;-50px&quot; &#125;) .html(&quot;&amp;#10052;&quot;), documentHeight = $(document).height(), documentWidth = $(document).width(), defaults = &#123; minSize: 10, maxSize: 20, newOn: 1000, flakeColor: &quot;#AFDAEF&quot; /* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */, &#125;, options = $.extend(&#123;&#125;, defaults, options); var interval = setInterval(function () &#123; var startPositionLeft = Math.random() * documentWidth - 100, startOpacity = 0.5 + Math.random(), sizeFlake = options.minSize + Math.random() * options.maxSize, endPositionTop = documentHeight - 200, endPositionLeft = startPositionLeft - 500 + Math.random() * 500, durationFall = documentHeight * 10 + Math.random() * 5000; $flake .clone() .appendTo(&quot;body&quot;) .css(&#123; left: startPositionLeft, opacity: startOpacity, &quot;font-size&quot;: sizeFlake, color: options.flakeColor, &#125;) .animate( &#123; top: endPositionTop, left: endPositionLeft, opacity: 0.2, &#125;, durationFall, &quot;linear&quot;, function () &#123; $(this).remove(); &#125; ); &#125;, options.newOn); &#125;;&#125;)(jQuery);$(function () &#123; $.fn.snow(&#123; minSize: 5 /* 定义雪花最小尺寸 */, maxSize: 50 /* 定义雪花最大尺寸 */, newOn: 300 /* 定义密集程度，数字越小越密集 */, &#125;);&#125;); 然后添加引用 1&lt;script type=&quot;text/javascript&quot; src=&quot;/snow.js&quot;&gt;&lt;/script&gt; 如果没有效果请在 JS 前引用 Jquery 12345678&lt;script type=&quot;text/javascript&quot; src=&quot;https://libs.baidu.com/jquery/1.8.3/jquery.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://libs.baidu.com/jquery/1.8.3/jquery.min.js&quot;&gt;&lt;/script&gt; 网站添加飘动的彩带主题配置文件里添加引用: 1234&lt;script src=&quot;https://g.joyinshare.com/hc/piao.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt; 添加代码雨特效新建 DigitalRain.js 文件 写入以下代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869window.onload = function () &#123; //获取画布对象 var canvas = document.getElementById(&quot;canvas&quot;); //获取画布的上下文 var context = canvas.getContext(&quot;2d&quot;); var s = window.screen; var W = (canvas.width = s.width); var H = canvas.height; //获取浏览器屏幕的宽度和高度 //var W = window.innerWidth; //var H = window.innerHeight; //设置canvas的宽度和高度 canvas.width = W; canvas.height = H; //每个文字的字体大小 var fontSize = 12; //计算列 var colunms = Math.floor(W / fontSize); //记录每列文字的y轴坐标 var drops = []; //给每一个文字初始化一个起始点的位置 for (var i = 0; i &lt; colunms; i++) &#123; drops.push(0); &#125; //运动的文字 var str = &quot;WELCOME TO WWW.ITRHX.COM&quot;; //4:fillText(str,x,y);原理就是去更改y的坐标位置 //绘画的函数 function draw() &#123; context.fillStyle = &quot;rgba(238,238,238,.08)&quot;; //遮盖层 context.fillRect(0, 0, W, H); //给字体设置样式 context.font = &quot;600 &quot; + fontSize + &quot;px Georgia&quot;; //给字体添加颜色 context.fillStyle = [ &quot;#33B5E5&quot;, &quot;#0099CC&quot;, &quot;#AA66CC&quot;, &quot;#9933CC&quot;, &quot;#99CC00&quot;, &quot;#669900&quot;, &quot;#FFBB33&quot;, &quot;#FF8800&quot;, &quot;#FF4444&quot;, &quot;#CC0000&quot;, ][parseInt(Math.random() * 10)]; //randColor();可以rgb,hsl, 标准色，十六进制颜色 //写入画布中 for (var i = 0; i &lt; colunms; i++) &#123; var index = Math.floor(Math.random() * str.length); var x = i * fontSize; var y = drops[i] * fontSize; context.fillText(str[index], x, y); //如果要改变时间，肯定就是改变每次他的起点 if (y &gt;= canvas.height &amp;&amp; Math.random() &gt; 0.99) &#123; drops[i] = 0; &#125; drops[i]++; &#125; &#125; function randColor() &#123; //随机颜色 var r = Math.floor(Math.random() * 256); var g = Math.floor(Math.random() * 256); var b = Math.floor(Math.random() * 256); return &quot;rgb(&quot; + r + &quot;,&quot; + g + &quot;,&quot; + b + &quot;)&quot;; &#125; draw(); setInterval(draw, 35);&#125;; 然后添加引用 12&lt;canvas id=&quot;canvas&quot; width=&quot;1440&quot; height=&quot;900&quot;&gt;&lt;/canvas&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/DigitalRain.js&quot;&gt;&lt;/script&gt; End","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/tags/Hexo/"},{"name":"魔改","slug":"魔改","permalink":"https://blog.slqwq.cn/tags/%E9%AD%94%E6%94%B9/"}],"author":"Hajeekn"},{"title":"Butterfly实现Aplayer+Meting不断歌","slug":"gs6rd0","date":"2020-07-18T15:19:10.000Z","updated":"2021-01-29T03:14:28.170Z","comments":true,"path":"2020/posts/d18e7002/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/d18e7002/index.html","excerpt":"","text":"最近有人问我，我博客上的那个播放器是怎么弄的 放图: 其实要实现我博客的这个 Meting+Aplayer 很简单 首先你需要更新到 Butterfly 的 Pjax 分支 然后去 themes/Butterfly/source 里新建个 JS，名字随意 接着编辑这个文件 里面填写 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071document.writeln( &quot;&lt;script src=&#x27;https://cdn.jsdelivr.net/npm/pjax/pjax.min.js&#x27;&gt;&lt;/script&gt;&quot;);document.writeln(&quot;&lt;script&gt;var pjax = new Pjax(&#123;&quot;);document.writeln(&quot; selectors: [&quot;);document.writeln(&quot; &#x27;title&#x27;,&quot;);document.writeln(&quot; &#x27;meta[name=description]&#x27;,&quot;);document.writeln(&quot; &#x27;#config_change&#x27;,&quot;);document.writeln(&quot; &#x27;#body-wrap&#x27;,&quot;);document.writeln(&quot; &#x27;#rightside&#x27;,&quot;);document.writeln(&quot; &#x27;.js-pjax&#x27;&quot;);document.writeln(&quot; ],&quot;);document.writeln(&quot; cacheBust: false,&quot;);document.writeln(&quot;&#125;)&quot;);document.writeln(&quot;&quot;);document.writeln(&quot;document.addEventListener(&#x27;pjax:complete&#x27;, function () &#123;&quot;);document.writeln(&quot; refreshFn()&quot;);document.writeln(&quot;&quot;);document.writeln(&quot; $(&#x27;script[data-pjax]&#x27;).each(function () &#123;&quot;);document.writeln(&quot; $(this).parent().append($(this).remove())&quot;);document.writeln(&quot; &#125;)&quot;);document.writeln(&quot;&quot;);document.writeln(&quot; GLOBAL_CONFIG.islazyload &amp;&amp; lazyLoadInstance.update()&quot;);document.writeln(&quot;&quot;);document.writeln(&quot; typeof chatBtnFn === &#x27;function&#x27; &amp;&amp; chatBtnFn()&quot;);document.writeln(&quot; typeof panguInit === &#x27;function&#x27; &amp;&amp; panguInit()&quot;);document.writeln(&quot;&quot;);document.writeln(&quot; if (typeof gtag === &#x27;function&#x27;) &#123;&quot;);document.writeln( &quot; gtag(&#x27;config&#x27;, &#x27;ca-pub-1197128104711052&#x27;, &#123;&#x27;page_path&#x27;: window.location.pathname&#125;);&quot;);document.writeln(&quot; &#125;&quot;);document.writeln(&quot;&quot;);document.writeln(&quot; if (document.getElementsByClassName(&#x27;aplayer&#x27;).length)&#123;&quot;);document.writeln(&quot; loadMeting()&quot;);document.writeln(&quot; &#125;&quot;);document.writeln(&quot;&#125;)&quot;);document.writeln(&quot;&quot;);document.writeln(&quot;document.addEventListener(&#x27;pjax:send&#x27;, function () &#123;&quot;);document.writeln(&quot; if (window.aplayers) &#123;&quot;);document.writeln(&quot; for (let i = 0; i &lt; window.aplayers.length; i++) &#123;&quot;);document.writeln(&quot; if (!window.aplayers[i].options.fixed) &#123;&quot;);document.writeln(&quot; window.aplayers[i].destroy()&quot;);document.writeln(&quot; &#125;&quot;);document.writeln(&quot; &#125;&quot;);document.writeln(&quot; &#125;&quot;);document.writeln(&quot;&quot;);document.writeln(&quot; $(window).off(&#x27;scroll&#x27;)&quot;);document.writeln(&quot;&quot;);document.writeln(&quot; //reset readmode&quot;);document.writeln( &quot; $(&#x27;body&#x27;).hasClass(&#x27;read-mode&#x27;) &amp;&amp; $(&#x27;body&#x27;).removeClass(&#x27;read-mode&#x27;)&quot;);document.writeln(&quot;&quot;);document.writeln(&quot; //reset font-size&quot;);document.writeln( &quot; $(&#x27;body&#x27;).css(&#x27;font-size&#x27;) !== originFontSize &amp;&amp; $(&#x27;body&#x27;).css(&#x27;font-size&#x27;, parseFloat(originFontSize))&quot;);document.writeln(&quot;&#125;)&lt;/script&gt;&quot;);document.writeln( &quot;&lt;link rel=&#x27;stylesheet&#x27; href=&#x27;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#x27;&gt;&quot;);document.writeln( &quot;&lt;script src=&#x27;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#x27;&gt;&lt;/script&gt;&quot;);document.writeln( &quot;&lt;script src=&#x27;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#x27;&gt;&lt;/script&gt;&quot;);document.writeln( &quot;&lt;meting-js server=&#x27;netease&#x27; type=&#x27;playlist&#x27; id=&#x27;2187995420&#x27; fixed=&#x27;true&#x27;&gt;&lt;/meting-js&gt;&quot;); 别忘记把 id 那里的数字改成你自己的歌单 解析: server=’\\netease’ -&gt;平台名称。netease：网易；tencent：腾讯；xiami：虾米；kugou：酷狗；baidu：百度 type=’\\playlist\\‘ -&gt;类型。playlist：歌单；song：单曲；专辑：album；关键词：search；歌手：artist id=’\\XXXX’ -&gt;音乐页面链接上的 id 号 更多参数请参考 MetingGitHub 添加好 js 后还需要引用 打开 Hexo 根目录/source/_data 的 butterfly.yml 往下滑,找到 Inject 的 bottom 在 bottom 里面添加 1- &lt;script src=&quot;/刚才创建的JS的名字.js&quot;&gt;&lt;/script&gt; 接着在你的终端里输入 hexo clean &amp;&amp; hexo s 然后就会看到播放器了 JS 解剖1-51 为 Pjax 的 Lancher Command 52-55 为 Aplayer+MetingJS 的 Core Command 实现 Aplayer+MettingJS+Pjax 的第二种方法(来自群友小康大佬~)1.把主题配置的 aplayer: asset_inject 改为 false 然后将主题的 aplayerInject 改为 true","categories":[{"name":"Pjax系列","slug":"Pjax系列","permalink":"https://blog.slqwq.cn/categories/Pjax%E7%B3%BB%E5%88%97/"},{"name":"播放器","slug":"Pjax系列/播放器","permalink":"https://blog.slqwq.cn/categories/Pjax%E7%B3%BB%E5%88%97/%E6%92%AD%E6%94%BE%E5%99%A8/"},{"name":"Javascript","slug":"Pjax系列/播放器/Javascript","permalink":"https://blog.slqwq.cn/categories/Pjax%E7%B3%BB%E5%88%97/%E6%92%AD%E6%94%BE%E5%99%A8/Javascript/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/tags/Hexo/"},{"name":"Aplayer","slug":"Aplayer","permalink":"https://blog.slqwq.cn/tags/Aplayer/"},{"name":"Meting","slug":"Meting","permalink":"https://blog.slqwq.cn/tags/Meting/"}],"author":"Hajeekn"},{"title":"使用好的 CDN 让你的网站获得更快的加载速度","slug":"addq7f","date":"2020-06-19T17:51:42.000Z","updated":"2021-01-29T03:14:27.734Z","comments":true,"path":"2020/posts/62a00332/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/62a00332/index.html","excerpt":"","text":"本文参加又拍云技术征文活动! Cover 来自impdx 大家好，本文章我来教大家如何使用好的 CDN 让你的网站获得更快的速度 了解什么是 CDNCDN 的全称是 Content Delivery Network，即内容分发网络。CDN 是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN 的关键技术主要有内容存储和分发技术。 简单来说就是将你原站的服务分发给 CDN 的各个机器，然后当你访问套上 CDN 的网站时将你 301 到最近的服务 CDN 的作用CDN 主要用来: 1.下载 2.音视频点播 3.加速网站 4.存储文件 如何使用本期教程使用又拍云 废话不多说，进入正题 注册账号第一步当然是注册账号啦 进入又拍云官网 点击右上角的注册有礼在接下来的页面里面会出现两个选项 1.申请个人账号 2.申请企业账号 对于我们当然是选个人帐号啦 然后注册你们应该都懂，这边就不多说啦 配置 CDN注册好了当然要配置 CDN 拉 在这之前，我们需要实名~ 我们需要进入实名页面 接下来点击实名认证 然后上传自己的手持身份证照 或者使用支付宝实名 等待又小拍审核通过后就能开始配置拉 点击云产品-CDN 看到右上角大大的创建服务了吗 点他，点他，点他~ 接下来你会被传送到创建 CDN 服务页面 根据他的介绍来填写 注意:加速域名需备案哦 创建完成后看到你的加速域名后面有个拒绝了嘛，看到了就是你没备案哦 这时候 CDN 已经搞 ♂ 好了 接下来就访问看看吧 如果出现 handshake failed 错误就是因为你的原站使用了强制 HTTPS 而 CDN 没配置 HTTPS 这个亚子去又拍云申请一个免费的 SSL 就行了","categories":[],"tags":[],"author":"Hajeekn"},{"title":"More-Beautiful-Div-Framework","slug":"ve1fz1","date":"2020-06-14T12:32:18.000Z","updated":"2021-01-29T03:14:27.698Z","comments":true,"path":"2020/posts/7d8b55fe/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/7d8b55fe/index.html","excerpt":"","text":"123- &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;more-beautiful-div-framework&#x2F;more-beautiful-div-framework.min.css&quot;&gt;- &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;@fortawesome&#x2F;fontawesome-free&#x2F;css&#x2F;all.min.css&quot;&gt;- &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;More-Beautiful-Div-Framework&#x2F;More-Beautiful-Div-Framework-CDN&#x2F;yl-if.css&quot;&gt; 网页引用方法: 网页 head 处添加 123&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;more-beautiful-div-framework&#x2F;more-beautiful-div-framework.min.css&quot;&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;@fortawesome&#x2F;fontawesome-free&#x2F;css&#x2F;all.min.css&quot;&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;More-Beautiful-Div-Framework&#x2F;More-Beautiful-Div-Framework-CDN&#x2F;yl-if.css&quot;&gt; 文章内引用方法: 123456789&lt;div class&#x3D;&quot;tip lite&quot;&gt;&lt;p&gt;文字&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip ban&quot;&gt;&lt;p&gt;文字&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip home&quot;&gt;&lt;p&gt;文字&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip impo&quot;&gt;&lt;p&gt;魔改标签4&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip ref&quot;&gt;&lt;p&gt;魔改标签5&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip set&quot;&gt;&lt;p&gt;魔改标签6&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip key&quot;&gt;&lt;p&gt;魔改标签7&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip bell&quot;&gt;&lt;p&gt;魔改标签8&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip qq&quot;&gt;&lt;p&gt;魔改标签9&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt; 例子: 魔改标签 1 魔改标签 2 魔改标签 3 魔改标签 4 魔改标签 5 魔改标签 6 魔改标签 7 魔改标签 8 魔改标签 9 目前此拓展会持续更新 依赖依赖如下: FontAwesome 5 / 4(除 QQ 样式以外的其他样式依赖项) iconfont(QQ 样式的依赖项) 更新日志:2020/8/36 18:30 版本号 V1.9 更换部分标签引用名称 2020/6/22 14:05 版本号 V1.8 将 QQ 样式的图标替换为 iconfont 图标 2020/6/17 20:29 版本号 V1.7(跳过 1.6) 添加压缩过的 css(more-beautiful-div-framework.min.css) 提供 jsdelivr 的 CSS 地址 兼容 V5 添加 QQ 样式 17:52 版本号 V1.5 取消 pool.css 依赖 将 jsdelivr 地址换为 unpkg 地址 2020/6/15 14:55 版本号 V1.4 添加 socd 样式 2020/6/14 18:20 版本号 V1.3 添加 ref、ffa、key 样式 14:45 版本号 V1.2 添加 important 样式 12:30 版本号 V1.1 添加 Home 样式 12:00 版本号 V1.0 添加 Wtgo、ban2 种样式 10:00 开启此项目","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/tags/Hexo/"}],"author":"Hajeekn"},{"title":"白嫖超好用的CDN(GitHub+Jsdelivr)","slug":"fo70zy","date":"2020-05-28T11:03:12.000Z","updated":"2021-01-29T03:14:28.050Z","comments":true,"path":"2020/posts/d6df3a18/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/d6df3a18/index.html","excerpt":"","text":"hi，各位好。 今天我来教大家白嫖 CDN 创建仓库登陆 GitHub 新建一个仓库，名字随意 一定要是公开! 生成 Tokens打开 https://github.com/settings/tokens 在页面内选择 Generate new token 输入密码后进行下一步 Note 为你的名字 权限请选择 repo 选择好后点击 Generate token 在跳转的页面里面会有一串代码 比如 7513764b740b88c40afc9aa6980989e42axxxxx 这串代码保存下来 接下来会用 下载进入 https://github.com/Molunerfinn/PicGo/releases 选择一个版本(这里以 2.2.2 演示) 下载完成后双击打开进行安装 PicGo 主页面安装好后进去 PicGo 会出现这个界面 设置图床选择图床设置 找到 GitHub 图床 这些都设置完后进入上传区 将最上面的 改为 GitHub 图床 接下来就可以上传一个文件测试了 我来放一个测试图 可以看到加载的速度非常快 如果有问题请在下方留言!","categories":[],"tags":[],"author":"Hajeekn"},{"title":"博客效果展示","slug":"co1wwf","date":"2020-05-27T20:39:32.000Z","updated":"2021-01-29T03:14:27.934Z","comments":true,"path":"2020/posts/e8563c5f/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/e8563c5f/index.html","excerpt":"","text":"下面上效果展示 错误标签 警告标签 成功标签 默认标签 测 a Hexo 开始背书 海内存知己‚天涯若比邻 初级标签 Codeblock in note 成功标签 Info Header 信息标签 Warning Header 警告标签 Danger Header 危险标签 No icon note note info no-icon 无图标标签 123代码框标签，效果和&#96;&#96;一样 黄色色块 左边框红色块级 纯文本测试 支持简单的 markdown 语法 支持自定义颜色 绿色 + 默认选中 黄色 + 默认选中 青色 + 默认选中 蓝色 + 默认选中 增加 减少 叉 测试 测试一下 看看答案 我是答案 这是黑体字 这是微软雅黑 这是华文彩云 三号蓝色黑体 四号青色字 五号灰色字 点击下载 点击下载 点击下载 点击下载 点击下载 点击下载 点击下载 点击下载 看看更新吧 如何参与项目[http://localhost:4000/contributors/](http://localhost:4000/contributors/) 碎碎念 2020-08-06 连接测试 今天是 2020-08-06 2020-08-05 连接测试 今天是 2020-08-05 查看图片测试 查看默认打开的折叠框 这是一个默认打开的折叠框。 查看代码测试 查看列表测试 hahahehe 查看嵌套测试 查看嵌套测试2 查看嵌套测试3 hahaha","categories":[],"tags":[],"author":"Hajeekn"},{"title":"如何在自己网站上添加pace.js进度条","slug":"pmsuyr","date":"2020-05-16T14:07:44.000Z","updated":"2021-01-29T03:14:27.914Z","comments":true,"path":"2020/posts/2c805e6b/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/2c805e6b/index.html","excerpt":"","text":"相信各位站长们不喜欢网站普普通通的加载方式，那么今天 SL 就带来如何给自己网站添加 pace.js 进度条的教程 首先进入https://github.hubspot.com/pace/ 看到最上面蓝色的字(Star on GitHubDownload ZIP（v 版本号) 点击一下后面的 DownloadZIP 下载下来后可能是个压缩包 双击打开 打开后有个文件夹，如果没有返回上一个目录 将文件夹解压到你 Hexo 目录\\themes\\你主题\\source\\js 目录下 然后进入主题文件夹找到 layout 文件夹进入 进入之后找到_partial 找到 head.XXX 双击打开 接下来在内部添加 12&lt;script src&#x3D;&quot;&#x2F;js&#x2F;pace-1.0.2&#x2F;pace.min.js&#39;&gt;&quot;&lt;&#x2F;script&gt;&lt;ink href&#x3D;&quot;&#x2F;js&#x2F;pace-1.0.2&#x2F;themes&#x2F;blue&#x2F;pace-theme-loading-bar.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt; 如果嫌弃样式不好看可以去https://github.hubspot.com/pace/docs/welcome/ 找个自己喜欢的 记住名字，去你解压 PACE 的目录下找到 themes 进入后找到你喜欢的颜色 然后在颜色文件夹找到你喜欢的样式 复制名称 替换本博客的 pace-theme-loading-bar 后缀不用换","categories":[],"tags":[],"author":"Hajeekn"},{"title":"如何创建自己的Office E5","slug":"bzkab1","date":"2020-05-14T17:38:44.000Z","updated":"2021-01-29T03:14:27.978Z","comments":true,"path":"2020/posts/143f7edb/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/143f7edb/index.html","excerpt":"","text":"注：本文转载自 MBRjun 的学习记录 https://blog.mbrjun.cn/archives/10/ 教程首先点击这里，然后点击 Join Now 然后登录，似乎个人和工作教育账户都可以，也可以 Github 登录 小编（营销号内味）用 Windows Hello 登录给大家演示 登录你的账户 填写信息，国家地区填你所在的（本项需如实填写，有验证，并且决定后续的绑定），公司可以随便填，下面两个必须都勾选才能成功白嫖，然后下一步 下面的信息如图填写，自己填写没白嫖到 Micorosft365 别找我第一组勾选个人 下面一组全部勾选，然后下一步 点击关闭即可 点击设置订阅 设置你的账户和密码 不用多说了吧 国家和地区决定了电话验证码地区 手机上接收下验证码 等待分配资源 分配完成 到这里你已经成功的白嫖到了 Microsoft 365，点击查看资源开始使用 续期方法： 使用 Oneindex 上传文件 前提：OneDrive 必须分配完成","categories":[],"tags":[],"author":"Hajeekn"},{"title":"如何白嫖免费域名","slug":"qg0e60","date":"2020-05-01T09:28:38.000Z","updated":"2021-01-29T03:14:27.958Z","comments":true,"path":"2020/posts/dcfdf76e/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/dcfdf76e/index.html","excerpt":"","text":"今天小编(划掉)教大家如何白嫖免费域名啦~ 第一步:下载本站提供的集装箱插件，拖动到 Chrome 里。 低速下载(走服务器流量)：https://www.slblog.ga/集装箱.crx 觉得这个下载慢可以试试高速下载哦 高速下载(走 CF 高级版 CDN)：https://cdn.slblog.ga/集装箱.crx 如果无法安装请打开开发者模式并将 crx 解压后选择加载一解压的扩展程序 然后点击集装箱插件-谷歌助手-开启代理 第二步：打开www.freenom.com 在方框里输入你想要的域名(带后缀哦) 后缀类型：.tk，.ml，.ga，.gq，.cf 这边用 dodola.ml 举例子 点击完成，稍等一会儿他就会跳转至下一步 网站加载可能稍慢 接着点击 将 3 Months @ FREE 改为 12 Months @ FREE PS:Use Dns 代表自定义 DNS Forward this domain 代表将域名跳转至某域名 当这一步做好后点击 Continue 接下来会跳转至 在 Enter Your Email Address 填写你的域名 然后点击 Verify My Email Address 这时候 Freenom 将会给你发一封邮件 在邮件内部找到 Verify My Email Address 点击一下，就会跳转至一个页面，下面让你填写真实信息，推荐和自己 IP 一样，否则可能结算报错。 填写好后将下面的小方块打上勾，点击下一步(应该是的) 然后跳转至一个页面，看看上面有没有 Error 之类的报错，如果没有，恭喜你，注册成功! 下面是修改 DNS 教程 打开https://my.freenom.com/clientarea.php?action=domains 找到你刚才嫖的域名点击后面的 Manage Domain 然后找到 Management Tools-Nameserver 选择 Use custom nameservers(enter below) 将下面的 Nameserver 改成你想用的 DNS 这时候一年的域名就白嫖完成啦~ 续费也是免费的哦！ PS:白嫖的域名现在无法使用 CF 啦(无法解析！)","categories":[],"tags":[{"name":"白嫖党福利","slug":"白嫖党福利","permalink":"https://blog.slqwq.cn/tags/%E7%99%BD%E5%AB%96%E5%85%9A%E7%A6%8F%E5%88%A9/"}],"author":"Hajeekn"},{"title":"记录一下捣鼓语雀文章同步到Hexo的过程","slug":"ofnzfw","date":"2020-01-20T12:09:33.000Z","updated":"2021-01-29T03:14:27.042Z","comments":true,"path":"2020/posts/2ed5ru6/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/2ed5ru6/index.html","excerpt":"","text":"本文章首发于语雀!通过各种高科技功能同步到Hajeekn 的博客起初啦，我本来是想在语雀写文章同步到 Hexo 很方便。可是呢?捣鼓的过程中踩了一系列的坑，这篇文章主要记录一下踩的那些坑 1.文章 Cover 自动被转为链接格式这个也是最头疼的事情在我同步文章上去后，文章的 cover 地址全部亮亮的，起初我没注意，不过 GitHub Actions 编译静态文件的时候我注意到了。请大家注意看!在 cover 处原本的 1xxxx.com/xxx.png 变成了[]()格式，也就是说语雀平台把这个 cover 配置识别为了一串链接，导致 Hexo 同步下来时渲染失败了。 解决办法在语雀内部点击这个被识别为链接的图片地址，选择删除链接(最后一个)即可 2.写法错误同步到语雀后 front-matter 格式和 hexo 本地格式不是一样的。也就是说本地和云端要放两套不同的模板(建议还是把本地的数据备份一下到 OneDrive 之类的网盘) 解决办法这边给大家一套C 哥用的模板滑稽 12345678910111213---title: #文章标题tags: #标签(请使用数组结构!!!!，，例如[CC,牛逼,啊])categories: #分类(请使用数组结构!!!!，例如[CC,牛逼,啊])cover: #文章Covertop_img: false #是否启用顶部大图copyright_author_href: #作者网站keywords: #关键字description: #介绍id: #第几篇文章date: #编写日期updated: #更新日期--- 各位参照这上面的格式写就可以了 Thanks For You其他的博主是没遇到过如果有兴趣的话，博主会出一篇关于语雀文章同步到 Hexo 的文章不过冰老师已经写了点这里去看看冰老师的教程","categories":[],"tags":[{"name":"日志","slug":"日志","permalink":"https://blog.slqwq.cn/tags/%E6%97%A5%E5%BF%97/"},{"name":"捣鼓","slug":"捣鼓","permalink":"https://blog.slqwq.cn/tags/%E6%8D%A3%E9%BC%93/"}],"author":"Hajeekn"}],"categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/categories/Hexo/"},{"name":"主题魔改","slug":"Hexo/主题魔改","permalink":"https://blog.slqwq.cn/categories/Hexo/%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"},{"name":"云端写作","slug":"Hexo/云端写作","permalink":"https://blog.slqwq.cn/categories/Hexo/%E4%BA%91%E7%AB%AF%E5%86%99%E4%BD%9C/"},{"name":"评论系统","slug":"评论系统","permalink":"https://blog.slqwq.cn/categories/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"},{"name":"Python","slug":"Python","permalink":"https://blog.slqwq.cn/categories/Python/"},{"name":"Vercel","slug":"Vercel","permalink":"https://blog.slqwq.cn/categories/Vercel/"},{"name":"干货","slug":"干货","permalink":"https://blog.slqwq.cn/categories/%E5%B9%B2%E8%B4%A7/"},{"name":"实用工具","slug":"实用工具","permalink":"https://blog.slqwq.cn/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"},{"name":"在线工具","slug":"实用工具/在线工具","permalink":"https://blog.slqwq.cn/categories/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/"},{"name":"魔改","slug":"魔改","permalink":"https://blog.slqwq.cn/categories/%E9%AD%94%E6%94%B9/"},{"name":"评论","slug":"魔改/评论","permalink":"https://blog.slqwq.cn/categories/%E9%AD%94%E6%94%B9/%E8%AF%84%E8%AE%BA/"},{"name":"Pjax系列","slug":"Pjax系列","permalink":"https://blog.slqwq.cn/categories/Pjax%E7%B3%BB%E5%88%97/"},{"name":"播放器","slug":"Pjax系列/播放器","permalink":"https://blog.slqwq.cn/categories/Pjax%E7%B3%BB%E5%88%97/%E6%92%AD%E6%94%BE%E5%99%A8/"},{"name":"Javascript","slug":"Pjax系列/播放器/Javascript","permalink":"https://blog.slqwq.cn/categories/Pjax%E7%B3%BB%E5%88%97/%E6%92%AD%E6%94%BE%E5%99%A8/Javascript/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/tags/Hexo/"},{"name":"主题魔改","slug":"主题魔改","permalink":"https://blog.slqwq.cn/tags/%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"},{"name":"云端","slug":"云端","permalink":"https://blog.slqwq.cn/tags/%E4%BA%91%E7%AB%AF/"},{"name":"高效写作","slug":"高效写作","permalink":"https://blog.slqwq.cn/tags/%E9%AB%98%E6%95%88%E5%86%99%E4%BD%9C/"},{"name":"简约","slug":"简约","permalink":"https://blog.slqwq.cn/tags/%E7%AE%80%E7%BA%A6/"},{"name":"大气","slug":"大气","permalink":"https://blog.slqwq.cn/tags/%E5%A4%A7%E6%B0%94/"},{"name":"Python","slug":"Python","permalink":"https://blog.slqwq.cn/tags/Python/"},{"name":"Terminal","slug":"Terminal","permalink":"https://blog.slqwq.cn/tags/Terminal/"},{"name":"网站","slug":"网站","permalink":"https://blog.slqwq.cn/tags/%E7%BD%91%E7%AB%99/"},{"name":"Free","slug":"Free","permalink":"https://blog.slqwq.cn/tags/Free/"},{"name":"干货","slug":"干货","permalink":"https://blog.slqwq.cn/tags/%E5%B9%B2%E8%B4%A7/"},{"name":"Jsdelivr","slug":"Jsdelivr","permalink":"https://blog.slqwq.cn/tags/Jsdelivr/"},{"name":"实用工具","slug":"实用工具","permalink":"https://blog.slqwq.cn/tags/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"},{"name":"CSS","slug":"CSS","permalink":"https://blog.slqwq.cn/tags/CSS/"},{"name":"HTML","slug":"HTML","permalink":"https://blog.slqwq.cn/tags/HTML/"},{"name":"魔改","slug":"魔改","permalink":"https://blog.slqwq.cn/tags/%E9%AD%94%E6%94%B9/"},{"name":"Aplayer","slug":"Aplayer","permalink":"https://blog.slqwq.cn/tags/Aplayer/"},{"name":"Meting","slug":"Meting","permalink":"https://blog.slqwq.cn/tags/Meting/"},{"name":"白嫖党福利","slug":"白嫖党福利","permalink":"https://blog.slqwq.cn/tags/%E7%99%BD%E5%AB%96%E5%85%9A%E7%A6%8F%E5%88%A9/"},{"name":"日志","slug":"日志","permalink":"https://blog.slqwq.cn/tags/%E6%97%A5%E5%BF%97/"},{"name":"捣鼓","slug":"捣鼓","permalink":"https://blog.slqwq.cn/tags/%E6%8D%A3%E9%BC%93/"}]}