{"meta":{"title":"SL's Blog","subtitle":"SL's Blog","description":"梦中做梦，做了个白日梦","author":"SL","url":"https://blog.slqwq.cn","root":"/"},"pages":[{"title":"说说","date":"2020-05-26T17:39:53.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"Artitalk/index.html","permalink":"https://blog.slqwq.cn/Artitalk/index.html","excerpt":"","text":"var appID=\"Du3OyCuBXR1CX1ffNzaHXnoV-MdYXbMMI\"; var appKEY=\"dgVYyWlrfCY6u25FAeaofsOd\"; $('a').each(function() { const $this = $(this); const href = $this.attr('href'); if (href && href.match('^((http|https|thunder|qqdl|ed2k|Flashget|qbrowser|ftp|rtsp|mms)://)')) { const strs = href.split('/'); if (strs.length >= 3) { const host = strs[2]; if (host !== '' || window.location.host) { $this.attr('href', '/Jump.html?url='+Base64.encode(href)+'').attr('rel', 'external nofollow noopener noreferrer'); if (true) { $this.attr('target', '_blank'); } } } } });"},{"title":"about","date":"2020-02-25T14:55:34.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"about/index.html","permalink":"https://blog.slqwq.cn/about/index.html","excerpt":"","text":"掌握技能CSS3HTML5 未掌握技能JavaScript(学习中)Node.js(学习中) 坐标China Hubei Enshi XianFeng 年龄12 年级初中 博客状态全站HTTPS Hexo+Butterfly"},{"title":"categories","date":"2020-05-12T08:38:20.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"categories/index.html","permalink":"https://blog.slqwq.cn/categories/index.html","excerpt":"","text":"目前鸣谢、隐私问题、合作般到这里啦~鸣谢：https://www.slblog.ga/网站鸣谢 隐私问题：https://www.slblog.ga/您的隐私问题 合作伙伴：https://www.slblog.ga/合作伙伴们 公益：https://www.slblog.ga/404 服务状态：https://status.ytuty-blog.ga/ 服务状态(新Beta)：https://cdn.slblog.ga/Service/"},{"title":"雌(雄)ICP备案 ","date":"2020-06-20T17:03:18.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"icp备案/index.html","permalink":"https://blog.slqwq.cn/icp%E5%A4%87%E6%A1%88/index.html","excerpt":"","text":"SL’s Blog雄 ICP 备 567 号 申请雌(雄)备案(只是图个好玩)请按以下格式留言，我会第一件处理Name: SL’s BlogHome page: blog.slqwq.cnWebsite info: 梦中做梦，做了个白日梦Website owner: SLCase number: 雄 ICP 备 567 号"},{"title":"友情链接","date":"2020-05-17T15:43:50.000Z","updated":"2020-06-24T07:56:50.090Z","comments":true,"path":"link/index.html","permalink":"https://blog.slqwq.cn/link/index.html","excerpt":"","text":"本站信息:博客名: SuperのLove’s Blog博客地址: https://blog.slqwq.cn/头像: https://cdn.slblog.ga/pic/logo.png说明: 梦中做梦，做了个白日梦 交换友链请提供:name: #博客名link: #博客域名avatar: #博客头像decsr: #说明 友链规则:1.必须使用SSL(所有品牌的都允许，但禁止不信任的和自签证书)2.不能存在暴力血腥东西3.不能存在台D和港D之类的 申请友链请留言或者加QQ:3356620252，谢谢。"},{"title":"update","date":"2020-05-23T10:02:18.000Z","updated":"2020-06-24T07:56:50.090Z","comments":true,"path":"update/index.html","permalink":"https://blog.slqwq.cn/update/index.html","excerpt":"","text":"更新:2020/6/814:351.新增文件CDN(每月15GB流量)2.侧边栏新增访客信息3.移除阿里云(大陆)CDN 2020/6/212:001.即将停止www.slblog.ga的访问2.请友链尽快更改地址~3.实验室新增音乐播放器功能4.替换新的播放器 2020/6/18:001.更换新的域名(blog.slqwq.cn) 2020/5/239:001.新增阿里云CDN(大陆节点)(不带HTTPS) 2020/5/1620:331.新增cdn.slblog.ga(带HTTPS)cdn 2020/5/1510:541.CloudFlare出现回源故障，删除CloudFlare。"},{"title":"","date":"2020-06-24T07:56:50.090Z","updated":"2020-06-24T07:56:50.090Z","comments":true,"path":"您的隐私问题/index.html","permalink":"https://blog.slqwq.cn/%E6%82%A8%E7%9A%84%E9%9A%90%E7%A7%81%E9%97%AE%E9%A2%98/index.html","excerpt":"","text":"layout: pagestitle: 您的隐私问题date: 2020-04-21 18:24:34tags: 隐私 您可能会疑惑，本站登陆的账号及浏览数据、Cookies等会不会泄露? 在这里我们会为您一一解答。 1.我们与谁共享您的信息我们使用 Baidu Analytics 来统计浏览信息，您在本网站的浏览记录会发送到他们的服务器。您在评论时所填写的个人信息 (昵称、邮箱、网站) 中的网站、昵称将会被任何查看该页面的人所知晓。 2.评论系统会不会保存账号密码并泄露?如果您在我们的站点上留下评论，我们用 cookies 保存您的账号。这是通过让您可以不用在评论时再次填写相关内容而向您提供方便。这些 cookies 会保留一个月。 3.其他站点的嵌入内容此站点上的文章可能会包含嵌入的内容 (如视频、图像、文章等). 来自其他站点的嵌入内容的行为和您直接访问这些其他站点没有区别.这些站点可能会收集关于您的数据、使用 cookies、嵌入额外的第三方跟踪程序及监视您与这些嵌入内容的交互，包括在您有这些站点的账户并登录了这些站点时，跟踪您与嵌入内容的交互. 4.最终解释权本网站所有内容的最终解释权为 SL 所有"},{"title":"网站鸣谢","date":"2020-05-06T12:46:35.000Z","updated":"2020-06-24T07:56:50.090Z","comments":true,"path":"网站鸣谢/index.html","permalink":"https://blog.slqwq.cn/%E7%BD%91%E7%AB%99%E9%B8%A3%E8%B0%A2/index.html","excerpt":"","text":"博客鸣谢1.Bmyjacks(B站:bmyjacks)2.xiobb(B站:xiobb)3.MBRjun(B站:MBRjun)4.amemz(B站1:amemz_minecraft,B站2:amemz)5.Cnoim(B站:Cnoim)6.萌城酱(B站:1萌城酱,B站2:我是萌城酱)7.請吃宵夜(B站:請吃宵夜)8.GitHub Pages(https://pages.github.com/)9.Coding Pages(https://pages.coding.net.com/)10.Zeit.co(https://vercel.com/)11.Fast.io(https://Fast.io/)12.Jsdelivr(https://jsdelivr.com/)13.badgen(https://badgen.net/)14.Hexo(https://hexo.io/)15.Hexo-theme-Butterfly(1:https://github.com/jerryc127/hexo-theme-butterfly/,2:https://jerryc.me/）16.夕晴酱(QQ:3314307538)17.xiaoxu(QQ:2243016926) 在这里附上最真诚的感谢！"},{"title":"合作伙伴们","date":"2020-04-06T21:11:11.000Z","updated":"2020-06-24T07:56:50.090Z","comments":true,"path":"合作伙伴们/index.html","permalink":"https://blog.slqwq.cn/%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E4%BB%AC/index.html","excerpt":"","text":"感谢进入这个页面 合作伙伴如下： 1.Jsdelivrhttps://www.jsdelivr.com/ 2.Meng Rong Jiang’s bloghttps://www.mrjblog.top/ 3.YF Cloud（暂时罢工）https://yum.136588.top/ 4.xiobb’s bloghttps://www.yfblog.ml/ 5.bmyjacks’s bloghttps://www.bmyjacks.cn/ 6.Freenomhttps://www.freenom.com/ 7.Codinghttps://www.coding.net/ 8.Githubhttps://www.github.com/ 9.CloudFlarehttps://www.cloudflare.com/ 10.Meng Cheng Jiang’s bloghttps://bili.bio/ 11.YF(xiobb)的域名分发(SSL无法配置)http://www.eivm.tk/ 申请方式:禁止申请 投诉方式:QQ:3356620252email:sladmin@slwebtap.slblog.gaGoogle Mail:blackout33566@gmail.com"},{"title":"合作伙伴页面-Beta","date":"2020-04-04T08:07:08.000Z","updated":"2020-06-24T07:56:50.090Z","comments":true,"path":"合作伙伴们/betapages/index.html","permalink":"https://blog.slqwq.cn/%E5%90%88%E4%BD%9C%E4%BC%99%E4%BC%B4%E4%BB%AC/betapages/index.html","excerpt":"","text":"注意:本页面的合作伙伴随时更新。 1.Jsdelivrhttps://www.jsdelivr.com/ 2.Meng Rong Jiang’s bloghttps://www.mrjblog.top/ 3.YF Cloud（暂时罢工）https://yum.136588.top/ 4.xiobb’s bloghttps://www.yfblog.cf/ 5.bmyjacks’s bloghttps://www.bmyjacks.cn/ 6.Freenomhttps://www.freenom.com/ 7.Codinghttps://www.coding.net/ 8.Githubhttps://www.github.com/ 9.CloudFlarehttps://www.cloudflare.com/ 10.Meng Cheng Jiang’s blog(停机维护)https://bili.bio/ 11.YF(xiobb)的域名分发(SSL无法配置)http://www.eivm.tk/ 申请方式:禁止申请 投诉方式:QQ:3356620252email:sladmin@slwebtap.slblog.gaGoogle Mail:blackout33566@gmail.com"},{"title":"","date":"2020-06-24T07:56:50.086Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"icp备案/cx/blog.slqwq.cn/index.html","permalink":"https://blog.slqwq.cn/icp%E5%A4%87%E6%A1%88/cx/blog.slqwq.cn/index.html","excerpt":"","text":".info{border:#e1e1e1 solid 1px;border-radius:10px}.info .info-item{padding:0;display:flex}.info .info-item~.info-item{border-top:#e1e1e1 solid 1px}.info .info-item .lable{border-right:#e1e1e1 solid 1px;width:120px;padding:12px 20px;text-align-last:justify}.info .info-item .value{flex:1;padding:12px 20px}@media (max-width:820px){.container{padding:20px}}.beian-btn{float:right;margin-top:20px;margin-bottom:20px;color:#00f;text-decoration:underline}网站名称SL's Blog网站首页blog.slqwq.cn网站信息梦中做梦，做了个白日梦网站作者SL备案编号雄 ICP 备 567号备案时间2020/6/20备案状态已审核我要备案"},{"title":"","date":"2020-06-24T07:56:50.086Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"files/index.html","permalink":"https://blog.slqwq.cn/files/index.html","excerpt":"","text":"/** * SCF_GATEWAY： * SITE_NAME： */ window.GLOBAL_CONFIG = { SCF_GATEWAY: \"https://slcdn.sllat-cdn.workers.dev/\", SITE_NAME: \"slwebtap's OneDrive Pan Files\", IS_CF: true }; if (window.GLOBAL_CONFIG.SCF_GATEWAY.indexOf('workers') === -1) { window.GLOBAL_CONFIG.SCF_GATEWAY += '/fodi/'; window.GLOBAL_CONFIG.IS_CF = false; } // if (location.protocol === 'http:') { // location.href = location.href.replace(/http/, 'https'); // } .password-wrapper { display: flex; align-items: center; } .password { margin: 0 auto; padding-top: 1em; display: none; } .password input { height: 2em; outline: none; border: solid rgb(218, 215, 215) 1px; } .password button { background: white; height: 2em; outline: none; border: solid rgb(218, 215, 215) 1px; } .password button:hover { color: white; background: rgb(218, 215, 215); } pre * { font-family: Courier New; } .preview { display: none; font-size: .8em; } .content { clear: both; padding: 0 1em; margin: 0 auto; text-align: center; } .file-name { line-height: 1em; padding: 1em 1em 0; text-align: center; white-space: nowrap; overflow: hidden; } .btn { float: right; text-align: center; border: solid rgb(218, 215, 215) 1px; border-radius: 1em; margin: 1em .2em; width: 4em; height: 2em; line-height: 2em; user-select: none; -moz-user-select: none; -o-user-select: none; -khtml-user-select: none; -webkit-user-select: none; -ms-user-select: none; } .btn:hover { color: white; background: rgb(218, 215, 215); } .btn.download { margin-right: 1em; } #arrow-back, #arrow-forward { color: rgb(218, 215, 215); } .loading-wrapper { display: none; position: fixed; height: 2em; line-height: 2em; margin-top: .5em; width: 100%; z-index: 1; } .loading { color: white; background: rgb(218, 215, 215); height: 100%; width: 8em; margin: 0 auto; text-align: center; border-radius: 1em; } ion-icon { font-size: 1.5em; } * { box-sizing: border-box; font-family: serif; } .markdown-body { min-width: 200px; margin: 0 auto; padding: .7em 1em; font-size: .8em; } .markdown-body h1, h2, h3, h4, h5, h6 { margin-top: 0; } .markdown-body img { max-width: 90%; max-height: 800px; width: auto; height: auto; display: block; margin: 0 auto; } body { width: 100%; height: 100%; margin: 0; padding: 0; } .header-wrapper { position: fixed; height: 3em; width: 100%; -moz-user-select: none; -o-user-select: none; -khtml-user-select: none; -webkit-user-select: none; -ms-user-select: none; user-select: none; } .header { padding: 0 1.8em 0 1em; height: 100%; display: flex; align-items: center; border-bottom: solid rgb(218, 215, 215) 1px; } .logo { margin-right: .3em; } .site { white-space: nowrap; /* margin-left: auto; padding-left: 2em; */ } .nav { width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; } .nav-path, .nav-arr { font-size: 1em; height: 1.5em; margin-right: .3em; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; cursor: default; } #main-page:hover, .nav-path:hover, .tree-node:hover, .row.file-wrapper:hover { color: rgb(90, 101, 133); cursor: pointer; } .container { position: fixed; width: 100%; height: calc(100% - 3em); margin-top: 3em; } .main { position: relative; height: 100%; width: 100%; } .left { position: absolute; display: inline-grid; width: 20%; height: 100%; font-size: .8em; overflow: scroll; } .tree-node-wrapper { margin-left: 1.5em; } .tree-node { display: flex; align-items: center; } .tree-node-name { margin-left: .3em; white-space: nowrap; } .right { position: absolute; width: 80%; height: 100%; margin-left: 20%; overflow: scroll; } .row { height: 2.5em; padding: 0 .8em 0 1em; display: flex; align-items: center; border-bottom: solid rgb(218, 215, 215) 1px; } .row.file-wrapper { font-size: .8em; padding: 0 1em; height: 2em; } .file { width: 100%; display: flex; align-items: center; } .name { display: flex; align-items: center; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; width: 70%; padding-left: .3em; } .list-header .name { width: calc(70% + 1.1em); padding-left: 0; } .time { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; text-align: right; ; width: 133px; } .size { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; margin-left: auto; } @media screen and (max-width: 1000px) { .left { display: none; } .right { width: 100%; margin-left: initial; } } @media screen and (max-width: 800px) { .name { width: 60%; } .list-header .name { width: calc(60% + 1.1em); } .file-name { overflow-x: scroll; height: 100%; } } @media screen and (max-width: 600px) { .name { width: 75%; } .time { display: none; } .header { padding: 0 .3em; } .row { padding: 0 .3em; } .row.file-wrapper { padding: 0 .3em; height: 3em; } .markdown-body { padding: .6em .3em; } .file-name { padding: 1em .3em 0; } .content { padding: 0 .3em; } .btn.download { margin-right: .3em; } .logo { width: 2em; height: 2em; } } function createCORSRequest(method, url, timeout) { let xhr = new XMLHttpRequest(); if ('withCredentials' in xhr) { xhr.open(method, url, true); } else if (typeof XDomainRequest !== 'undefined') { xhr = new XDomainRequest(); xhr.open(method, url); } else { xhr = null; } if (xhr) { xhr.timeout = timeout; } return xhr; } function sendRequest(method, url, data, headers, callback, error, times) { let xhr = createCORSRequest(method, url, 2500); xhr.onreadystatechange = () => { if (xhr.readyState == 4 && xhr.status == 200) { callback(xhr.responseText); } }; xhr.timeout = xhr.onerror = () => { if (!times) { times = 0; } console.log({ url: url, data: data, times: times }) if (times < 1) { sendRequest(method, url, data, headers, callback, error, times + 1); } else if (typeof error === 'function') { error(); } } if (headers) { for (key in headers) { if (headers.hasOwnProperty(key)) { xhr.setRequestHeader(key, headers[key]); } } } if (data) { xhr.send(data); } else { xhr.send(); } } function renderPage(data, cache) { let files; if (data) { files = JSON.parse(data); window.fileCache.set(files.parent, files); preCache(files, 0); } else { files = cache; } if (files.parent === window.backFordwardCache.current) { renderPath(files.parent); if (files.encrypted) { handleEncryptedFolder(files); } else { renderFileList(files); } renderTreeNode(files); } if (document.body.getAttribute('hidden')) { document.body.removeAttribute('hidden'); } document.querySelector('.loading-wrapper').style.display = 'none'; } function renderPath(path) { const createPathSpan = (text, path) => { let pathSpan = document.createElement('span'); pathSpan.innerHTML = text.length > 20 ? text.substring(0, 20) + '..' : text; pathSpan.className = text === '/' ? 'nav-arr' : 'nav-path'; if (path) { addPathListener(pathSpan, path); } return pathSpan; }; const paths = path.split('/'); let pathSpanWrapper = document.getElementById('path'); pathSpanWrapper.innerHTML = ''; pathSpanWrapper.appendChild(createPathSpan(window.api.root)); let continualPath = '/'; for (let i = 1; i < paths.length - 1; i++) { continualPath += paths[i]; pathSpanWrapper.appendChild(createPathSpan(paths[i], continualPath)); pathSpanWrapper.appendChild(createPathSpan('/')); continualPath += '/'; } pathSpanWrapper.appendChild(createPathSpan(paths[paths.length - 1])); } function renderFileList(files) { switchRightDisplay(); const createFileWrapper = (type, name, time, size, path, url) => { let fileWrapper = document.getElementById('file-wrapper-templete').content.cloneNode(true); fileWrapper.querySelector('ion-icon').setAttribute('name', type); fileWrapper.querySelector('.name').innerHTML = name; fileWrapper.querySelector('.time').innerHTML = time; fileWrapper.querySelector('.size').innerHTML = size; addFileListLineListener(fileWrapper.querySelector('.row.file-wrapper'), path, url, size); return fileWrapper; }; const formatDate = date => { const addZero = num => num > 9 ? num : '0' + num; date = new Date(date); const year = date.getFullYear(); const month = addZero(date.getMonth() + 1); const day = addZero(date.getDate()); const hour = addZero(date.getHours()); const minute = addZero(date.getMinutes()); const second = addZero(date.getSeconds()); return 'yyyy-MM-dd HH:mm:ss' .replace('yyyy', year) .replace('MM', month) .replace('dd', day) .replace('HH', hour) .replace('mm', minute) .replace('ss', second); }; const formatSize = size => { let count = 0; while (size >= 1024) { size /= 1024; count++; } size = size.toFixed(2); switch (count) { case 1: size += ' KB'; break; case 2: size += ' MB'; break; case 3: size += ' GB'; break; case 4: size += ' TB'; break; case 5: size += ' PB'; break; default: size += ' B'; } return size; }; let fileList = document.getElementById('file-list'); fileList.innerHTML = ''; files.files.forEach(file => { if (file.name.split('.').pop() === 'md') { if (file.url) { renderReadme(files.parent + '/' + file.name, file.url); } } else { const parent = files.parent === window.api.root ? '' : files.parent; fileList.appendChild(createFileWrapper( file.url ? 'document' : 'folder', file.name, formatDate(file.time), formatSize(file.size), parent + '/' + file.name, file.url )); } }); } async function renderTreeNode(files) { const createTreeNodeWrapper = (array, type, name, path) => { let treeNodeWrapper = document.getElementById('tree-node-wrapper-template').content .cloneNode(true); let icons = treeNodeWrapper.querySelectorAll('ion-icon'); icons[0].setAttribute('name', array); icons[1].setAttribute('name', type); treeNodeWrapper.querySelector('.tree-node-name').innerText = name; treeNodeWrapper.appendNode = node => treeNodeWrapper.querySelector('.tree-node-wrapper').append( node); addTreeNodeListener(treeNodeWrapper.querySelector('.tree-node'), path); return treeNodeWrapper; } const paths = files.parent.split('/'); let absolutePath = max => { let absolutePath = ''; for (let j = 1; j { if (!file.url) { currentTreeNode.appendNode(createTreeNodeWrapper('arrow-dropright', 'folder', file.name, files.parent + '/' + file.name )); } }); for (let i = maxIndex - 1; i > 0; i--) { const currentTreeNodeParentAbsolutePath = absolutePath(i); let currentTreeNodeParent = createTreeNodeWrapper('arrow-dropdown', 'folder', paths[i], currentTreeNodeParentAbsolutePath ); let cache = window.fileCache.get(currentTreeNodeParentAbsolutePath); if (cache) { cache.files.forEach(file => { if (!file.url) { if (file.name === paths[i + 1]) { currentTreeNodeParent.appendNode(currentTreeNode); } else { currentTreeNodeParent.appendNode(createTreeNodeWrapper( 'arrow-dropright', 'folder', file.name, currentTreeNodeParentAbsolutePath + '/' + file.name )); } } }); } else { currentTreeNodeParent.appendNode(currentTreeNode); } currentTreeNode = currentTreeNodeParent; } const treeRoot = document.getElementById('tree-root'); treeRoot.innerHTML = ''; const cache = window.fileCache.get(window.api.root); const currentNodeName = currentTreeNode.querySelector('.tree-node-name').innerText; if (cache) { cache.files.forEach(file => { if (!file.url) { if (file.name === currentNodeName) { treeRoot.append(currentTreeNode); } else { treeRoot.append(createTreeNodeWrapper( 'arrow-dropright', 'folder', file.name, window.api.root + file.name )); } } }); } else { treeRoot.append(currentTreeNode); } } async function renderReadme(path, url) { const render = text => { let markedText; try { markedText = marked(text, { gfm: true, highlight: (code, lang, callback) => { return hljs.highlight(lang, code).value; } }); } catch (e) { markedText = marked(text, { gfm: true, highlight: (code, lang, callback) => { return hljs.highlight('bash', code).value; } }); } if (window.backFordwardCache.current + '/README.md' === path) { if (!window.backFordwardCache.preview) { document.getElementById('readme').innerHTML = markedText; document.querySelector('.markdown-body').style.display = 'block'; } } let cache = window.fileCache.get(path); if (!cache || cache === true) { window.fileCache.set(path, text); } }; let text = window.fileCache.get(path); if (text === true) { let cacheWaitReadmeFetch = setInterval(() => { text = window.fileCache.get(path); if (typeof text === 'object') { render(text, path); clearInterval(cacheWaitReadmeFetch); } else if (text === false) { clearInterval(cacheWaitReadmeFetch); } }, 100); } else if (text) { render(text, path); } else { window.fileCache.set(path, true); sendRequest('GET', url, null, null, text => render(text, path), () => window.fileCache.set(path, false)); } } function handleEncryptedFolder(files) { switchRightDisplay('encrypted'); const password = document.querySelector('.password'); const input = password.querySelector('input'); const button = password.querySelector('button'); const buttonParent = button.parentElement; const buttonClone = button.cloneNode(true); buttonParent.replaceChild(buttonClone, button); input.placeholder = '请输入密码'; buttonClone.addEventListener('click', event => { const passwd = input.value; if (!input.value) { return; } input.value = ''; input.placeholder = '正在验证..'; sendRequest(window.api.method, window.api.url, window.api.formatPayload(files.parent, passwd), window.api.headers, data => { const newFiles = JSON.parse(data); if (newFiles.encrypted) { input.placeholder = '密码错误'; } else { window.fileCache.set(newFiles.parent, newFiles); fetchFileList(newFiles.parent); } }, () => window.fileCache.set(newFiles.parent, false) ); }); } function addPathListener(elem, path) { elem.addEventListener('click', event => { fetchFileList(path); switchBackForwardStatus(path); }); } function addTreeNodeListener(elem, path) { elem.addEventListener('click', event => { fetchFileList(path); switchBackForwardStatus(path); }); } function addFileListLineListener(elem, path, url, size) { if (url) { elem.addEventListener('click', event => { window.backFordwardCache.preview = true; const previewHandler = { copyTextContent: (source, text) => { let result = false; let target = document.createElement('pre'); target.style.opacity = '0'; target.textContent = text || source.textContent; document.body.appendChild(target); try { let range = document.createRange(); range.selectNode(target); window.getSelection().removeAllRanges(); window.getSelection().addRange(range); document.execCommand('copy'); window.getSelection().removeAllRanges(); result = true; } catch (e) { } document.body.removeChild(target); return result; }, fileType: suffix => { Array.prototype.contains = function (search) { const object = this; for (const key in object) { if (object.hasOwnProperty(key)) { if ((eval('/' + search + '/i')).test(object[key])) { return true; } } } return false; }; if (['bmp', 'jpg', 'png', 'svg', 'webp', 'gif'].contains(suffix)) { return 'image'; } else if (['mp3', 'flac', 'wav'].contains(suffix)) { return 'audio'; } else if (['mp4', 'avi', 'mkv', 'flv', 'm3u8'].contains(suffix)) { return 'video'; } else if ( [ 'txt', 'js', 'json', 'css', 'html', 'java', 'c', 'cpp', 'php', 'cmd', 'ps1', 'bat', 'sh', 'py', 'go', 'asp', ].contains(suffix) ) { return 'text'; } else if ( ['doc', 'docx', 'ppt', 'pptx', 'xls', 'xlsx', 'mpp', 'rtf', 'vsd', 'vsdx'].contains(suffix) ) { return 'office'; } }, loadResource: (resource, callback) => { let type; switch (resource.split('.').pop()) { case 'css': type = 'link'; break; case 'js': type = 'script'; break; } let element = document.createElement(type); let loaded = false; if (typeof callback === 'function') { element.onload = element.onreadystatechange = () => { if (!loaded && (!element.readyState || /loaded|complete/.test( element.readyState))) { element.onload = element.onreadystatechange = null; loaded = true; callback(); } } } if (type === 'link') { element.href = resource; element.rel = 'stylesheet'; } else { element.src = resource; } document.getElementsByTagName('head')[0].appendChild(element); }, createDplayer: (video, type, elem) => { const host = '//s0.pstatp.com/cdn/expire-1-M'; const resources = [ '/dplayer/1.25.0/DPlayer.min.css', '/dplayer/1.25.0/DPlayer.min.js', '/hls.js/0.12.4/hls.light.min.js', '/flv.js/1.5.0/flv.min.js' ]; let unloadedResourceCount = resources.length; resources.forEach(resource => { previewHandler.loadResource(host + resource, () => { if (!--unloadedResourceCount) { let option = { url: video } if (type === 'flv') { option.type = 'flv'; } new DPlayer({ container: elem, screenshot: true, video: option }); } }) }); } } const suffix = path.split('.').pop(); let content = document.querySelector('.content'); switch (previewHandler.fileType(suffix)) { case 'image': let img = new Image(); img.style.maxWidth = '100%'; img.src = url; let fancy = document.createElement('a'); fancy.setAttribute('data-fancybox', 'image'); fancy.href = img.src; fancy.append(img); content.innerHTML = ''; content.append(fancy); break; case 'audio': let audio = new Audio(); audio.style.outline = 'none'; audio.preload = 'auto'; audio.controls = 'controls'; audio.style.width = '100%'; audio.src = url; content.innerHTML = ''; content.append(audio); break; case 'video': let video = document.createElement('div'); previewHandler.createDplayer(url, suffix, video); content.innerHTML = ''; content.append(video); break; case 'text': let pre = document.createElement('pre'); let code = document.createElement('code'); pre.append(code); pre.style.background = 'rgb(245,245,245)'; pre.style['overflow-x'] = 'scroll'; pre.classList.add(suffix); content.style['text-align'] = 'initial'; content.innerHTML = ''; content.append(pre); sendRequest('GET', url, null, null, data => { code.textContent = data; if (size.indexOf(' B') >= 0 || size.indexOf(' KB') && size.split(' ')[0] < 100 ) { hljs.highlightBlock(pre); } }); break; case 'office': const officeOnline = '//view.officeapps.live.com/op/view.aspx?src=' + encodeURIComponent(url); let div = document.createElement('div'); div.style.lineHeight = '2em'; div.style.background = 'rgba(218, 215, 215, 0.21)'; div.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)'; div.style.cursor = 'pointer'; div.innerHTML = '新窗口打开'; div.addEventListener('click', () => window.open(officeOnline)); content.innerHTML = ''; content.appendChild(div); if (document.body.clientWidth >= 480) { let iframe = document.createElement('iframe'); iframe.width = '100%'; iframe.style.height = '41em'; iframe.style.border = '0'; iframe.src = officeOnline; content.appendChild(iframe); } break; default: content.style['text-align'] = 'center'; content.innerHTML = '该文件不支持预览'; break; } document.querySelector('.file-name').innerHTML = path; document.querySelector('.btn.download').addEventListener('click', () => location.href = url ); document.querySelector('.btn.quote').addEventListener('click', event => { previewHandler.copyTextContent(null, window.api.url + '?file=' + path); const btn = document.querySelector('.btn.quote'); btn.innerHTML = '已复制'; setTimeout(() => btn.innerHTML = '引用', 250); } ); document.querySelector('.btn.share').addEventListener('click', event => { const sharePath = () => { let arr = window.backFordwardCache.current.split('/'); let r = ''; for (let i = 1; i < arr.length; i++) { r += '/' + arr[i]; } return r; } previewHandler.copyTextContent(null, window.location.origin + window.location.pathname + '?path=' + sharePath()); const btn = document.querySelector('.btn.share'); btn.innerHTML = '已复制'; setTimeout(() => btn.innerHTML = '分享', 250); } ); switchRightDisplay('preview'); let start = null; let right = document.querySelector('.right'); const scrollToBottom = (timestamp) => { if (!start) start = timestamp; let progress = timestamp - start; let last = right.scrollTop; right.scrollTo(0, right.scrollTop + 14); if (right.scrollTop !== last && progress < 1000 * 2) { window.requestAnimationFrame(scrollToBottom); } }; window.requestAnimationFrame(scrollToBottom); }); } else { elem.addEventListener('click', event => { fetchFileList(path); switchBackForwardStatus(path); }); } } function addBackForwardListener() { document.getElementById('arrow-back').addEventListener('click', back); document.getElementById('arrow-forward').addEventListener('click', forward); document.querySelector('#main-page').addEventListener('click', () => { fetchFileList(window.api.root); switchBackForwardStatus(window.api.root); }); } function switchRightDisplay(display) { if (display === 'preview') { document.querySelector('.list-header').style.display = 'none'; document.querySelector('#file-list').style.display = 'none'; document.querySelector('.markdown-body').style.display = 'none'; document.querySelector('.password').style.display = 'none'; document.querySelector('.preview').style.display = 'initial' } else if (display === 'encrypted') { document.querySelector('.list-header').style.display = 'none'; document.querySelector('#file-list').style.display = 'none'; document.querySelector('.markdown-body').style.display = 'none'; document.querySelector('.preview').style.display = 'none'; document.querySelector('.password').style.display = 'initial'; document.querySelector('#readme').innerHTML = ''; let content = document.querySelector('.preview .content'); if (content) { document.querySelector('.preview .content').innerHTML = ''; } } else { document.querySelector('.list-header').style.display = 'initial'; document.querySelector('#file-list').style.display = 'initial'; document.querySelector('.markdown-body').style.display = 'none' document.querySelector('.preview').style.display = 'none'; document.querySelector('.password').style.display = 'none'; document.querySelector('#readme').innerHTML = ''; let content = document.querySelector('.preview .content'); if (content) { document.querySelector('.preview .content').innerHTML = ''; } } } function switchBackForwardStatus(path) { if (path) { window.backFordwardCache.deepest = path; } if (window.backFordwardCache.root !== window.backFordwardCache.current) { window.backFordwardCache.backable = true; document.getElementById('arrow-back').style.color = 'black'; } else { window.backFordwardCache.backable = false; document.getElementById('arrow-back').style.color = 'rgb(218, 215, 215)'; } if (window.backFordwardCache.deepest !== window.backFordwardCache.current) { window.backFordwardCache.forwardable = true; document.getElementById('arrow-forward').style.color = 'black'; } else { window.backFordwardCache.forwardable = false; document.getElementById('arrow-forward').style.color = 'rgb(218, 215, 215)'; } } function back() { if (!window.backFordwardCache.backable) { return; } if (window.backFordwardCache.preview) { fetchFileList(window.backFordwardCache.current); } else { let former = (() => { let formerEndIndex = window.backFordwardCache.current.lastIndexOf('/'); return window.backFordwardCache.current.substring(0, formerEndIndex); })(); former = former || window.api.root; fetchFileList(former); switchBackForwardStatus(); } // console.log(window.backFordwardCache); } function forward() { if (!window.backFordwardCache.forwardable) { return } const current = window.backFordwardCache.current === window.api.root ? '' : window.backFordwardCache.current const subLength = current ? current.length : 0; const later = current + '/' + window.backFordwardCache.deepest.substring(subLength).split('/')[1]; fetchFileList(later); switchBackForwardStatus(); // console.log(window.backFordwardCache); } async function preCache(files, level) { if (level > 2) return; files.files.forEach(file => { const parent = files.parent === '/' ? '' : files.parent const path = parent + '/' + file.name; if (!file.url) { // console.log('caching ' + path + ', level ' + level); window.fileCache.set(path, true); sendRequest(window.api.method, window.api.url, window.api.formatPayload(path), window.api.headers, data => { const files = JSON.parse(data); window.fileCache.set(path, files); preCache(files, level + 1); }, () => window.fileCache.set(path, false) ); } else if (file.name.split('.').pop() === 'md') { // console.log('caching ' + path + ', level ' + level); window.fileCache.set(path, true); sendRequest('GET', file.url, null, null, text => window.fileCache.set(path, text), () => window.fileCache.set(path, false)); } }); } async function preCacheCheck(cache, path) { cache.files.forEach(file => { const prefix = path === window.api.root ? '' : path; const nextPath = prefix + '/' + file.name; const pathCache = window.fileCache.get(nextPath); if (!file.url) { if (!pathCache && pathCache !== true) { // console.log('inner caching ' + nextPath); window.fileCache.set(nextPath, true); sendRequest(window.api.method, window.api.url, window.api.formatPayload(nextPath), window.api.headers, data => { const files = JSON.parse(data); window.fileCache.set(nextPath, files); preCache(files, 0); }, () => window.fileCache.set(nextPath, false) ); } } else if (file.name.split('.').pop() === 'md') { if (!pathCache && pathCache !== true) { // console.log('inner caching ' + nextPath); window.fileCache.set(nextPath, true); sendRequest('GET', file.url, null, null, text => window.fileCache.set(nextPath, text), () => window.fileCache.set(nextPath, false)); } } }); } function fetchFileList(path) { // console.log('fetching ' + path); let loading = document.querySelector('.loading-wrapper'); loading.style.display = 'initial'; window.backFordwardCache.preview = false; window.backFordwardCache.current = path; let cache = window.fileCache.get(path); if (cache === true) { let cacheWaitFileListFetch = setInterval(() => { cache = window.fileCache.get(path); if (typeof cache === 'object') { renderPage(null, cache); preCacheCheck(cache, path); clearInterval(cacheWaitFileListFetch); } else if (cache === false) { clearInterval(cacheWaitFileListFetch); loading.style.color = 'red'; loading.innerText = 'Failed!'; setTimeout(() => { loading.style.display = 'none'; loading.style.color = 'white'; loading.innerText = 'Loading..'; }, 2000); } }, 100); } else if (cache) { renderPage(null, cache); preCacheCheck(cache, path); } else { window.fileCache.set(path, true); sendRequest(window.api.method, window.api.url, window.api.formatPayload(path), window.api.headers, renderPage ); } } document.addEventListener('DOMContentLoaded', () => { document.title = window.GLOBAL_CONFIG.SITE_NAME; document.querySelector('.site').textContent = window.GLOBAL_CONFIG.SITE_NAME; window.api = { root: '/', url: window.GLOBAL_CONFIG.SCF_GATEWAY, method: 'POST', formatPayload: (path, passwd) => { return '?path=' + encodeURIComponent(path) + '&encrypted=' + window.api.accessToken.encrypted + '&plain=' + window.api.accessToken.plain + '&passwd=' + passwd; }, headers: { 'Content-type': 'application/x-www-form-urlencoded' } } window.backFordwardCache = { root: window.api.root, deepest: window.api.root, current: window.api.root, backable: false, forwardable: false, preview: false } window.fileCache = new Map(); const initialPath = new URLSearchParams(window.location.search).get('path') || window.api.root; if (window.GLOBAL_CONFIG.IS_CF) { window.api.accessToken = { encrypted: '', plain: '' }; fetchFileList(initialPath); addBackForwardListener(); } else { sendRequest(window.api.method, window.api.url + '?accessToken', null, window.api.headers, data => { const accessToken = JSON.parse(data); window.api.accessToken = { encrypted: accessToken.encrypted, plain: accessToken.plain }; fetchFileList(initialPath); addBackForwardListener(); } ); } }); Loading... ONEDRIVE ITEMS TIME SIZE 下载 引用 分享 提交 $('a').each(function() { const $this = $(this); const href = $this.attr('href'); if (href && href.match('^((http|https|thunder|qqdl|ed2k|Flashget|qbrowser|ftp|rtsp|mms)://)')) { const strs = href.split('/'); if (strs.length >= 3) { const host = strs[2]; if (host !== '' || window.location.host) { $this.attr('href', '/Jump.html?url='+Base64.encode(href)+'').attr('rel', 'external nofollow noopener noreferrer'); if (true) { $this.attr('target', '_blank'); } } } } });"}],"posts":[{"title":"使用好的CDN让你的网站获得更快的加载速度","slug":"使用好的CDN让你的网站获得更快的加载速度","date":"2020-06-19T17:51:42.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/62a00332/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/62a00332/index.html","excerpt":"","text":"本文参加又拍云技术征文活动! Cover来自impdx 大家好，本文章我来教大家如何使用好的CDN让你的网站获得更快的速度 了解什么是CDNCDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。 简单来说就是将你原站的服务分发给CDN的各个机器，然后当你访问套上CDN的网站时将你301到最近的服务 CDN的作用CDN主要用来: 1.下载 2.音视频点播 3.加速网站 4.存储文件 如何使用本期教程使用又拍云 废话不多说，进入正题 注册账号第一步当然是注册账号啦 进入又拍云官网 点击右上角的注册有礼在接下来的页面里面会出现两个选项 1.申请个人账号 2.申请企业账号 对于我们当然是选个人帐号啦 然后注册你们应该都懂，这边就不多说啦 配置CDN注册好了当然要配置CDN拉 在这之前，我们需要实名~ 我们需要进入实名页面 接下来点击实名认证 然后上传自己的手持身份证照 或者使用支付宝实名 等待又小拍审核通过后就能开始配置拉 点击云产品-CDN 看到右上角大大的创建服务了吗 点他，点他，点他~ 接下来你会被传送到创建CDN服务页面 根据他的介绍来填写 注意:加速域名需备案哦 创建完成后看到你的加速域名后面有个拒绝了嘛，看到了就是你没备案哦 这时候CDN已经搞♂好了 接下来就访问看看吧 如果出现handshake failed错误就是因为你的原站使用了强制HTTPS而CDN没配置HTTPS 这个亚子去又拍云申请一个免费的SSL就行了","categories":[],"tags":[]},{"title":"如何引用我的外挂标签CSS","slug":"如何引用我的外挂标签CSS","date":"2020-06-14T12:32:18.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/7d8b55fe/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/7d8b55fe/index.html","excerpt":"","text":"在ButterflyQQ群里的人都知道我对小康的外挂标签进行了拓展现在我来教大家如何引用首先打开主题配置旧版本:\\themes\\Butterfly的_config.yml新版本:\\source_data\\butterfly.yml打开后找到inject: head:处添加 1- &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;more-beautiful-div-framework&#x2F;more-beautiful-div-framework.min.css&quot;&gt; 文章内引用方法: 123456789&lt;div class&#x3D;&quot;tip wtgo&quot;&gt;&lt;p&gt;文字&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip ban&quot;&gt;&lt;p&gt;文字&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip home&quot;&gt;&lt;p&gt;文字&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip important&quot;&gt;&lt;p&gt;魔改标签4&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip ref&quot;&gt;&lt;p&gt;魔改标签5&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip ffa&quot;&gt;&lt;p&gt;魔改标签6&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip key&quot;&gt;&lt;p&gt;魔改标签7&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip socd&quot;&gt;&lt;p&gt;魔改标签8&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt;&lt;div class&#x3D;&quot;tip qq&quot;&gt;&lt;p&gt;魔改标签9&lt;&#x2F;p&gt;&lt;p&gt;&lt;&#x2F;p&gt;&lt;&#x2F;div&gt; 例子: 魔改标签1 魔改标签2 魔改标签3 魔改标签4 魔改标签5 魔改标签6 魔改标签7 魔改标签8 魔改标签9 目前此拓展会持续更新 依赖依赖如下: FontAwesome 5 / 4(除QQ样式以外的其他样式依赖项) iconfont(QQ样式的依赖项) 更新日志:2020/6/22 14:05 版本号V1.8 将QQ样式的图标替换为iconfont图标 2020/6/1720:29 版本号V1.7(跳过1.6)添加压缩过的css(more-beautiful-div-framework.min.css)提供jsdelivr的CSS地址兼容V5添加QQ样式 17:52 版本号V1.5取消pool.css依赖将jsdelivr地址换为unpkg地址 2020/6/1514:55 版本号V1.4添加socd样式 2020/6/1418:20 版本号V1.3添加ref、ffa、key样式 14:45 版本号V1.2添加important样式 12:30 版本号V1.1添加Home样式 12:00 版本号V1.0添加Wtgo、ban2种样式 10:00开启此项目","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/tags/Hexo/"}]},{"title":"从零搭建Hexo博客 3部分","slug":"从零搭建Hexo博客-3部分","date":"2020-06-01T21:29:55.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/91fe0fc4/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/91fe0fc4/index.html","excerpt":"","text":"没想到吧，3部分又来啦本次介绍:1.如何部署到Coding PagesGitHub网上一大堆，这里不再赘述2.网站加速(Neat插件)3.SEO友好(abbrlink) 部署到代码托管平台代码托管平台有很多例如:Gitee、Coding、GitHub等等他们都提供了Pages功能供用户搭建个人网站、企业网站那么本教程就以Coding Pages企业版为例 首先安装插件: 1npm install hexo-deployer-git --save 安装好后打开Hexo根目录的_config.yml文件夹滑到最下方会看见 1234# Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy: type: &#39;&#39; 这个配置在这里我们改成 12345deploy: type: &#39;git&#39; repo: coding: 仓库SSH地址,分支 github: 仓库SSH地址,分支 #如果需要多仓库就配置此项 这个仓库SSH哪里找?打开Coding官网如果你没团队就点击免费注册接着按照那个来就行注册完后进入你的团队(好像会自动进去)点击全部项目创建项目项目模板选择DevOps 项目接着填写一大堆的东西接着选择完成创建创建完成后在公告下面会有个你用户名/仓库名的东西下面有个HTTPSHTTPS旁边有个小三角点一下选择SSH接着右边会发生变化那就是SSH地址例如:git@e.coding.net:企业版用户名/仓库名.git接着我们需要选择持续集成-静态网站这时候可能提示你需要实名认证这个不会泄露随便找个或者自己弄个就好了实名完成后点击立即发布静态网站网站名称自填接下来在跳转的页面里选择设置 睡觉去了，明天还要上课，明天下午再写后续 记下xxxxxx.coding-pages.com 打开你的域名解析 这边以slqwq.cn为例 添加一个如上图的解析记录 主机记录随便 要实现slqwq.cn这样的顶级访问主机记录就为@ 要实现www.slqwq.cn也一样主机记录改为www 因此要什么前缀主机记录就改什么 这里不多讲 这边的绑定新域名写你添加记录后的域名 填写完成后点击绑定 接下来在已绑定的域名里面就会出现你绑定的域名 右边的证书状态指的是SSL 当你的SSL成功申请后应该是正常 下面的强制HTTPS为可选 当你要部署到Coding上时就输入hexo clean && hexo d -g 网站提速网站提速分为:1.CDN加速2.网页缩小 CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。CDN可有可无我来介绍几个CDN厂商:Tencent Cloud CDN(国内知名厂商的CDN，安全有保障，超稳定，提供多节点，付费，非中国内地节点免备案!)Alibaba Cloud CDN(国内知名厂商的CDN，安全有保障，超稳定，含全球(不包含内地)、国内节点，付费，国内节点需备案!)Nodecache CDN(速度理想、包含中国内地、港澳台、全球加速节点，付费，全球节点和港澳台免备案!)Vercel(Zeit)(CDN节点几乎全球，包含香港超快节点，免费，免备案!)Fast.io(使用CloudFlare高级版本节点，速度快，稍不稳定，免费，免备案!)CloudFlare(老派、稳定、国内速度不理想)Baidu Cloud Speed(与CloudFlare合作，稳定，免费、需备案!)Baidu Cloud CDN(百度云的CDN，与百度云加速并非同一线路，需备案!)Upyun CDN(知名CDN，加入又拍云联盟计划免费，需备案!) 这边我们使用网页缩小，CDN加速的话自己去挑选吧。这边提供两种方式:1.Hexo-Neat (本教程使用)2.Hexo-Gulp (配置麻烦) 第一步安装: 123npm install hexo-neat --saveorcnpm install hexo-neat --save 安装好后就可以hexo s看看效果了目前处于本地速度肯定很快现在你就可以hexo d -g来部署到Coding看看效果了 SEO优化Hexo自带的格式对SEO非常不友好，所以我们可以用hexo-abbrlink来对SEO友好首先安装插件: 1npm install hexo-abbrlink --save 安装完后在站点_config.yml的permalink: :year/:month/:day/:title/下方添加如下代码 1234# abbrlink configabbrlink: alg: crc32 # 算法：crc16(default) and crc32 rep: hex # 进制：dec(default) and hex 然后把permalink: :year/:month/:day/:title/改为: 1permalink: posts&#x2F;:abbrlink&#x2F; 然后你就可以来试一试啦本系列可能不会继续更新且看且珍惜","categories":[],"tags":[{"name":"搭建Hexo系列","slug":"搭建Hexo系列","permalink":"https://blog.slqwq.cn/tags/%E6%90%AD%E5%BB%BAHexo%E7%B3%BB%E5%88%97/"}]},{"title":"从零搭建Hexo博客 2部分","slug":"从零搭建Hexo博客-2部分","date":"2020-05-28T16:58:20.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/37890470/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/37890470/index.html","excerpt":"","text":"你们期待的2部分他来啦2部分介绍的是安装主题及插件如果要看如何安装Hexo和环境配置请到1部分 安装主题Hexo装好后默认是这是Hexo的默认还挺丑的所以我来说说咋安装主题(各大文档都有)主题的话可以去 1https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F; 这里查看在这里说不定能选到你心仪的主题哦~这边以Butterfly来演示首先查看主题文档(报错一般都可以解决)Butterfly的主题文档是:https://docs.jerryc.me/首先需要克隆主题这边Butterfly贴心的提供了开发版和正式版这边我们用正式版做演示安装方式: 1git clone -b master https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly.git themes&#x2F;Butterfly 配置主题安装好后不慌还有东西要做1.修改Hexo根目录的_config.yml的theme: 项改为theme: Butterfly2.安装pug和stylus渲染器 1npm install hexo-renderer-pug hexo-renderer-stylus --save 或者使用 1yarn add hexo-renderer-pug hexo-renderer-stylus 来安装 安装插件接下来是照抄环节:平滑升級為了主題的平滑升級, Butterfly 使用了 data files特性。 推薦把主題默認的配置文件_config.yml複製到 Hexo 工作目錄下的source/_data/butterfly.yml，如果source/_data的目錄不存在那就創建一個。 注意，如果你創建了butterfly.yml, 它將會替換主題默認配置文件_config.yml裏的配置項 (不是合併而是替換), 之後你就只需要通過git pull的方式就可以平滑地升級 theme-butterfly了。 这个问题也是对最新版本中修改_config.yml文件没效果的解释 主题配置完成后的效果: 关于主题的自定义配置这里不多BB可以参考主题文档一步步的完成 接下来就是安装插件了(我推荐的插件:hexo-neat #压缩插件hexo-abbrlink #链接缩短插件hexo-external-link #外链跳转插件 文章水完了，溜了溜了。","categories":[],"tags":[{"name":"搭建Hexo系列","slug":"搭建Hexo系列","permalink":"https://blog.slqwq.cn/tags/%E6%90%AD%E5%BB%BAHexo%E7%B3%BB%E5%88%97/"}]},{"title":"白嫖超好用的CDN(GitHub+Jsdelivr)","slug":"白嫖超好用的CDN-GitHub-Jsdelivr","date":"2020-05-28T11:03:12.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/d6df3a18/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/d6df3a18/index.html","excerpt":"","text":"hi，各位好。今天我来教大家白嫖CDN 创建仓库登陆GitHub新建一个仓库，名字随意 一定要是公开! 生成Tokens打开https://github.com/settings/tokens在页面内选择Generate new token输入密码后进行下一步Note为你的名字 权限请选择repo 选择好后点击Generate token在跳转的页面里面会有一串代码比如7513764b740b88c40afc9aa6980989e42axxxxx这串代码保存下来接下来会用 下载进入https://github.com/Molunerfinn/PicGo/releases选择一个版本(这里以2.2.2演示)下载完成后双击打开进行安装 PicGo主页面安装好后进去PicGo会出现这个界面 设置图床选择图床设置找到GitHub图床这些都设置完后进入上传区将最上面的改为GitHub图床接下来就可以上传一个文件测试了我来放一个测试图可以看到加载的速度非常快如果有问题请在下方留言!","categories":[],"tags":[]},{"title":"博客效果展示","slug":"博客效果展示","date":"2020-05-27T20:39:32.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/e8563c5f/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/e8563c5f/index.html","excerpt":"","text":"下面上效果展示 错误标签 警告标签 成功标签 默认标签 测试awaHexo真香 开始背书 海内存知己‚天涯若比邻 初级标签 Codeblock in note成功标签 Info Header信息标签 Warning Header警告标签 Danger Header危险标签 No icon note note info no-icon无图标标签 1代码框标签，效果和&#96;&#96;&#96; &#96;&#96;&#96;一样 黄色色块 左边框红色块级 纯文本测试 支持简单的 markdown 语法 支持自定义颜色 绿色 + 默认选中 黄色 + 默认选中 青色 + 默认选中 蓝色 + 默认选中 增加 减少 叉 测试 测试一下 看看答案 我是答案 标题 这是黑体字这是微软雅黑这是华文彩云三号蓝色黑体四号青色字五号灰色字 魔改标签1 魔改标签2 魔改标签3 魔改标签4 魔改标签5 魔改标签6 魔改标签7 魔改标签8 点击下载 点击下载 点击下载 点击下载 点击下载 点击下载 点击下载 点击下载","categories":[],"tags":[]},{"title":"从零开始搭建Hexo博客 1部分","slug":"从零开始搭建Hexo博客-1部分","date":"2020-05-26T21:28:18.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/7a1e39fd/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/7a1e39fd/index.html","excerpt":"","text":"第一步打开Git官网点击Downloads选择适合的版本接下来就是安装git啦~这步相信你们都会，就不多说啦~ 我确定我已经安装Git 并且未安装导致的错误由自己承担 第二步打开Node.js官网打开后选择下载LTS版本否则会报错的哦接下来又是安装 我确定我已经安装Node.js 并且未安装导致的错误由自己承担 第三步在电脑上新建一个文件夹名字随意进入创建的那个文件夹右键选择Git Bash Here在打开的窗口输入: 12345npm install hexo-cli -g等待安装完成出现终端后输入:hexo init 命令解析:npm install hexo-cli -g用来全局安装Hexohexo init用来初始化Hexo到了这步，Hexo就安装完成啦。关于主题配置、插件安装等为 从零开始搭建Hexo博客 2部分的内容敬请期待吧~","categories":[],"tags":[{"name":"搭建Hexo系列","slug":"搭建Hexo系列","permalink":"https://blog.slqwq.cn/tags/%E6%90%AD%E5%BB%BAHexo%E7%B3%BB%E5%88%97/"}]},{"title":"如何在自己网站上添加pace.js进度条","slug":"如何在自己网站上添加pace-js进度条","date":"2020-05-16T14:07:44.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/2c805e6b/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/2c805e6b/index.html","excerpt":"","text":"相信各位站长们不喜欢网站普普通通的加载方式，那么今天SL就带来如何给自己网站添加pace.js进度条的教程 首先进入https://github.hubspot.com/pace/ 看到最上面蓝色的字(Star on GitHubDownload ZIP（v版本号)点击一下后面的DownloadZIP下载下来后可能是个压缩包双击打开打开后有个文件夹，如果没有返回上一个目录将文件夹解压到你Hexo目录\\themes\\你主题\\source\\js目录下然后进入主题文件夹找到layout文件夹进入进入之后找到_partial找到head.XXX双击打开接下来在&lt;html&gt;内部添加 12&lt;script src&#x3D;&quot;&#x2F;js&#x2F;pace-1.0.2&#x2F;pace.min.js&#39;&gt;&quot;&lt;&#x2F;script&gt;&lt;ink href&#x3D;&quot;&#x2F;js&#x2F;pace-1.0.2&#x2F;themes&#x2F;blue&#x2F;pace-theme-loading-bar.css&quot; rel&#x3D;&quot;stylesheet&quot;&gt; 如果嫌弃样式不好看可以去https://github.hubspot.com/pace/docs/welcome/找个自己喜欢的记住名字，去你解压PACE的目录下找到themes进入后找到你喜欢的颜色然后在颜色文件夹找到你喜欢的样式复制名称替换本博客的pace-theme-loading-bar后缀不用换","categories":[],"tags":[]},{"title":"如何创建自己的Office E5","slug":"如何创建自己的Office-E5","date":"2020-05-14T17:38:44.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/143f7edb/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/143f7edb/index.html","excerpt":"","text":"注：本文转载自MBRjun的学习记录https://blog.mbrjun.cn/archives/10/ 教程首先点击这里，然后点击Join Now 然后登录，似乎个人和工作教育账户都可以，也可以Github登录 小编（营销号内味）用Windows Hello登录给大家演示 登录你的账户 填写信息，国家地区填你所在的（本项需如实填写，有验证，并且决定后续的绑定），公司可以随便填，下面两个必须都勾选才能成功白嫖，然后下一步 下面的信息如图填写，自己填写没白嫖到Micorosft365别找我第一组勾选个人 下面一组全部勾选，然后下一步 点击关闭即可 点击设置订阅 设置你的账户和密码 不用多说了吧 国家和地区决定了电话验证码地区 手机上接收下验证码 等待分配资源 分配完成 到这里你已经成功的白嫖到了Microsoft 365，点击查看资源开始使用 续期方法：使用Oneindex上传文件前提：OneDrive必须分配完成","categories":[],"tags":[]},{"title":"如何白嫖免费域名","slug":"如何白嫖免费域名","date":"2020-05-01T09:28:38.000Z","updated":"2020-06-24T07:56:50.086Z","comments":true,"path":"2020/posts/dcfdf76e/index.html","link":"","permalink":"https://blog.slqwq.cn/2020/posts/dcfdf76e/index.html","excerpt":"","text":"今天小编(划掉)教大家如何白嫖免费域名啦~ 第一步:下载本站提供的集装箱插件，拖动到Chrome里。低速下载(走服务器流量)：https://www.slblog.ga/集装箱.crx觉得这个下载慢可以试试高速下载哦高速下载(走CF高级版CDN)：https://cdn.slblog.ga/集装箱.crx如果无法安装请打开开发者模式并将crx解压后选择加载一解压的扩展程序然后点击集装箱插件-谷歌助手-开启代理第二步：打开www.freenom.com在方框里输入你想要的域名(带后缀哦)后缀类型：.tk，.ml，.ga，.gq，.cf这边用dodola.ml举例子点击完成，稍等一会儿他就会跳转至下一步网站加载可能稍慢接着点击将3 Months @ FREE改为12 Months @ FREEPS:Use Dns代表自定义DNSForward this domain代表将域名跳转至某域名当这一步做好后点击Continue接下来会跳转至在Enter Your Email Address填写你的域名然后点击 Verify My Email Address这时候Freenom将会给你发一封邮件在邮件内部找到Verify My Email Address点击一下，就会跳转至一个页面，下面让你填写真实信息，推荐和自己IP一样，否则可能结算报错。填写好后将下面的小方块打上勾，点击下一步(应该是的)然后跳转至一个页面，看看上面有没有Error之类的报错，如果没有，恭喜你，注册成功!下面是修改DNS教程打开https://my.freenom.com/clientarea.php?action=domains找到你刚才嫖的域名点击后面的Manage Domain然后找到Management Tools-Nameserver选择Use custom nameservers(enter below)将下面的Nameserver改成你想用的DNS这时候一年的域名就白嫖完成啦~续费也是免费的哦！ PS:白嫖的域名现在无法使用CF啦(无法解析！)","categories":[],"tags":[{"name":"白嫖党福利","slug":"白嫖党福利","permalink":"https://blog.slqwq.cn/tags/%E7%99%BD%E5%AB%96%E5%85%9A%E7%A6%8F%E5%88%A9/"}]}],"categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.slqwq.cn/tags/Hexo/"},{"name":"搭建Hexo系列","slug":"搭建Hexo系列","permalink":"https://blog.slqwq.cn/tags/%E6%90%AD%E5%BB%BAHexo%E7%B3%BB%E5%88%97/"},{"name":"白嫖党福利","slug":"白嫖党福利","permalink":"https://blog.slqwq.cn/tags/%E7%99%BD%E5%AB%96%E5%85%9A%E7%A6%8F%E5%88%A9/"}]}